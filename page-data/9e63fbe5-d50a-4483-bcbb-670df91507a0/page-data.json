{"componentChunkName":"component---src-templates-blog-template-js","path":"/9e63fbe5-d50a-4483-bcbb-670df91507a0/","result":{"data":{"cur":{"id":"f99edb00-7347-56e2-981f-50215140571f","html":"<h1 id=\"interface\" style=\"position:relative;\"><a href=\"#interface\" aria-label=\"interface permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Interface</h1>\n<h2 id=\"features\" style=\"position:relative;\"><a href=\"#features\" aria-label=\"features permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>features</h2>\n<ul>\n<li>추상 메서드만 가진다.</li>\n<li><code class=\"language-text\">Instance</code> 를 만들 수 없다.</li>\n<li>클래스처럼 데이터 타입으로 사용될 수 있다.</li>\n<li><code class=\"language-text\">implements</code> 키워드를 사용하여 클래스의 추상메서드를 구현시킨다.</li>\n</ul>","excerpt":"Interface features 추상 메서드만 가진다.  를 만들 수 없다. 클래스처럼 데이터 타입으로 사용될 수 있다.  키워드를 사용하여 클래스의 추상메서드를 구현시킨다.","frontmatter":{"date":"April 22, 2023","title":"interface","categories":"Java Learning","author":"Juhyeon Lee","emoji":null},"fields":{"slug":"/9e63fbe5-d50a-4483-bcbb-670df91507a0/"}},"next":{"id":"e71076a7-1510-5894-a040-88d6cc4d2c58","html":"<h1 id=\"상속이란\" style=\"position:relative;\"><a href=\"#%EC%83%81%EC%86%8D%EC%9D%B4%EB%9E%80\" aria-label=\"상속이란 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>상속이란</h1>\n<p>객체 지향 프로그래밍에서,\n객체들 간의 관계를 구축하는 방법이다.</p>\n<p>기존의 클래스로부터 속성과 동작을 상속받을 수 있다.</p>\n<h2 id=\"상속의-장점\" style=\"position:relative;\"><a href=\"#%EC%83%81%EC%86%8D%EC%9D%98-%EC%9E%A5%EC%A0%90\" aria-label=\"상속의 장점 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>상속의 장점</h2>\n<ul>\n<li>코드의 재사용성을 높일 수 있다.</li>\n<li>프로그램의 구조를 더욱 직관적으로 파악할 수 있다.</li>\n<li>코드의 중복을 줄여, 유지보수가 용이해진다.</li>\n</ul>\n<h2 id=\"상속의-주의점\" style=\"position:relative;\"><a href=\"#%EC%83%81%EC%86%8D%EC%9D%98-%EC%A3%BC%EC%9D%98%EC%A0%90\" aria-label=\"상속의 주의점 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>상속의 주의점</h2>\n<ul>\n<li>상위 클래스에서 변경이 일어나면 하위 클래스에서도 동시에 변경사항이 적용된다.\n<ul>\n<li>클래스간의 의존성이 높아져서 코드의 복잡도가 높아질 수 있다.</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"상속의-예\" style=\"position:relative;\"><a href=\"#%EC%83%81%EC%86%8D%EC%9D%98-%EC%98%88\" aria-label=\"상속의 예 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>상속의 예</h2>\n<table>\n<thead>\n<tr>\n<th>부모</th>\n<th>자식</th>\n<th>자식의 자식</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>학생</td>\n<td>대학생</td>\n<td></td>\n</tr>\n<tr>\n<td>물건</td>\n<td>책</td>\n<td>전자책</td>\n</tr>\n<tr>\n<td>차량</td>\n<td>승용차</td>\n<td></td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"상속과-생성자\" style=\"position:relative;\"><a href=\"#%EC%83%81%EC%86%8D%EA%B3%BC-%EC%83%9D%EC%84%B1%EC%9E%90\" aria-label=\"상속과 생성자 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>상속과 생성자</h2>\n<p>자식클래스가 생성될 때 부모 생성자가 호출된다.</p>\n<p>이 때 지정(명시적호출)하지 않으면 default 생성자가 묵시적으로 호출된다.</p>","frontmatter":{"date":"April 22, 2023","title":"Inheritance","categories":"Java Learning","author":"Juhyeon Lee","emoji":null},"fields":{"slug":"/7fa2310b-3196-4df0-ae85-57dd50eccf39/"}},"prev":{"id":"e99593cc-85a6-5ab2-bdb3-d469ecc858b4","html":"<h1 id=\"인터페이스란\" style=\"position:relative;\"><a href=\"#%EC%9D%B8%ED%84%B0%ED%8E%98%EC%9D%B4%EC%8A%A4%EB%9E%80\" aria-label=\"인터페이스란 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>인터페이스란?</h1>\n<p>접점, 창구, 접속기\n정보를 주고받을 수 있는 창구\nBracket\n서로 다른 객체와 객체가 붙여야 할 때 인터페이스를 감싸서 사용.</p>\n<h2 id=\"특징\" style=\"position:relative;\"><a href=\"#%ED%8A%B9%EC%A7%95\" aria-label=\"특징 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>특징</h2>\n<p>생성자가 없다.\n인터페이스에서는 추상 메서드를 주로 사용한다.\n클래스와 다르게 다중상속이 가능하다.\n클래스에 매달려서 사용이 된다.\n구현 메서드는 절대 가질 수 없다.</p>\n<p><strong>인터페이스의 선언법</strong></p>\n<p>interface <code class=\"language-text\">인터페이스명</code> (extends <code class=\"language-text\">interface</code> )</p>\n<h2 id=\"인터페이스의-요소\" style=\"position:relative;\"><a href=\"#%EC%9D%B8%ED%84%B0%ED%8E%98%EC%9D%B4%EC%8A%A4%EC%9D%98-%EC%9A%94%EC%86%8C\" aria-label=\"인터페이스의 요소 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>인터페이스의 요소</h2>\n<p>(extends interface)는 생략가능</p>\n<ol>\n<li>\n<p>클래스 상수가 올수 있다.</p>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token keyword\">interface</span> <span class=\"token class-name\">OOO</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">extends</span> <span class=\"token keyword\">interface</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">final</span> 자료형 상수명 <span class=\"token operator\">=</span> 초기값<span class=\"token punctuation\">;</span> <span class=\"token comment\">// 클래스 상수가 올 수 있다.</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n</li>\n<li>\n<p>추상 메서드가 올수 있다.</p>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token keyword\">interface</span> <span class=\"token class-name\">OOO</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">extends</span> <span class=\"token keyword\">interface</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">public</span> <span class=\"token keyword\">abstract</span> 반환형 메서드명<span class=\"token punctuation\">(</span>매개변수<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 추상 메사드를 가져 올 수 있다.</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n</li>\n<li>\n<p>default 메서드가 올수 있다. (Java 8이상)</p>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token keyword\">interface</span> <span class=\"token class-name\">OOO</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">extends</span> <span class=\"token keyword\">interface</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">public</span> <span class=\"token keyword\">default</span> 반환형 메서드명<span class=\"token punctuation\">(</span>매개변수<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n</li>\n<li>\n<p>클래스 메서드가 올수 있다. (Java 8이상)</p>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token keyword\">interface</span> <span class=\"token class-name\">OOO</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">extends</span> <span class=\"token keyword\">interface</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> 반환형 메서드명<span class=\"token punctuation\">(</span>매개변수<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n</li>\n</ol>\n<p>추상 클래스와 인터페이스는 존재 목적이 다르다.</p>\n<p>추상 클래스의 목적은,\n상속을 받아 기능을 이용하고, 확장시키는 데 있다.</p>\n<h2 id=\"예문\" style=\"position:relative;\"><a href=\"#%EC%98%88%EB%AC%B8\" aria-label=\"예문 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>예문</h2>\n<ol>\n<li>\n<p>예문 1</p>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token keyword\">package</span> <span class=\"token namespace\">level<span class=\"token punctuation\">.</span>level_1</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">interface</span> <span class=\"token class-name\">Engine</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">void</span> <span class=\"token function\">startEngine</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">void</span> <span class=\"token function\">stopEngine</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">Car</span> <span class=\"token keyword\">implements</span> <span class=\"token class-name\">Engine</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">startEngine</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Car start\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">stopEngine</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Car stop\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">Bike</span> <span class=\"token keyword\">implements</span> <span class=\"token class-name\">Engine</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">startEngine</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Bike start\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">stopEngine</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Bike stop\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">A</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token class-name\">Car</span> obj1 <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Car</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">Bike</span> obj2 <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Bike</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        obj1<span class=\"token punctuation\">.</span><span class=\"token function\">startEngine</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        obj1<span class=\"token punctuation\">.</span><span class=\"token function\">stopEngine</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        obj2<span class=\"token punctuation\">.</span><span class=\"token function\">startEngine</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        obj2<span class=\"token punctuation\">.</span><span class=\"token function\">stopEngine</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n</li>\n<li>\n<p>예문 2</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">package level.level_1;\n\ninterface EngineBracket {\n    public abstract void startEngine();\n    public abstract void stopEngine();\n\n}\n\nclass BenzEngine implements EngineBracket {\n    public void startEngine() {\n        System.out.println(\"benz engine start\");\n    }\n    public void stopEngine() {\n        System.out.println(\"benz engine stop\");\n    }\n}\n\nclass G90 {\n    EngineBracket myEngine;\n    G90(EngineBracket argEngine) {\n        myEngine = argEngine;\n    }\n\n    void start() {\n        myEngine.startEngine();\n    }\n    void stop() {\n        myEngine.stopEngine();\n    }\n}\n\npublic class Mafoo {\n    public static void main(String[] args) {\n        G90 car1 = new G90(new BenzEngine());\n\n        car1.start();\n        car1.stop();\n    }\n\n}\n</code></pre></div>\n</li>\n</ol>\n<p>인터페이스는 브라켓이다.</p>\n<p><img src=\"https://s3.us-west-2.amazonaws.com/secure.notion-static.com/0adcb5c8-629f-4edf-ab3b-6629e37ce51e/Untitled.png?X-Amz-Algorithm=AWS4-HMAC-SHA256&#x26;X-Amz-Content-Sha256=UNSIGNED-PAYLOAD&#x26;X-Amz-Credential=AKIAT73L2G45EIPT3X45%2F20230422%2Fus-west-2%2Fs3%2Faws4_request&#x26;X-Amz-Date=20230422T130645Z&#x26;X-Amz-Expires=3600&#x26;X-Amz-Signature=02bfc365eb41ec0310d12236150c892308fa4ff4123e8e055bfaa7312341ba12&#x26;X-Amz-SignedHeaders=host&#x26;x-id=GetObject\" alt=\"\"></p>\n<p>모듈화된 클래스를 가져다가 쓸 수 있다.\n클래스는 모듈 (Engine)\n인터페이스는 브라켓 (Adaptor)</p>\n<p>클래스끼리 상속하다 보면 프로그램은 반드시 해당 클래스를 사용해야 되는 종속관계가 생김</p>\n<p>이를 해결하기 위해서 인터페이스를 사용함.</p>","frontmatter":{"date":"April 22, 2023","title":"Interface","categories":"Java Learning","author":"Juhyeon Lee","emoji":null},"fields":{"slug":"/d9de9f9c-8c81-45a2-b04c-242f5f8fadd3/"}},"site":{"siteMetadata":{"siteUrl":"https://d556f8.netlify.io","comments":{"utterances":{"repo":"d556f8/d556f8-devlog"}}}}},"pageContext":{"slug":"/9e63fbe5-d50a-4483-bcbb-670df91507a0/","nextSlug":"/7fa2310b-3196-4df0-ae85-57dd50eccf39/","prevSlug":"/d9de9f9c-8c81-45a2-b04c-242f5f8fadd3/"}},"staticQueryHashes":["1073350324","1956554647","2938748437"],"slicesMap":{}}
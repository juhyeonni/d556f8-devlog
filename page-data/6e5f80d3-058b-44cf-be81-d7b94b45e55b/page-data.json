{"componentChunkName":"component---src-templates-blog-template-js","path":"/6e5f80d3-058b-44cf-be81-d7b94b45e55b/","result":{"data":{"cur":{"id":"1aabb4fe-f45b-551e-a87d-a18549774d55","html":"<p>이렇게 사용할 수 있다.</p>\n<ol>\n<li>\n<p><strong>예시 코드 1</strong></p>\n<hr>\n<div class=\"gatsby-highlight\" data-language=\"typescript\"><pre class=\"language-typescript\"><code class=\"language-typescript\"><span class=\"token keyword\">const</span> a <span class=\"token operator\">=</span> <span class=\"token string\">'1'</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// a type is 'string'</span>\n\n<span class=\"token keyword\">const</span> b <span class=\"token operator\">=</span> <span class=\"token operator\">+</span>a<span class=\"token punctuation\">;</span>  <span class=\"token comment\">// b type is 'number'</span></code></pre></div>\n<p><code class=\"language-text\">+</code> 연산자를 사용하면 아주 간단하게 처리가 가능하다.</p>\n</li>\n<li>\n<p><strong>예시 코드 2</strong></p>\n<hr>\n<div class=\"gatsby-highlight\" data-language=\"typescript\"><pre class=\"language-typescript\"><code class=\"language-typescript\"><span class=\"token keyword\">const</span> movie <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n\tid<span class=\"token operator\">:</span> <span class=\"token number\">1</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> id <span class=\"token operator\">=</span> <span class=\"token string\">'1'</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// form 또는 raw string</span>\n\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">typeof</span> movie<span class=\"token punctuation\">.</span>id <span class=\"token operator\">===</span> <span class=\"token operator\">+</span>id<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token builtin\">console</span><span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'movie.id는 id와 같다'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<ul>\n<li><a href=\"http://movie.id\">movie.id</a> is number</li>\n<li>id is string (Raw input)</li>\n</ul>\n</li>\n</ol>","excerpt":"이렇게 사용할 수 있다. 예시 코드 1  연산자를 사용하면 아주 간단하게 처리가 가능하다. 예시 코드 2 movie.id is number id is string (Raw input)","frontmatter":{"date":"April 22, 2023","title":"문자열을 간단하게 정수로 변환하기","categories":"Javascript Syntax","author":"Juhyeon Lee","emoji":null},"fields":{"slug":"/6e5f80d3-058b-44cf-be81-d7b94b45e55b/"}},"next":{"id":"69928e72-974b-5186-b945-504dbd956277","html":"<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">a<span class=\"token punctuation\">,</span> b</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">return</span> a <span class=\"token operator\">+</span> b<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">const</span> add <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">,</span> b<span class=\"token punctuation\">)</span> ⇒ a <span class=\"token operator\">+</span> b<span class=\"token punctuation\">;</span></code></pre></div>\n<p>nbv</p>","frontmatter":{"date":"April 22, 2023","title":"함수와 함수호출, 고차함수","categories":"Javascript Syntax","author":"Juhyeon Lee","emoji":null},"fields":{"slug":"/3cd3102e-7494-4af2-a4d4-5a7a7acfc600/"}},"prev":{"id":"7fe2fe62-2999-516f-b1ed-4be253d84453","html":"<h1 id=\"호이스팅이란\" style=\"position:relative;\"><a href=\"#%ED%98%B8%EC%9D%B4%EC%8A%A4%ED%8C%85%EC%9D%B4%EB%9E%80\" aria-label=\"호이스팅이란 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>호이스팅이란?</h1>\n<p>코드가 실행되기 전, 컴파일 단계에서 변수 및 함수 선언을 각 범위의 맨 위로 이동하는 동작을 의미한다.</p>\n<p>이게 무슨 말이냐면,\n변수와 함수가 동일한 범위 내에 선언되어 있다면 선언되기 전에 사용할 수 있다는 것이다.</p>\n<ol>\n<li>\n<p><strong>함수 선언식 1</strong></p>\n<hr>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token function\">hello</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// Output: \"Hello, World!\"</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">hello</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Hello, World!\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<ul>\n<li>위 코드에서는 함수가 선언되기 전, 코드가 실행되었다.</li>\n<li>호이스팅의 발생이 이 코드가 실행가능하게 하는 것이다.</li>\n</ul>\n</li>\n<li>\n<p><strong>함수 표현식 1</strong></p>\n<hr>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">var</span> obj <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function-variable function\">foo</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Hello, World!\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre></div>\n<ul>\n<li>이 경우에도 함수가 호이스팅되어 객체가 선언되기 이전에 함수를 호출할 수 있다.</li>\n</ul>\n</li>\n<li>\n<p><strong>함수 표현식 2</strong></p>\n<hr>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\">console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>myFunction<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// Output: undefined</span>\n\n<span class=\"token keyword\">var</span> <span class=\"token function-variable function\">myFunction</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Hello, World!\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre></div>\n<ul>\n<li><code class=\"language-text\">var myFunction</code>은 호이스팅되어 코드 상단으로 이동하지만 할당단 함수 <code class=\"language-text\">function()</code>는 호이스팅되지 않으므로 <code class=\"language-text\">myFunction</code>을 호출하면 <code class=\"language-text\">undefined</code>가 출력됩니다.</li>\n</ul>\n</li>\n</ol>","frontmatter":{"date":"April 22, 2023","title":"Hoisting","categories":"Javascript Syntax","author":"Juhyeon Lee","emoji":null},"fields":{"slug":"/b29bf411-7a41-45bb-8fa4-4eba97ef09a4/"}},"site":{"siteMetadata":{"siteUrl":"https://d556f8.netlify.io","comments":{"utterances":{"repo":"d556f8/d556f8-devlog"}}}}},"pageContext":{"slug":"/6e5f80d3-058b-44cf-be81-d7b94b45e55b/","nextSlug":"/3cd3102e-7494-4af2-a4d4-5a7a7acfc600/","prevSlug":"/b29bf411-7a41-45bb-8fa4-4eba97ef09a4/"}},"staticQueryHashes":["1073350324","1956554647","2938748437"],"slicesMap":{}}
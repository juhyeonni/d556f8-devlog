{"componentChunkName":"component---src-templates-blog-template-js","path":"/f2a7c567-4f56-4a33-83fe-187e84190484/","result":{"data":{"cur":{"id":"7bf483be-82ab-5944-b830-ea635777814e","html":"<h1 id=\"배열명pop\" style=\"position:relative;\"><a href=\"#%EB%B0%B0%EC%97%B4%EB%AA%85pop\" aria-label=\"배열명pop permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>배열명.pop()</h1>\n<ul>\n<li>\n<p>배열의 마지막 요소를 제거하고 그 값을 반환합니다. (배열에서 가장 마지막 요소를 제거할 때 사용합니다.)</p>\n</li>\n<li>\n<p>parameter: none</p>\n</li>\n<li>\n<p>return: 제거된 마지막 요소의 값</p>\n</li>\n<li>\n<p>예시</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">let</span> fruits <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'apple'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'banana'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'orange'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">let</span> lastFruit <span class=\"token operator\">=</span> fruits<span class=\"token punctuation\">.</span><span class=\"token function\">pop</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>lastFruit<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">// \"orange\"</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>fruits<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>     <span class=\"token comment\">// [\"apple\", \"banana\"]</span></code></pre></div>\n</li>\n</ul>\n<h1 id=\"배열명pushelement1--elementn\" style=\"position:relative;\"><a href=\"#%EB%B0%B0%EC%97%B4%EB%AA%85pushelement1--elementn\" aria-label=\"배열명pushelement1  elementn permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>배열명.push(element1[, …[, elementN]])</h1>\n<ul>\n<li>\n<p>배열의 끝에 하나 이상의 요소를 추가하고, 새로운 길이를 반환합니다. (배열의 끝에 새로운 요소를 추가할 때 사용합니다.)</p>\n</li>\n<li>\n<p>parameter: 추가할 하나 이상의 요소 (여러개의 요소)</p>\n</li>\n<li>\n<p>return: 새로운 길이 (배열.length)</p>\n</li>\n<li>\n<p>예시</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">let</span> numbers <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\nnumbers<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span><span class=\"token number\">4</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>numbers<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">// [1, 2, 3, 4]</span></code></pre></div>\n</li>\n</ul>\n<h1 id=\"배열명shift\" style=\"position:relative;\"><a href=\"#%EB%B0%B0%EC%97%B4%EB%AA%85shift\" aria-label=\"배열명shift permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>배열명.shift()</h1>\n<ul>\n<li>\n<p>배열의 첫 번째 요소를 제거하고, 제거된 요소를 반환합니다. (배열에서 가장 첫 번째 요소를 제거할 때 사용합니다.)</p>\n</li>\n<li>\n<p>parameter: 없음</p>\n</li>\n<li>\n<p>return: 제거된 첫 번째 요소의 값 (shift 메서드 실행 전 배열[0])</p>\n</li>\n<li>\n<p>예시</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">let</span> fruits <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'banana'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'apple'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'orange'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">let</span> firstFruit <span class=\"token operator\">=</span> fruits<span class=\"token punctuation\">.</span><span class=\"token function\">shift</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>firstFruit<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">// \"banana\"</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>fruits<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>      <span class=\"token comment\">// [\"apple\", \"orange\"]</span></code></pre></div>\n</li>\n</ul>\n<h1 id=\"배열명unshiftelementn\" style=\"position:relative;\"><a href=\"#%EB%B0%B0%EC%97%B4%EB%AA%85unshiftelementn\" aria-label=\"배열명unshiftelementn permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>배열명.unshift([…elementN])</h1>\n<ul>\n<li>\n<p>배열의 시작 부분에 하나 이상의 요소를 추가하고, 새로운 길이를 반환합니다. (배열의 시작 부분에 새로운 요소를 추가할 때 사용합니다.)</p>\n</li>\n<li>\n<p>parameter: 추가할 하나 이상의 요소</p>\n</li>\n<li>\n<p>return: 새로운 길이 (배열.length)</p>\n</li>\n<li>\n<p>예시</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">let</span> fruits <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'banana'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'apple'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'orange'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\nfruits<span class=\"token punctuation\">.</span><span class=\"token function\">unshift</span><span class=\"token punctuation\">(</span><span class=\"token string\">'grape'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>fruits<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">// [\"grape\", \"banana\", \"apple\", \"orange\"]</span></code></pre></div>\n</li>\n</ul>\n<h1 id=\"배열명splicestart-deletecount-item1-item2-\" style=\"position:relative;\"><a href=\"#%EB%B0%B0%EC%97%B4%EB%AA%85splicestart-deletecount-item1-item2-\" aria-label=\"배열명splicestart deletecount item1 item2  permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>배열명.splice(start[, deleteCount[, item1[, item2[, …]]]])</h1>\n<ul>\n<li>\n<p>배열에서 요소를 추가하거나 제거하고, 제거된 요소를 반환합니다. (배열에서 요소를 추가하거나 제거할 때 사용합니다.)</p>\n</li>\n<li>\n<p>parameters</p>\n<ul>\n<li>start: 추가 또는 제거를 시작할 인덱스 위치 (index: number)</li>\n<li>deleteCount: 제거할 요소의 수. 생략하면 start부터 끝까지 모든 요소가 제거됩니다.</li>\n<li>item1, item2, …: 추가할 요소들</li>\n</ul>\n</li>\n<li>\n<p>return 제거된 요소들의 배열</p>\n</li>\n<li>\n<p>예시</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">let</span> fruits <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'banana'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'apple'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'orange'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\nfruits<span class=\"token punctuation\">.</span><span class=\"token function\">splice</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'grape'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'pear'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>fruits<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">// [\"banana\", \"grape\", \"pear\", \"orange\"]</span>\n\nfruits<span class=\"token punctuation\">.</span><span class=\"token function\">splice</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>fruits<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">// [\"grape\", \"pear\", \"orange\"]</span>\n\nfruits<span class=\"token punctuation\">.</span><span class=\"token function\">splice</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>fruits<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">// [\"grape\"]</span></code></pre></div>\n</li>\n</ul>\n<h1 id=\"배열명slicebegin-end\" style=\"position:relative;\"><a href=\"#%EB%B0%B0%EC%97%B4%EB%AA%85slicebegin-end\" aria-label=\"배열명slicebegin end permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>배열명.slice([begin[, end]])</h1>\n<ul>\n<li>\n<p>배열의 일부분을 추출하여 새로운 배열을 반환합니다. (배열의 일부분을 추출할 때 사용합니다.)</p>\n</li>\n<li>\n<p>parameters</p>\n<ul>\n<li>begin: 추출을 시작할 인덱스 위치. 생략하면 0번 인덱스부터 추출합니다.</li>\n<li>end: 추출을 종료할 인덱스 위치. 생략하면 배열의 끝까지 추출합니다.</li>\n</ul>\n</li>\n<li>\n<p>return 추출된 일부분으로 이루어진 새로운 배열</p>\n</li>\n<li>\n<p>예시</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">let</span> fruits <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'banana'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'apple'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'orange'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'grape'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'pear'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">let</span> citrus <span class=\"token operator\">=</span> fruits<span class=\"token punctuation\">.</span><span class=\"token function\">slice</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>citrus<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">// [\"orange\", \"grape\"]</span>\n\n<span class=\"token keyword\">let</span> favorites <span class=\"token operator\">=</span> fruits<span class=\"token punctuation\">.</span><span class=\"token function\">slice</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>favorites<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">// [\"banana\", \"apple\"]</span>\n\n<span class=\"token keyword\">let</span> beginning <span class=\"token operator\">=</span> fruits<span class=\"token punctuation\">.</span><span class=\"token function\">slice</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>beginning<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">// [\"banana\", \"apple\", \"orange\"]</span>\n\n<span class=\"token keyword\">let</span> end <span class=\"token operator\">=</span> fruits<span class=\"token punctuation\">.</span><span class=\"token function\">slice</span><span class=\"token punctuation\">(</span><span class=\"token operator\">-</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>end<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">// [\"grape\", \"pear\"]</span></code></pre></div>\n</li>\n</ul>\n<h1 id=\"배열명concatvalue1-value2--valuen\" style=\"position:relative;\"><a href=\"#%EB%B0%B0%EC%97%B4%EB%AA%85concatvalue1-value2--valuen\" aria-label=\"배열명concatvalue1 value2  valuen permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>배열명.concat([value1[, value2[, …[, valueN]]]])</h1>\n<ul>\n<li>\n<p>배열에 하나 이상의 값을 추가하여 새로운 배열을 반환합니다. (여러 배열을 하나로 합칠 때 사용합니다.)</p>\n</li>\n<li>\n<p>parameter: value1, value2, …, valueN: 추가할 값들</p>\n</li>\n<li>\n<p>return 합쳐진 새로운 배열</p>\n</li>\n<li>\n<p>예시</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">let</span> fruits1 <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'apple'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'banana'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">let</span> fruits2 <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'orange'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'pear'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">let</span> allFruits <span class=\"token operator\">=</span> fruits1<span class=\"token punctuation\">.</span><span class=\"token function\">concat</span><span class=\"token punctuation\">(</span>fruits2<span class=\"token punctuation\">,</span> <span class=\"token string\">'grape'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>allFruits<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// [\"apple\", \"banana\", \"orange\", \"pear\", \"grape\"]</span></code></pre></div>\n</li>\n</ul>\n<h2 id=\"배열명everycallbackfn-thisarg\" style=\"position:relative;\"><a href=\"#%EB%B0%B0%EC%97%B4%EB%AA%85everycallbackfn-thisarg\" aria-label=\"배열명everycallbackfn thisarg permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>배열명.every(callbackFn, thisArg)</h2>\n<ul>\n<li>\n<p>배열의 모든 요소가 주어진 함수의 테스트를 통과하는지 확인합니다.</p>\n</li>\n<li>\n<p>parameters</p>\n<ul>\n<li>callbackFn: 각 요소를 검사할 함수</li>\n<li>thisArg: callbackFn 내부에서 this로 사용될 객체</li>\n</ul>\n</li>\n<li>\n<p>return 모든 요소가 함수를 통과하면 true 그렇지 않는다면 false</p>\n</li>\n<li>\n<p>예시</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> array <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">6</span><span class=\"token punctuation\">,</span> <span class=\"token number\">8</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> result <span class=\"token operator\">=</span> array<span class=\"token punctuation\">.</span><span class=\"token function\">every</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">element</span> <span class=\"token operator\">=></span> element <span class=\"token operator\">%</span> <span class=\"token number\">2</span> <span class=\"token operator\">===</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>result<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// true</span></code></pre></div>\n</li>\n</ul>\n<h2 id=\"배열명somecallbackfn-thisarg\" style=\"position:relative;\"><a href=\"#%EB%B0%B0%EC%97%B4%EB%AA%85somecallbackfn-thisarg\" aria-label=\"배열명somecallbackfn thisarg permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>배열명.some(callbackFn, thisArg)</h2>\n<ul>\n<li>\n<p>배열의 일부 요소가 주어진 함수의 테스트를 통과하는지 확인합니다.</p>\n</li>\n<li>\n<p>parameters</p>\n<ul>\n<li>callback: 각 요소를 검사할 함수</li>\n<li>thisArg: callback 내부에서 this로 사용될 객체</li>\n</ul>\n</li>\n<li>\n<p>return 1개 이상의 요소가 함수를 통과하면 true 그렇지 않는다면 false</p>\n</li>\n<li>\n<p>예시</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> array <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">6</span><span class=\"token punctuation\">,</span> <span class=\"token number\">8</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">// 3 is odd</span>\n\n<span class=\"token keyword\">const</span> result <span class=\"token operator\">=</span> array<span class=\"token punctuation\">.</span><span class=\"token function\">some</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">element</span> <span class=\"token operator\">=></span> element <span class=\"token operator\">%</span> <span class=\"token number\">2</span> <span class=\"token operator\">===</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>result<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// true</span></code></pre></div>\n</li>\n</ul>\n<h2 id=\"배열명foreachcallbackfncurrentvalue-index-array-thisarg\" style=\"position:relative;\"><a href=\"#%EB%B0%B0%EC%97%B4%EB%AA%85foreachcallbackfncurrentvalue-index-array-thisarg\" aria-label=\"배열명foreachcallbackfncurrentvalue index array thisarg permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>배열명.forEach(callbackFn(currentvalue[, index[, array]])[, thisArg)</h2>\n<ul>\n<li>\n<p>배열의 각 요소마다 주어진 함수를 실행합니다.</p>\n</li>\n<li>\n<p>parameters</p>\n<ul>\n<li>callback: 각 요소에 대해 실행할 함수\n<ul>\n<li>currentValue: 현재 처리 중인 요소의 값</li>\n<li>index: 현재 처리 중인 요소의 인덱스</li>\n<li>array: forEach()가 적용되는 배열 객체</li>\n</ul>\n</li>\n<li>thisArg: callback 내부에서 this로 사용될 객체</li>\n</ul>\n</li>\n<li>\n<p>return 없음</p>\n</li>\n<li>\n<p>예시</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> array <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'apple'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'banana'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'pear'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\narray<span class=\"token punctuation\">.</span><span class=\"token function\">forEach</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">element</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>element<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n</li>\n</ul>\n<h2 id=\"배열명mapcallbackfncurrentvalue-index-array-thisarg\" style=\"position:relative;\"><a href=\"#%EB%B0%B0%EC%97%B4%EB%AA%85mapcallbackfncurrentvalue-index-array-thisarg\" aria-label=\"배열명mapcallbackfncurrentvalue index array thisarg permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>배열명.map(callbackFn(currentValue[, index[, array]])[, thisArg])</h2>\n<ul>\n<li>배열의 모든 요소에 대해 주어진 함수를 호출한 결과를 모아 새로운 배열을 반환합니다.</li>\n</ul>\n<p>forEach와 비슷하지만 <strong>새로운 배열을 반환한다</strong>는 것에 다르다.</p>\n<ul>\n<li>\n<p>parameters</p>\n<ul>\n<li>callback: 각 요소에 대해 실행할 함수\n<ul>\n<li>currentValue: 현재 처리 중인 요소의 값</li>\n<li>index: 현재 처리 중인 요소의 인덱스</li>\n<li>array: map()이 적용되는 배열 객체</li>\n</ul>\n</li>\n<li>thisArg: callback 내부에서 this로 사용될 객체</li>\n</ul>\n</li>\n<li>\n<p>return 함수의 호출한 결과를 모은 새로운 배열</p>\n</li>\n<li>\n<p>예시</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> array <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> newArray <span class=\"token operator\">=</span> array<span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">element</span> <span class=\"token operator\">=></span> element <span class=\"token operator\">*</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>newArray<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// [2, 4, 6]</span></code></pre></div>\n</li>\n</ul>\n<h2 id=\"배열명filtercallbackfncurrentvalue-index-array-thisarg\" style=\"position:relative;\"><a href=\"#%EB%B0%B0%EC%97%B4%EB%AA%85filtercallbackfncurrentvalue-index-array-thisarg\" aria-label=\"배열명filtercallbackfncurrentvalue index array thisarg permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>배열명.filter(callbackFn(currentValue[, index[, array]])[, thisArg])</h2>\n<ul>\n<li>주어진 함수의 테스트를 통과하는 요소로 이루어진 새로운 배열을 반환합니다.</li>\n</ul>\n<p>map과 비슷하지만 <strong>주어진 condition에 따라 필터된 요소</strong>의 배열을 반환한다는 것에 다르다.</p>\n<ul>\n<li>\n<p>parameters</p>\n<ul>\n<li>callback: 각 요소에 대해 실행할 함수\n<ul>\n<li>element: 현재 처리 중인 요소의 값</li>\n<li>index: 현재 처리 중인 요소의 인덱스</li>\n<li>array: filter()가 적용되는 배열 객체</li>\n</ul>\n</li>\n<li>thisArg: callback 내부에서 this로 사용될 객체</li>\n</ul>\n</li>\n<li>\n<p>return 필터링된 요소의 배열</p>\n</li>\n<li>\n<p>예시</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> array <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> newArray <span class=\"token operator\">=</span> array<span class=\"token punctuation\">.</span><span class=\"token function\">filter</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">element</span> <span class=\"token operator\">=></span> element <span class=\"token operator\">></span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>newArray<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// [3, 4, 5]</span></code></pre></div>\n</li>\n</ul>\n<h2 id=\"배열명fillvalue-start-end\" style=\"position:relative;\"><a href=\"#%EB%B0%B0%EC%97%B4%EB%AA%85fillvalue-start-end\" aria-label=\"배열명fillvalue start end permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>배열명.fill(value, start, end)</h2>\n<ul>\n<li>\n<p>배열의 시작 인덱스부터 끝 인덱스까지 정적인 값으로 채웁니다.</p>\n</li>\n<li>\n<p>parameters</p>\n<ul>\n<li>value: 배열을 채울 값</li>\n<li>start: 시작 인덱스</li>\n<li>end: 끝 인덱스</li>\n</ul>\n</li>\n<li>\n<p>return 없음</p>\n</li>\n<li>\n<p>예시</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> array <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> newArray <span class=\"token operator\">=</span> array<span class=\"token punctuation\">.</span><span class=\"token function\">fill</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>newArray<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// [0, 0, 0]</span></code></pre></div>\n</li>\n</ul>\n<h2 id=\"배열명includesvaluetofind-fromindex\" style=\"position:relative;\"><a href=\"#%EB%B0%B0%EC%97%B4%EB%AA%85includesvaluetofind-fromindex\" aria-label=\"배열명includesvaluetofind fromindex permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>배열명.includes(valueToFind, fromIndex)</h2>\n<ul>\n<li>\n<p>배열이 특정 요소를 포함하고 있는지 확인합니다.</p>\n</li>\n<li>\n<p>parameters</p>\n<ul>\n<li>valueToFind: 찾을 요소의 값</li>\n<li>fromIndex: 검색을 시작할 인덱스 위치</li>\n</ul>\n</li>\n<li>\n<p>return 포함하고 있으면 true 아니면 false</p>\n</li>\n<li>\n<p>예시</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> array <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> hasTwo <span class=\"token operator\">=</span> array<span class=\"token punctuation\">.</span><span class=\"token function\">includes</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>hasTwo<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// true</span></code></pre></div>\n</li>\n</ul>\n<h2 id=\"배열명reducecallback-initialvalue\" style=\"position:relative;\"><a href=\"#%EB%B0%B0%EC%97%B4%EB%AA%85reducecallback-initialvalue\" aria-label=\"배열명reducecallback initialvalue permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>배열명**.reduce(callback, initialValue)**</h2>\n<ul>\n<li>\n<p>배열의 각 요소에 대해 주어진 리듀서 함수를 실행하고, 하나의 결과값을 반환합니다.</p>\n</li>\n<li>\n<p>parameters</p>\n<ul>\n<li>callback: 배열의 각 요소에 대해 실행할 함수\n<ul>\n<li>accumulator: 콜백의 반환값을 누적하는 데 사용할 변수</li>\n<li>currentValue: 현재 처리 중인 요소의 값</li>\n<li>currentIndex: 현재 처리 중인 요소의 인덱스</li>\n<li>array: reduce()가 적용되는 배열 객체</li>\n</ul>\n</li>\n<li>initialValue: 누적값의 초기값</li>\n</ul>\n</li>\n<li>\n<p>return 없음</p>\n</li>\n<li>\n<p>예시</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> numbers <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> sum <span class=\"token operator\">=</span> numbers<span class=\"token punctuation\">.</span><span class=\"token function\">reduce</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">accumulator<span class=\"token punctuation\">,</span> currentValue</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> accumulator <span class=\"token operator\">+</span> currentValue<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>sum<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 15</span></code></pre></div>\n</li>\n</ul>\n<h2 id=\"배열명reverse\" style=\"position:relative;\"><a href=\"#%EB%B0%B0%EC%97%B4%EB%AA%85reverse\" aria-label=\"배열명reverse permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>배열명**.reverse()**</h2>\n<ul>\n<li>\n<p>배열의 요소 순서를 반대로 변경합니다.</p>\n</li>\n<li>\n<p>return 순서가 변경된 해당 배열을 반환</p>\n</li>\n<li>\n<p>예시</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">let</span> arr <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\narr<span class=\"token punctuation\">.</span><span class=\"token function\">reverse</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// [5, 4, 3, 2, 1]</span>\n\n<span class=\"token keyword\">let</span> names <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"Mary\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"John\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Jane\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Mark\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\nnames<span class=\"token punctuation\">.</span><span class=\"token function\">reverse</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// [\"Mark\", \"Jane\", \"John\", \"Mary\"]</span></code></pre></div>\n</li>\n</ul>\n<h2 id=\"배열명sortcomparefunction\" style=\"position:relative;\"><a href=\"#%EB%B0%B0%EC%97%B4%EB%AA%85sortcomparefunction\" aria-label=\"배열명sortcomparefunction permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>배열명**.sort(compareFunction)**</h2>\n<ul>\n<li>배열의 요소를 정렬합니다.</li>\n<li>compareFunction: 정렬 순서를 정의하는 함수 (선택적)</li>\n</ul>\n<p>기본적으로 문자열처럼 문자를 기준으로 sort해주고 (ASCII 문자 순서로 정렬),\ncompareFunction을 정의하여 사용할 때 숫자의 오름차순 내림차순 처럼 할 수도 있다</p>\n<ul>\n<li>\n<p>return 정렬된 배열 반환</p>\n</li>\n<li>\n<p>예시</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">let</span> arr <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">9</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">6</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// 숫자의 오름차순 정렬</span>\narr<span class=\"token punctuation\">.</span><span class=\"token function\">sort</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">a<span class=\"token punctuation\">,</span> b</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> a <span class=\"token operator\">-</span> b<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// [1, 1, 2, 3, 4, 5, 6, 9]</span>\n\n<span class=\"token comment\">// 숫자의 내림차순 정렬</span>\narr<span class=\"token punctuation\">.</span><span class=\"token function\">sort</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">a<span class=\"token punctuation\">,</span> b</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> b <span class=\"token operator\">-</span> a<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// [9, 6, 5, 4, 3, 2, 1, 1]</span></code></pre></div>\n</li>\n</ul>\n<h2 id=\"배열명tostring\" style=\"position:relative;\"><a href=\"#%EB%B0%B0%EC%97%B4%EB%AA%85tostring\" aria-label=\"배열명tostring permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>배열명**.toString()**</h2>\n<ul>\n<li>\n<p>배열의 모든 요소를 문자열로 변환합니다. 각 요소는 쉼표로 구분됩니다.</p>\n</li>\n<li>\n<p>return: 배열을 표현하는 문자열을 반환</p>\n</li>\n<li>\n<p>예시</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">let</span> arr <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Array contents: \"</span> <span class=\"token operator\">+</span> arr<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// \"Array contents: 1,2,3\"</span></code></pre></div>\n</li>\n</ul>\n<h2 id=\"배열명tolocalestringlocales-options\" style=\"position:relative;\"><a href=\"#%EB%B0%B0%EC%97%B4%EB%AA%85tolocalestringlocales-options\" aria-label=\"배열명tolocalestringlocales options permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>배열명**.toLocaleString([locales[, options]]);**</h2>\n<ul>\n<li>\n<p>배열의 모든 요소를 지정된 로케일에 맞추어 문자열로 변환합니다.</p>\n</li>\n<li>\n<p>return: 서식에 맞춘 문자열을 반환</p>\n</li>\n<li>\n<p>예시</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> myArray <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">1234.56</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">789.1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> formattedArray <span class=\"token operator\">=</span> myArray<span class=\"token punctuation\">.</span><span class=\"token function\">toLocaleString</span><span class=\"token punctuation\">(</span><span class=\"token string\">'en-US'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">style</span><span class=\"token operator\">:</span> <span class=\"token string\">'currency'</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">currency</span><span class=\"token operator\">:</span> <span class=\"token string\">'USD'</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>formattedArray<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// \"$1,234.56, -$789.10, $0.00\"</span></code></pre></div>\n</li>\n</ul>\n<h2 id=\"배열명joinseparator\" style=\"position:relative;\"><a href=\"#%EB%B0%B0%EC%97%B4%EB%AA%85joinseparator\" aria-label=\"배열명joinseparator permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>배열명**.join(separator)**</h2>\n<ul>\n<li>\n<p>배열의 모든 요소를 하나의 문자열로 결합합니다.</p>\n</li>\n<li>\n<p>separator: 각 요소 사이에 삽입할 구분 기호 (선택적)</p>\n</li>\n<li>\n<p>return: “요소1<separator>요소2<separator>요소3<separator>요소4….”</p>\n</li>\n<li>\n<p>예시</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> myArray <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'apple'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'banana'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'orange'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> result <span class=\"token operator\">=</span> myArray<span class=\"token punctuation\">.</span><span class=\"token function\">join</span><span class=\"token punctuation\">(</span><span class=\"token string\">', '</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>result<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// \"apple, banana, orange\"</span></code></pre></div>\n</li>\n</ul>","excerpt":"배열명.pop() 배열의 마지막 요소를 제거하고 그 값을 반환합니다. (배열에서 가장 마지막 요소를 제거할 때 사용합니다.) parameter: none return: 제거된 마지막 요소의 값 예시 배열명.push(element1[, …[, elementN]]) 배열의 끝에 하나 이상의 요소를 추가하고, 새로운 길이를 반환합니다. (배열의 끝에 새로운 요소를 추가할 때 사용합니다.) parameter: 추가할 하나 이상의 요소 (여러개의 요소) return: 새로운 길이 (배열.length) 예시 배열명.shift() 배열의 첫 번째 요소를 제거하고, 제거된 요소를 반환합니다. (배열에서 가장 첫 번째 요소를 제거할 때 사용합니다.) parameter: 없음 return: 제거된 첫 번째 요소의 값 (shift 메서드 실행 전 배열[0]) 예시 배열명.unshift([…elementN]) 배열의 시작 부분에 하나 이상의 요소를 추가하고, 새로운 길이를 반환합니다. (배열의 시작 부…","frontmatter":{"date":"April 03, 2023","title":"배열 메소드","categories":"Javascript Learning","author":"Juhyeon Lee","emoji":null},"fields":{"slug":"/f2a7c567-4f56-4a33-83fe-187e84190484/"}},"next":{"id":"9f16afb4-cbc0-54ae-ad7e-6007988d9d95","html":"<h1 id=\"dom-객체\" style=\"position:relative;\"><a href=\"#dom-%EA%B0%9D%EC%B2%B4\" aria-label=\"dom 객체 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>DOM 객체</h1>\n<h2 id=\"프로그램-절차-작성시-원칙\" style=\"position:relative;\"><a href=\"#%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%A8-%EC%A0%88%EC%B0%A8-%EC%9E%91%EC%84%B1%EC%8B%9C-%EC%9B%90%EC%B9%99\" aria-label=\"프로그램 절차 작성시 원칙 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>프로그램 절차 작성시 원칙</h2>\n<ol>\n<li>프로그램의 절차의 갯수는 정해져 있어야 함</li>\n<li>각 절차는 항상 같은 내용이어야 한다</li>\n<li>모든 가능성을 고려해야 한다</li>\n<li>예시는 절차를 검증하는데 사용(가능한 다양한 예시 준비)</li>\n</ol>\n<h2 id=\"dom-document-object-model\" style=\"position:relative;\"><a href=\"#dom-document-object-model\" aria-label=\"dom document object model permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>DOM (Document Object Model)</h2>\n<ul>\n<li>html을 객체로 처리하기 위한 방법중 하나, tree형식으로 html의 계층구조를 표현</li>\n<li>JS에서 DOM 사용\n<ol>\n<li>HTML DOM 객체의 선택\n<ul>\n<li><code class=\"language-text\">document.querySelector()</code>\n<ul>\n<li>Element type으로 변환: 선택된 html dom 객체 하나</li>\n<li>Element = 시작태크+내용+종료태그</li>\n</ul>\n</li>\n<li><code class=\"language-text\">document.querySelectorAll()</code></li>\n<li><code class=\"language-text\">document.getElementById()</code></li>\n<li><code class=\"language-text\">document.getElementsByTagName()</code></li>\n<li><code class=\"language-text\">document.getElementsByClassName()</code></li>\n<li>선택자: CSS선택자 유사\n<ul>\n<li>#아이디명</li>\n<li>.클래스명</li>\n<li>태그명</li>\n<li>Parent > Child</li>\n<li>P C</li>\n<li>C1 ~ C2</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>조작 / 이벤트\n<ul>\n<li><code class=\"language-text\">태그 엘리먼트.addEventListener(e, 리스너함수)</code>\n<ul>\n<li>리스너함수</li>\n<li><code class=\"language-text\">const 리스너함수 = (e) ⇒ { … }</code>\n<ul>\n<li>event.target: 이벤트가 발생한 엘리먼트</li>\n<li>event.target.value: 이벤트가 발생한 엘리먼트가 가지고 있는 값\n<ul>\n<li><code class=\"language-text\">&lt;input></code>, <code class=\"language-text\">&lt;textarea></code>, <code class=\"language-text\">&lt;select></code></li>\n</ul>\n</li>\n</ul>\n</li>\n<li><code class=\"language-text\">const 리스너함수 = e ⇒ { … }</code></li>\n</ul>\n</li>\n</ul>\n</li>\n<li>반영</li>\n</ol>\n</li>\n</ul>\n<h3 id=\"window-객체\" style=\"position:relative;\"><a href=\"#window-%EA%B0%9D%EC%B2%B4\" aria-label=\"window 객체 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>window 객체</h3>\n<ul>\n<li>생략가능</li>\n<li>document 객체</li>\n<li>navigation 객체</li>\n<li>location 객체</li>\n<li>history 객체</li>\n<li>methods\n<ul>\n<li>사용자로부터 입력받기</li>\n<li>alert(’내용’)\n<ul>\n<li>확인 버튼: 반환값은 <code class=\"language-text\">undefined</code></li>\n</ul>\n</li>\n<li>prompt(’내용’)\n<ul>\n<li>확인 / 취소 버튼</li>\n<li>반환값: 사용자 입력값 또는 <code class=\"language-text\">null</code></li>\n</ul>\n</li>\n<li>confirm(’내용)\n<ul>\n<li>확인 / 취소</li>\n<li>반환값: 확인 → <code class=\"language-text\">true</code>, 취소 → <code class=\"language-text\">false</code></li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>","frontmatter":{"date":"March 30, 2023","title":"DOM 객체","categories":"Javascript Learning","author":"Juhyeon Lee","emoji":null},"fields":{"slug":"/6f68b661-dbcc-4163-9f0e-37da2117e216/"}},"prev":{"id":"d7fd39eb-4ff2-5fc6-99ac-3435d3c31dd5","html":"<h1 id=\"데이터-조---회의-기본\" style=\"position:relative;\"><a href=\"#%EB%8D%B0%EC%9D%B4%ED%84%B0-%EC%A1%B0---%ED%9A%8C%EC%9D%98-%EA%B8%B0%EB%B3%B8\" aria-label=\"데이터 조   회의 기본 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>데이터 조   회의 기본</h1>\n<h2 id=\"select-문의-기본-문법\" style=\"position:relative;\"><a href=\"#select-%EB%AC%B8%EC%9D%98-%EA%B8%B0%EB%B3%B8-%EB%AC%B8%EB%B2%95\" aria-label=\"select 문의 기본 문법 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>SELECT 문의 기본 문법</h2>\n<p><img src=\"https://s3.us-west-2.amazonaws.com/secure.notion-static.com/85a087ee-9c9c-4db2-ac06-6d936125aba5/Untitled.png?X-Amz-Algorithm=AWS4-HMAC-SHA256&#x26;X-Amz-Content-Sha256=UNSIGNED-PAYLOAD&#x26;X-Amz-Credential=AKIAT73L2G45EIPT3X45%2F20230422%2Fus-west-2%2Fs3%2Faws4_request&#x26;X-Amz-Date=20230422T130626Z&#x26;X-Amz-Expires=3600&#x26;X-Amz-Signature=877fed9c621bc1dca7a3d2c9465ac9b24b0770e4b8143bc1828d431bba38db2b&#x26;X-Amz-SignedHeaders=host&#x26;x-id=GetObject\" alt=\"\"></p>\n<ul>\n<li>각 항목에 대해 정리하면 다음과 같음</li>\n</ul>\n<ol>\n<li><strong>굵은 글자</strong>로 표현된 부분은 필수로 입력해야 하는 항목</li>\n<li>굵은 글자에 <u>밑줄이 그어진 항목</u>은 시스템에서 명령문을 실행하기 위해 미리 정해 놓은 예약어라는 표시이다.</li>\n</ol>\n<p>**예약어(keyword)**는 시스템이 미리 지정해놓은 것이므로 테이블을 만들 때도 이름으로 사용할 수 없습니다.\n3. 대괄호<code class=\"language-text\">[]</code> 안에 들어간 항목은 선택 사항으로 생략할 수 있다.\n4. 문장이 끝났다는 의미로 세미콜론 <code class=\"language-text\">;</code> 을 입력한다.</p>\n<h3 id=\"sql-문-작성-규칙\" style=\"position:relative;\"><a href=\"#sql-%EB%AC%B8-%EC%9E%91%EC%84%B1-%EA%B7%9C%EC%B9%99\" aria-label=\"sql 문 작성 규칙 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>SQL 문 작성 규칙</h3>\n<ul>\n<li>권장이 표시된 규칙은 강제는 아니지만 실무에서 지키면 좋은 내용\n<ul>\n<li>결국은 반드시 알아야 하는 내용</li>\n</ul>\n</li>\n</ul>\n<ol>\n<li>대 소문자는 구별하지 않는다.</li>\n<li>한 줄 또는 여러 줄로 작성할 수 있다. (줄로 처리가 바뀌진 않는다.)\n<ul>\n<li>가독성과 편집의 용이성을 위해 내용이 달라지면 줄을 나눈다. <strong><code class=\"language-text\">권장</code></strong></li>\n</ul>\n</li>\n<li>코드 수준에 따른 들여쓰기는 SQL문장을 좀 더 읽기 쉽게한다. <strong><code class=\"language-text\">권장</code></strong></li>\n<li>명령어는 대문자, 나머지는 소문자로 작성하면 가독성에 도움이 된다. <strong><code class=\"language-text\">권장</code></strong></li>\n</ol>\n<h3 id=\"예시문제\" style=\"position:relative;\"><a href=\"#%EC%98%88%EC%8B%9C%EB%AC%B8%EC%A0%9C\" aria-label=\"예시문제 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>예시문제</h3>\n<ol>\n<li>\n<p><strong>한 테이블의 전체 데이터 조회하기</strong></p>\n<ol>\n<li>\n<p><strong>코드</strong></p>\n<hr>\n<div class=\"gatsby-highlight\" data-language=\"sql\"><pre class=\"language-sql\"><code class=\"language-sql\"><span class=\"token keyword\">SELECT</span> <span class=\"token operator\">*</span>\n<span class=\"token keyword\">FROM</span> employees_b<span class=\"token punctuation\">;</span></code></pre></div>\n<p><img src=\"https://s3.us-west-2.amazonaws.com/secure.notion-static.com/a612a30f-b7d8-4464-a13e-fea54ba7659b/Untitled.png?X-Amz-Algorithm=AWS4-HMAC-SHA256&#x26;X-Amz-Content-Sha256=UNSIGNED-PAYLOAD&#x26;X-Amz-Credential=AKIAT73L2G45EIPT3X45%2F20230422%2Fus-west-2%2Fs3%2Faws4_request&#x26;X-Amz-Date=20230422T130630Z&#x26;X-Amz-Expires=3600&#x26;X-Amz-Signature=d675b199a32c82938a15adaf0d655e5ca44d6c1a955ead037c3267e6f66f622b&#x26;X-Amz-SignedHeaders=host&#x26;x-id=GetObject\" alt=\"\"></p>\n</li>\n</ol>\n</li>\n<li>\n<p><strong>활용한 코드</strong></p>\n<ol>\n<li>\n<p><strong>코드</strong></p>\n<hr>\n<div class=\"gatsby-highlight\" data-language=\"sql\"><pre class=\"language-sql\"><code class=\"language-sql\"><span class=\"token comment\">/**\n* 모든 employees_b의 데이터들 (alias A)과 , \n* 모든 departments_b의 데이터들 중 (department_id == 20)인 데이터와 비교하는 SQL문이다.\n* A의 department_id 와 B.department_id 같은 데이터를 조회한다.\n*/</span>\n<span class=\"token keyword\">SELECT</span> <span class=\"token operator\">*</span> \n<span class=\"token keyword\">FROM</span> employees_b A<span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">(</span>\n        <span class=\"token keyword\">SELECT</span> <span class=\"token operator\">*</span>\n        <span class=\"token keyword\">FROM</span> departments_b\n        <span class=\"token keyword\">WHERE</span> department_id <span class=\"token operator\">=</span> <span class=\"token number\">20</span>\n    <span class=\"token punctuation\">)</span> B\n<span class=\"token keyword\">WHERE</span> A<span class=\"token punctuation\">.</span>department_id <span class=\"token operator\">=</span> B<span class=\"token punctuation\">.</span>department_id<span class=\"token punctuation\">;</span></code></pre></div>\n<p><img src=\"https://s3.us-west-2.amazonaws.com/secure.notion-static.com/a2bde620-527c-4976-b277-d40bfa281cdb/Untitled.png?X-Amz-Algorithm=AWS4-HMAC-SHA256&#x26;X-Amz-Content-Sha256=UNSIGNED-PAYLOAD&#x26;X-Amz-Credential=AKIAT73L2G45EIPT3X45%2F20230422%2Fus-west-2%2Fs3%2Faws4_request&#x26;X-Amz-Date=20230422T130631Z&#x26;X-Amz-Expires=3600&#x26;X-Amz-Signature=9808265845880588512019329b682fd58fb3d94146032dfe8490290b5497ffbb&#x26;X-Amz-SignedHeaders=host&#x26;x-id=GetObject\" alt=\"\"></p>\n</li>\n</ol>\n</li>\n<li>\n<p><strong>원하는 열만 조회하고 정렬하기</strong></p>\n<ol>\n<li>\n<p><strong>코드</strong></p>\n<hr>\n<div class=\"gatsby-highlight\" data-language=\"sql\"><pre class=\"language-sql\"><code class=\"language-sql\"><span class=\"token comment\">/**\n* employees_b의 모든 데이터 중 employee_id, first_name, last_name 열만 조회한다.\n*/</span>\n<span class=\"token keyword\">SELECT</span> employee_id<span class=\"token punctuation\">,</span> first_name<span class=\"token punctuation\">,</span> last_name\n<span class=\"token keyword\">FROM</span> employees_b<span class=\"token punctuation\">;</span></code></pre></div>\n<p><img src=\"https://s3.us-west-2.amazonaws.com/secure.notion-static.com/954e60c3-9e1c-4410-919b-14f9c7bfb6fd/Untitled.png?X-Amz-Algorithm=AWS4-HMAC-SHA256&#x26;X-Amz-Content-Sha256=UNSIGNED-PAYLOAD&#x26;X-Amz-Credential=AKIAT73L2G45EIPT3X45%2F20230422%2Fus-west-2%2Fs3%2Faws4_request&#x26;X-Amz-Date=20230422T130635Z&#x26;X-Amz-Expires=3600&#x26;X-Amz-Signature=4b21dd4a175743aabc6c9372fc66beccfa652acdfd985fdce239c33d26a70841&#x26;X-Amz-SignedHeaders=host&#x26;x-id=GetObject\" alt=\"\"></p>\n</li>\n</ol>\n</li>\n<li>\n<p><strong>원하는 열만 조회하고 정렬하기</strong></p>\n<ol>\n<li>\n<p><strong>코드</strong></p>\n<hr>\n<div class=\"gatsby-highlight\" data-language=\"sql\"><pre class=\"language-sql\"><code class=\"language-sql\"><span class=\"token comment\">/** \n* ORDER BY 출력 순서를 정하는 명령어이다.\n* ASC 오름차순\n* DESC 내림차순\n*/</span>\n<span class=\"token keyword\">SELECT</span> employee_id<span class=\"token punctuation\">,</span> first_name<span class=\"token punctuation\">,</span> last_name\n<span class=\"token keyword\">FROM</span> employees_b\n<span class=\"token keyword\">ORDER</span> <span class=\"token keyword\">BY</span> employee_id <span class=\"token keyword\">DESC</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p><img src=\"https://s3.us-west-2.amazonaws.com/secure.notion-static.com/c7602bdb-29d0-4947-b25a-254304137e99/Untitled.png?X-Amz-Algorithm=AWS4-HMAC-SHA256&#x26;X-Amz-Content-Sha256=UNSIGNED-PAYLOAD&#x26;X-Amz-Credential=AKIAT73L2G45EIPT3X45%2F20230422%2Fus-west-2%2Fs3%2Faws4_request&#x26;X-Amz-Date=20230422T130636Z&#x26;X-Amz-Expires=3600&#x26;X-Amz-Signature=93b9d45d4d87c739aebd8083a44ccf78b7627c3d69a9ae3bc6213b512e836813&#x26;X-Amz-SignedHeaders=host&#x26;x-id=GetObject\" alt=\"\"></p>\n</li>\n</ol>\n</li>\n<li>\n<p><strong>중복된 출력 값 제거하기</strong></p>\n<ol>\n<li>\n<p><strong>코드</strong></p>\n<hr>\n<div class=\"gatsby-highlight\" data-language=\"sql\"><pre class=\"language-sql\"><code class=\"language-sql\"><span class=\"token comment\">/**\n* employees_b의 테이블에서 job_id 열\n*/</span>\n<span class=\"token keyword\">SELECT</span> job_id\n<span class=\"token keyword\">FROM</span> employees_b<span class=\"token punctuation\">;</span></code></pre></div>\n<p><img src=\"https://s3.us-west-2.amazonaws.com/secure.notion-static.com/2bd34aa1-3780-48bd-99ba-9d3b5bdc7599/Untitled.png?X-Amz-Algorithm=AWS4-HMAC-SHA256&#x26;X-Amz-Content-Sha256=UNSIGNED-PAYLOAD&#x26;X-Amz-Credential=AKIAT73L2G45EIPT3X45%2F20230422%2Fus-west-2%2Fs3%2Faws4_request&#x26;X-Amz-Date=20230422T130638Z&#x26;X-Amz-Expires=3600&#x26;X-Amz-Signature=811b33b777a308f3170de55e6974f3d30103f25700ee4a32360681e73d9b30d8&#x26;X-Amz-SignedHeaders=host&#x26;x-id=GetObject\" alt=\"\"></p>\n</li>\n</ol>\n</li>\n<li>\n<p><strong>SQL 문을 효율적으로 작성하기 위해 별칭 사용하기</strong></p>\n<p><code class=\"language-text\">AS</code></p>\n<ul>\n<li>열 이름을 변경하려면 AS 접속사를 사용한다.</li>\n<li><code class=\"language-text\">AS</code> 는 생략할 수 있음</li>\n<li>별치에 공백, 특수문자, 대소문자 등을 사용하려면 <code class=\"language-text\">“”</code> (따옴표)를 사용해야 한다.</li>\n<li>길어지거나 복잡해질 때 논리오류를 피하기 위해 사용할 수도 있다.</li>\n</ul>\n<ol>\n<li>\n<p><strong>코드</strong></p>\n<hr>\n<div class=\"gatsby-highlight\" data-language=\"sql\"><pre class=\"language-sql\"><code class=\"language-sql\"><span class=\"token keyword\">SELECT</span> employee_id <span class=\"token keyword\">AS</span> 사원번호<span class=\"token punctuation\">,</span> first_name <span class=\"token keyword\">AS</span> 이름<span class=\"token punctuation\">,</span> last_name <span class=\"token keyword\">AS</span> 성\n<span class=\"token keyword\">FROM</span> employees_b<span class=\"token punctuation\">;</span></code></pre></div>\n<p><img src=\"https://s3.us-west-2.amazonaws.com/secure.notion-static.com/3663be6d-069f-4e58-9f7d-07825a9859d0/Untitled.png?X-Amz-Algorithm=AWS4-HMAC-SHA256&#x26;X-Amz-Content-Sha256=UNSIGNED-PAYLOAD&#x26;X-Amz-Credential=AKIAT73L2G45EIPT3X45%2F20230422%2Fus-west-2%2Fs3%2Faws4_request&#x26;X-Amz-Date=20230422T130639Z&#x26;X-Amz-Expires=3600&#x26;X-Amz-Signature=331e37e07d1ebe9c84db16e5c5e5254140036c315479aba8c65b93e8b95d4395&#x26;X-Amz-SignedHeaders=host&#x26;x-id=GetObject\" alt=\"\"></p>\n</li>\n</ol>\n</li>\n<li>\n<p><strong>데이터 값 연결하기</strong></p>\n<ol>\n<li>\n<p><strong>코드</strong></p>\n<hr>\n<div class=\"gatsby-highlight\" data-language=\"sql\"><pre class=\"language-sql\"><code class=\"language-sql\"><span class=\"token keyword\">SELECT</span> employee_id<span class=\"token punctuation\">,</span> first_name <span class=\"token operator\">||</span> last_name\n<span class=\"token keyword\">FROM</span> employees_b<span class=\"token punctuation\">;</span></code></pre></div>\n<p><img src=\"https://s3.us-west-2.amazonaws.com/secure.notion-static.com/906051ef-4cd3-4524-b1ad-b793f2eb08b6/Untitled.png?X-Amz-Algorithm=AWS4-HMAC-SHA256&#x26;X-Amz-Content-Sha256=UNSIGNED-PAYLOAD&#x26;X-Amz-Credential=AKIAT73L2G45EIPT3X45%2F20230422%2Fus-west-2%2Fs3%2Faws4_request&#x26;X-Amz-Date=20230422T130640Z&#x26;X-Amz-Expires=3600&#x26;X-Amz-Signature=c66e560e4f9d5a7ad498274ddec3348bd5fe5b8d0423f46905db4c652e15d395&#x26;X-Amz-SignedHeaders=host&#x26;x-id=GetObject\" alt=\"\"></p>\n<div class=\"gatsby-highlight\" data-language=\"sql\"><pre class=\"language-sql\"><code class=\"language-sql\"><span class=\"token keyword\">SELECT</span> employee_id<span class=\"token punctuation\">,</span> first_name <span class=\"token operator\">||</span> <span class=\"token string\">' '</span> <span class=\"token operator\">||</span> last_name\n<span class=\"token keyword\">FROM</span> employees_b<span class=\"token punctuation\">;</span></code></pre></div>\n<p><img src=\"https://s3.us-west-2.amazonaws.com/secure.notion-static.com/42967cd8-7d6b-46d7-a61c-92820c25e6b8/Untitled.png?X-Amz-Algorithm=AWS4-HMAC-SHA256&#x26;X-Amz-Content-Sha256=UNSIGNED-PAYLOAD&#x26;X-Amz-Credential=AKIAT73L2G45EIPT3X45%2F20230422%2Fus-west-2%2Fs3%2Faws4_request&#x26;X-Amz-Date=20230422T130640Z&#x26;X-Amz-Expires=3600&#x26;X-Amz-Signature=524c9ec4aef4e61f038c923b86ed3996fbdf76cc552d422841137e8abeac85ef&#x26;X-Amz-SignedHeaders=host&#x26;x-id=GetObject\" alt=\"\"></p>\n<div class=\"gatsby-highlight\" data-language=\"sql\"><pre class=\"language-sql\"><code class=\"language-sql\"><span class=\"token comment\">/**\n* employees 테이블에서 employee_id를 출력,\n* first_name + ' ' + last_name을 출력\n* email + '@' + 'company.com'을 출력\n*/</span>\n<span class=\"token keyword\">SELECT</span> employee_id<span class=\"token punctuation\">,</span>\n    first_name <span class=\"token operator\">||</span> <span class=\"token string\">' '</span> <span class=\"token operator\">||</span> last_name<span class=\"token punctuation\">,</span>\n    email <span class=\"token operator\">||</span> <span class=\"token string\">'@'</span> <span class=\"token operator\">||</span> <span class=\"token string\">'company.com'</span>\n<span class=\"token keyword\">FROM</span> employees_b<span class=\"token punctuation\">;</span></code></pre></div>\n<p><img src=\"https://s3.us-west-2.amazonaws.com/secure.notion-static.com/1f3e4b9e-01ad-4f36-b46a-cf350dc88f17/Untitled.png?X-Amz-Algorithm=AWS4-HMAC-SHA256&#x26;X-Amz-Content-Sha256=UNSIGNED-PAYLOAD&#x26;X-Amz-Credential=AKIAT73L2G45EIPT3X45%2F20230422%2Fus-west-2%2Fs3%2Faws4_request&#x26;X-Amz-Date=20230422T130640Z&#x26;X-Amz-Expires=3600&#x26;X-Amz-Signature=9447be97e888cb0fc0e99d6da86c8a17cea13ea349b183614206231360d49484&#x26;X-Amz-SignedHeaders=host&#x26;x-id=GetObject\" alt=\"\"></p>\n</li>\n</ol>\n</li>\n<li>\n<p><strong>산술 처리하기 : 데이터 값끼리 계산</strong></p>\n<ol>\n<li>\n<p><strong>코드</strong></p>\n<hr>\n<div class=\"gatsby-highlight\" data-language=\"sql\"><pre class=\"language-sql\"><code class=\"language-sql\"><span class=\"token keyword\">SELECT</span> employee_id<span class=\"token punctuation\">,</span> salary<span class=\"token punctuation\">,</span> salary<span class=\"token operator\">+</span><span class=\"token number\">500</span><span class=\"token punctuation\">,</span> salary<span class=\"token operator\">-</span><span class=\"token number\">100</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span>salary<span class=\"token operator\">*</span><span class=\"token number\">1.1</span><span class=\"token punctuation\">)</span><span class=\"token operator\">/</span><span class=\"token number\">2</span>\n<span class=\"token keyword\">FROM</span> employees_b<span class=\"token punctuation\">;</span></code></pre></div>\n<p><img src=\"https://s3.us-west-2.amazonaws.com/secure.notion-static.com/3c9e2ba0-f9fb-422e-95e7-229edbc73103/Untitled.png?X-Amz-Algorithm=AWS4-HMAC-SHA256&#x26;X-Amz-Content-Sha256=UNSIGNED-PAYLOAD&#x26;X-Amz-Credential=AKIAT73L2G45EIPT3X45%2F20230422%2Fus-west-2%2Fs3%2Faws4_request&#x26;X-Amz-Date=20230422T130641Z&#x26;X-Amz-Expires=3600&#x26;X-Amz-Signature=c15382e4940a5365d366138e9264e0c7b24b8551a7181ba1474895796aa74fe5&#x26;X-Amz-SignedHeaders=host&#x26;x-id=GetObject\" alt=\"\"></p>\n<div class=\"gatsby-highlight\" data-language=\"sql\"><pre class=\"language-sql\"><code class=\"language-sql\"><span class=\"token comment\">/** \n* employees에서 employee_id를 ‘사원번호’,\n* salary를 ‘급여’,\n* salary+500을 ‘추가급여’,\n* salary-100을 ‘인하급여’,\n* (salary*1.1)/2를 ‘조정급여’로 출력\n*/</span>\n<span class=\"token keyword\">SELECT</span> employee_id <span class=\"token keyword\">AS</span> 사원번호<span class=\"token punctuation\">,</span>\n    salary <span class=\"token keyword\">AS</span> 급여<span class=\"token punctuation\">,</span>\n    salary<span class=\"token operator\">+</span><span class=\"token number\">500</span> <span class=\"token keyword\">AS</span> 추가급여<span class=\"token punctuation\">,</span>\n    salary<span class=\"token operator\">-</span><span class=\"token number\">100</span> <span class=\"token keyword\">AS</span> 인하급여<span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">(</span>salary<span class=\"token operator\">*</span><span class=\"token number\">1.1</span><span class=\"token punctuation\">)</span><span class=\"token operator\">/</span><span class=\"token number\">2</span> <span class=\"token keyword\">AS</span> 조정급여\n<span class=\"token keyword\">FROM</span> employees_b<span class=\"token punctuation\">;</span></code></pre></div>\n<p><img src=\"https://s3.us-west-2.amazonaws.com/secure.notion-static.com/8162efd6-ca87-4356-89b8-5323babf9cd4/Untitled.png?X-Amz-Algorithm=AWS4-HMAC-SHA256&#x26;X-Amz-Content-Sha256=UNSIGNED-PAYLOAD&#x26;X-Amz-Credential=AKIAT73L2G45EIPT3X45%2F20230422%2Fus-west-2%2Fs3%2Faws4_request&#x26;X-Amz-Date=20230422T130641Z&#x26;X-Amz-Expires=3600&#x26;X-Amz-Signature=cc3a4c4044040979b2ec1aacc0ca33614f90e006df3d4a6e4b8b0bcb200a8e41&#x26;X-Amz-SignedHeaders=host&#x26;x-id=GetObject\" alt=\"\"></p>\n</li>\n</ol>\n</li>\n<li>\n<p><strong>WHERE 조건 절을 활용한 데이터 검색</strong></p>\n<ul>\n<li>\n<p>where 절을 사용하여 조회하려는 조건을 지정할 수 있음</p>\n</li>\n<li>\n<p>where 절은 FROM 절 다음에 위치함</p>\n</li>\n<li>\n<p>수행될 조건 절에는 비교 연산자, SQL 연산자, 논리 연산자, 열 이름, 표현식, 숫자, 문자 등을 쓸 수 있음.</p>\n</li>\n<li>\n<p><strong>연산자의 종류x</strong></p>\n<table>\n<thead>\n<tr>\n<th>연산자 종류</th>\n<th>설명</th>\n<th>예시</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>비교 연산자</td>\n<td>조건을 비교</td>\n<td>=, &#x3C;, > 등</td>\n</tr>\n<tr>\n<td>SQL 연산자</td>\n<td>조건 비교를 확장</td>\n<td>BETWEEN, IN 등</td>\n</tr>\n<tr>\n<td>논리 연산자</td>\n<td>조건 논리를 연결</td>\n<td>AND, OR 등</td>\n</tr>\n</tbody>\n</table>\n</li>\n</ul>\n<ol>\n<li>\n<p><strong>코드</strong></p>\n<hr>\n<div class=\"gatsby-highlight\" data-language=\"sql\"><pre class=\"language-sql\"><code class=\"language-sql\"><span class=\"token comment\">/**\n* employees 테이블에서 first_name이 'David'인 직원 정보를 출력\n*/</span>\n<span class=\"token keyword\">SELECT</span> <span class=\"token operator\">*</span> \n<span class=\"token keyword\">FROM</span> employees_b\n<span class=\"token keyword\">WHERE</span> first_name <span class=\"token operator\">=</span> <span class=\"token string\">'David'</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p><img src=\"https://s3.us-west-2.amazonaws.com/secure.notion-static.com/ed1fd0e9-0306-469e-ba23-31cb6045b067/Untitled.png?X-Amz-Algorithm=AWS4-HMAC-SHA256&#x26;X-Amz-Content-Sha256=UNSIGNED-PAYLOAD&#x26;X-Amz-Credential=AKIAT73L2G45EIPT3X45%2F20230422%2Fus-west-2%2Fs3%2Faws4_request&#x26;X-Amz-Date=20230422T130645Z&#x26;X-Amz-Expires=3600&#x26;X-Amz-Signature=89bb5455f51a21ead188c064c55c82db6ccfadab1c1738bbb8c3151b3cc5a7d6&#x26;X-Amz-SignedHeaders=host&#x26;x-id=GetObject\" alt=\"\"></p>\n</li>\n</ol>\n</li>\n<li>\n<p><strong>비교 연산자 : 비교 조회 조건 주기</strong></p>\n<ol>\n<li>\n<p><strong>코드</strong></p>\n<hr>\n<div class=\"gatsby-highlight\" data-language=\"sql\"><pre class=\"language-sql\"><code class=\"language-sql\"><span class=\"token comment\">/**\n* employees 테이블에서 employee_id를 출력하고,\n* first_name과 last_name을 붙여서 출력\n*/</span>\n<span class=\"token keyword\">SELECT</span> <span class=\"token operator\">*</span>\n<span class=\"token keyword\">FROM</span> employees_b\n<span class=\"token keyword\">WHERE</span> employee_id <span class=\"token operator\">>=</span> <span class=\"token number\">105</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p><img src=\"https://s3.us-west-2.amazonaws.com/secure.notion-static.com/1f9374c8-3e43-4e20-8fa9-72a0bd05e6de/Untitled.png?X-Amz-Algorithm=AWS4-HMAC-SHA256&#x26;X-Amz-Content-Sha256=UNSIGNED-PAYLOAD&#x26;X-Amz-Credential=AKIAT73L2G45EIPT3X45%2F20230422%2Fus-west-2%2Fs3%2Faws4_request&#x26;X-Amz-Date=20230422T130646Z&#x26;X-Amz-Expires=3600&#x26;X-Amz-Signature=eff86486ca3f7346da25a01172bf605b943268615d53b429ec8d313c08fb6155&#x26;X-Amz-SignedHeaders=host&#x26;x-id=GetObject\" alt=\"\"></p>\n</li>\n</ol>\n</li>\n<li>\n<p><strong>SQL 연산자: 조회 조건 확장하기</strong></p>\n<ul>\n<li>\n<p>SQL 연산자의 종류</p>\n<table>\n<thead>\n<tr>\n<th>구분</th>\n<th>연산자</th>\n<th>의미</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>SQL 연산</td>\n<td>BETWEEN a AND b</td>\n<td></td>\n</tr>\n<tr>\n<td>SQL 연산</td>\n<td>IN (list)</td>\n<td></td>\n</tr>\n<tr>\n<td>SQL 연산</td>\n<td>LIKE ‘비교 문자’</td>\n<td></td>\n</tr>\n<tr>\n<td>SQL 연산</td>\n<td>IS NULL</td>\n<td></td>\n</tr>\n</tbody>\n</table>\n</li>\n</ul>\n<ol>\n<li>\n<p>코드</p>\n<hr>\n<div class=\"gatsby-highlight\" data-language=\"sql\"><pre class=\"language-sql\"><code class=\"language-sql\"><span class=\"token comment\">/**\n* BETWEEN 연산자\n* employees 테이블에서 salary가 10,000 이상이고,\n* 20,000 이하인 직원 정보를 출력\n*/</span>\n<span class=\"token keyword\">SELECT</span> <span class=\"token operator\">*</span>\n<span class=\"token keyword\">FROM</span> employees_b\n<span class=\"token keyword\">WHERE</span> salary <span class=\"token operator\">BETWEEN</span> <span class=\"token number\">10000</span> <span class=\"token operator\">AND</span> <span class=\"token number\">20000</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p><img src=\"https://s3.us-west-2.amazonaws.com/secure.notion-static.com/f71c33cd-3c74-4b8e-b760-fd73b3510dbd/Untitled.png?X-Amz-Algorithm=AWS4-HMAC-SHA256&#x26;X-Amz-Content-Sha256=UNSIGNED-PAYLOAD&#x26;X-Amz-Credential=AKIAT73L2G45EIPT3X45%2F20230422%2Fus-west-2%2Fs3%2Faws4_request&#x26;X-Amz-Date=20230422T130653Z&#x26;X-Amz-Expires=3600&#x26;X-Amz-Signature=f14be2b1e2e8e1c28db68365e0ce013468909ac01c4e0dfce35a10f5e8c5d53f&#x26;X-Amz-SignedHeaders=host&#x26;x-id=GetObject\" alt=\"\"></p>\n<div class=\"gatsby-highlight\" data-language=\"sql\"><pre class=\"language-sql\"><code class=\"language-sql\"><span class=\"token comment\">/**\n* IN 연산자\n* employees 테이블에서 salary가 10,000, 17,000, 24,000인 직원 정보 출력\n*/</span>\n<span class=\"token keyword\">SELECT</span> <span class=\"token operator\">*</span> \n<span class=\"token keyword\">FROM</span> employees_b\n<span class=\"token keyword\">WHERE</span> salary <span class=\"token operator\">IN</span> <span class=\"token punctuation\">(</span><span class=\"token number\">10000</span><span class=\"token punctuation\">,</span> <span class=\"token number\">17000</span><span class=\"token punctuation\">,</span> <span class=\"token number\">24000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p><img src=\"https://s3.us-west-2.amazonaws.com/secure.notion-static.com/5a1e4515-0610-4f5c-ad91-adb4fb81b202/Screenshot_2023-03-29_at_4.35.57_PM.png?X-Amz-Algorithm=AWS4-HMAC-SHA256&#x26;X-Amz-Content-Sha256=UNSIGNED-PAYLOAD&#x26;X-Amz-Credential=AKIAT73L2G45EIPT3X45%2F20230422%2Fus-west-2%2Fs3%2Faws4_request&#x26;X-Amz-Date=20230422T130653Z&#x26;X-Amz-Expires=3600&#x26;X-Amz-Signature=8314d2900268c10d32825cac2f28ac7d9612c9acd28a20ac6c2a9d262b553391&#x26;X-Amz-SignedHeaders=host&#x26;x-id=GetObject\" alt=\"\"></p>\n<div class=\"gatsby-highlight\" data-language=\"sql\"><pre class=\"language-sql\"><code class=\"language-sql\"><span class=\"token comment\">/**\n* LIKE 연산자\n* employees 테이블에서 job_id값이 AD를 포함하는 모든 데이터를 조회\n*/</span>\n<span class=\"token keyword\">SELECT</span> <span class=\"token operator\">*</span>\n<span class=\"token keyword\">FROM</span> employees_b\n<span class=\"token keyword\">WHERE</span> job_id <span class=\"token operator\">LIKE</span> <span class=\"token string\">'AD%'</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p><img src=\"https://s3.us-west-2.amazonaws.com/secure.notion-static.com/c1e447f2-b324-4f90-808b-ba318586abfd/Untitled.png?X-Amz-Algorithm=AWS4-HMAC-SHA256&#x26;X-Amz-Content-Sha256=UNSIGNED-PAYLOAD&#x26;X-Amz-Credential=AKIAT73L2G45EIPT3X45%2F20230422%2Fus-west-2%2Fs3%2Faws4_request&#x26;X-Amz-Date=20230422T130653Z&#x26;X-Amz-Expires=3600&#x26;X-Amz-Signature=4896607bba0f9a5c53cc47ddc84c2661e0bbfb2362a02527e187fffa03e4d5cf&#x26;X-Amz-SignedHeaders=host&#x26;x-id=GetObject\" alt=\"\"></p>\n<div class=\"gatsby-highlight\" data-language=\"sql\"><pre class=\"language-sql\"><code class=\"language-sql\"><span class=\"token comment\">/**\n* LIKE 연산자2\n* employees 테이블에서 AD를 포함하면서 AD 뒤에 따라오는 문자열이 \n* 3자리인 데이터 값을 갖는 직원 정보를 조회\n*/</span>\n<span class=\"token keyword\">SELECT</span> <span class=\"token operator\">*</span>\n<span class=\"token keyword\">FROM</span> employees_b\n<span class=\"token keyword\">WHERE</span> job_id <span class=\"token operator\">LIKE</span> <span class=\"token string\">'AD___'</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p><img src=\"https://s3.us-west-2.amazonaws.com/secure.notion-static.com/8634bcfa-01b1-4270-b432-4164a72f066f/Untitled.png?X-Amz-Algorithm=AWS4-HMAC-SHA256&#x26;X-Amz-Content-Sha256=UNSIGNED-PAYLOAD&#x26;X-Amz-Credential=AKIAT73L2G45EIPT3X45%2F20230422%2Fus-west-2%2Fs3%2Faws4_request&#x26;X-Amz-Date=20230422T130653Z&#x26;X-Amz-Expires=3600&#x26;X-Amz-Signature=66543f341f08098bc0dbf72fcc9c87c8d4c37632f082be44ac8cc15e9e85f554&#x26;X-Amz-SignedHeaders=host&#x26;x-id=GetObject\" alt=\"\"></p>\n<div class=\"gatsby-highlight\" data-language=\"sql\"><pre class=\"language-sql\"><code class=\"language-sql\"><span class=\"token keyword\">SELECT</span> <span class=\"token operator\">*</span>\n<span class=\"token keyword\">FROM</span> employees_b\n<span class=\"token keyword\">WHERE</span> manager_id <span class=\"token operator\">IS</span> <span class=\"token boolean\">NULL</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p><img src=\"https://s3.us-west-2.amazonaws.com/secure.notion-static.com/174c8250-0410-405c-98ac-4b65b960b3e1/Untitled.png?X-Amz-Algorithm=AWS4-HMAC-SHA256&#x26;X-Amz-Content-Sha256=UNSIGNED-PAYLOAD&#x26;X-Amz-Credential=AKIAT73L2G45EIPT3X45%2F20230422%2Fus-west-2%2Fs3%2Faws4_request&#x26;X-Amz-Date=20230422T130653Z&#x26;X-Amz-Expires=3600&#x26;X-Amz-Signature=bb504142153edcb4317e1b1d57f63085e942d331c7c6eb807613b7b31620e4d5&#x26;X-Amz-SignedHeaders=host&#x26;x-id=GetObject\" alt=\"\"></p>\n</li>\n</ol>\n</li>\n<li>\n<p><strong>논리 연산자 : 조건 논리를 계속 연결하기</strong></p>\n<ul>\n<li>특정 조건을 모두 만족해야 할 때는 AND 연산자를 사용함</li>\n<li>AND 연산자는 매우 중요한 연산자임</li>\n<li>여러 조건을 동시에 만족해야 하는 상황에서 사용한다.</li>\n</ul>\n<ol>\n<li>\n<p><strong>코드</strong></p>\n<hr>\n<div class=\"gatsby-highlight\" data-language=\"sql\"><pre class=\"language-sql\"><code class=\"language-sql\"><span class=\"token comment\">/**\n* AND 연산자\n* employees 테이블에서 salary가 4000을 초과하면서,\n* job_id가 'IT_PROG' 인 값을 조회\n*/</span>\n<span class=\"token keyword\">SELECT</span> <span class=\"token operator\">*</span>\n<span class=\"token keyword\">FROM</span> employees_b\n<span class=\"token keyword\">WHERE</span> salary <span class=\"token operator\">></span> <span class=\"token number\">4000</span>\n<span class=\"token operator\">AND</span> job_id <span class=\"token operator\">=</span> <span class=\"token string\">'IT_PROG'</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p><img src=\"https://s3.us-west-2.amazonaws.com/secure.notion-static.com/607ef4ff-a836-499f-b179-4fa0dd8811f6/Untitled.png?X-Amz-Algorithm=AWS4-HMAC-SHA256&#x26;X-Amz-Content-Sha256=UNSIGNED-PAYLOAD&#x26;X-Amz-Credential=AKIAT73L2G45EIPT3X45%2F20230422%2Fus-west-2%2Fs3%2Faws4_request&#x26;X-Amz-Date=20230422T130654Z&#x26;X-Amz-Expires=3600&#x26;X-Amz-Signature=6c6ec1947ecf8cae46fea436be5e7fdc825ec6da2d63c8dd52938e3ff841031b&#x26;X-Amz-SignedHeaders=host&#x26;x-id=GetObject\" alt=\"\"></p>\n<div class=\"gatsby-highlight\" data-language=\"sql\"><pre class=\"language-sql\"><code class=\"language-sql\"><span class=\"token comment\">/**\n* OR 연산자\n*/</span>\n<span class=\"token keyword\">SELECT</span> <span class=\"token operator\">*</span>\n<span class=\"token keyword\">FROM</span> employees_b\n<span class=\"token keyword\">WHERE</span> salary <span class=\"token operator\">></span> <span class=\"token number\">4000</span>\n<span class=\"token operator\">AND</span> job_id <span class=\"token operator\">=</span> <span class=\"token string\">'IT_PROG'</span>\n<span class=\"token operator\">OR</span> job_id <span class=\"token operator\">=</span> <span class=\"token string\">'FI_ACCOUNT'</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p><img src=\"https://s3.us-west-2.amazonaws.com/secure.notion-static.com/2db8204f-b88b-48ff-b2ed-f579e3f90d9c/Untitled.png?X-Amz-Algorithm=AWS4-HMAC-SHA256&#x26;X-Amz-Content-Sha256=UNSIGNED-PAYLOAD&#x26;X-Amz-Credential=AKIAT73L2G45EIPT3X45%2F20230422%2Fus-west-2%2Fs3%2Faws4_request&#x26;X-Amz-Date=20230422T130654Z&#x26;X-Amz-Expires=3600&#x26;X-Amz-Signature=148a81112a40286289841c40b05f5eb252dad07fd02f7c7c490744b1f74fe150&#x26;X-Amz-SignedHeaders=host&#x26;x-id=GetObject\" alt=\"\"></p>\n<div class=\"gatsby-highlight\" data-language=\"sql\"><pre class=\"language-sql\"><code class=\"language-sql\"><span class=\"token comment\">/**\n* 부정 연산자\n*/</span>\n<span class=\"token keyword\">SELECT</span> <span class=\"token operator\">*</span> \n<span class=\"token keyword\">FROM</span> employees_b\n<span class=\"token keyword\">WHERE</span> employee_id <span class=\"token operator\">&lt;></span> <span class=\"token number\">105</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p><img src=\"https://s3.us-west-2.amazonaws.com/secure.notion-static.com/9d13d5a0-b2c5-4d2d-b68b-9669e6689f77/Untitled.png?X-Amz-Algorithm=AWS4-HMAC-SHA256&#x26;X-Amz-Content-Sha256=UNSIGNED-PAYLOAD&#x26;X-Amz-Credential=AKIAT73L2G45EIPT3X45%2F20230422%2Fus-west-2%2Fs3%2Faws4_request&#x26;X-Amz-Date=20230422T130654Z&#x26;X-Amz-Expires=3600&#x26;X-Amz-Signature=15ef47ea6761a1f908e76002abe4e24ed62ae94fe65ff8fd8d01311dc9e1b496&#x26;X-Amz-SignedHeaders=host&#x26;x-id=GetObject\" alt=\"\"></p>\n<div class=\"gatsby-highlight\" data-language=\"sql\"><pre class=\"language-sql\"><code class=\"language-sql\"><span class=\"token comment\">/**\n* IS NOT NULL 사용\n* employees 테이블에서 manager_id가 null 값이 아닌 직원을 조회\n*/</span>\n<span class=\"token keyword\">SELECT</span> <span class=\"token operator\">*</span>\n<span class=\"token keyword\">FROM</span> employees_b\n<span class=\"token keyword\">WHERE</span> manager_id <span class=\"token operator\">IS</span> <span class=\"token operator\">NOT</span> <span class=\"token boolean\">NULL</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p><img src=\"https://s3.us-west-2.amazonaws.com/secure.notion-static.com/b8feb4f4-0242-4b2c-b46e-d8e34c7d2405/Untitled.png?X-Amz-Algorithm=AWS4-HMAC-SHA256&#x26;X-Amz-Content-Sha256=UNSIGNED-PAYLOAD&#x26;X-Amz-Credential=AKIAT73L2G45EIPT3X45%2F20230422%2Fus-west-2%2Fs3%2Faws4_request&#x26;X-Amz-Date=20230422T130654Z&#x26;X-Amz-Expires=3600&#x26;X-Amz-Signature=03365d1d66efd76a05ca9687a9d3a306f483976f9b406a92531220fd22f1b9d7&#x26;X-Amz-SignedHeaders=host&#x26;x-id=GetObject\" alt=\"\"></p>\n</li>\n</ol>\n</li>\n</ol>","frontmatter":{"date":"April 07, 2023","title":"데이터 조회의 기본","categories":"SQL Learning","author":"Juhyeon Lee","emoji":null},"fields":{"slug":"/e50fe602-4649-45db-a995-c0b9fb4daffe/"}},"site":{"siteMetadata":{"siteUrl":"https://d556f8.netlify.io","comments":{"utterances":{"repo":"d556f8/d556f8-devlog"}}}}},"pageContext":{"slug":"/f2a7c567-4f56-4a33-83fe-187e84190484/","nextSlug":"/6f68b661-dbcc-4163-9f0e-37da2117e216/","prevSlug":"/e50fe602-4649-45db-a995-c0b9fb4daffe/"}},"staticQueryHashes":["1073350324","1956554647","2938748437"],"slicesMap":{}}
{"componentChunkName":"component---src-templates-blog-template-js","path":"/6f68b661-dbcc-4163-9f0e-37da2117e216/","result":{"data":{"cur":{"id":"9f16afb4-cbc0-54ae-ad7e-6007988d9d95","html":"<h1 id=\"dom-객체\" style=\"position:relative;\"><a href=\"#dom-%EA%B0%9D%EC%B2%B4\" aria-label=\"dom 객체 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>DOM 객체</h1>\n<h2 id=\"프로그램-절차-작성시-원칙\" style=\"position:relative;\"><a href=\"#%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%A8-%EC%A0%88%EC%B0%A8-%EC%9E%91%EC%84%B1%EC%8B%9C-%EC%9B%90%EC%B9%99\" aria-label=\"프로그램 절차 작성시 원칙 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>프로그램 절차 작성시 원칙</h2>\n<ol>\n<li>프로그램의 절차의 갯수는 정해져 있어야 함</li>\n<li>각 절차는 항상 같은 내용이어야 한다</li>\n<li>모든 가능성을 고려해야 한다</li>\n<li>예시는 절차를 검증하는데 사용(가능한 다양한 예시 준비)</li>\n</ol>\n<h2 id=\"dom-document-object-model\" style=\"position:relative;\"><a href=\"#dom-document-object-model\" aria-label=\"dom document object model permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>DOM (Document Object Model)</h2>\n<ul>\n<li>html을 객체로 처리하기 위한 방법중 하나, tree형식으로 html의 계층구조를 표현</li>\n<li>JS에서 DOM 사용\n<ol>\n<li>HTML DOM 객체의 선택\n<ul>\n<li><code class=\"language-text\">document.querySelector()</code>\n<ul>\n<li>Element type으로 변환: 선택된 html dom 객체 하나</li>\n<li>Element = 시작태크+내용+종료태그</li>\n</ul>\n</li>\n<li><code class=\"language-text\">document.querySelectorAll()</code></li>\n<li><code class=\"language-text\">document.getElementById()</code></li>\n<li><code class=\"language-text\">document.getElementsByTagName()</code></li>\n<li><code class=\"language-text\">document.getElementsByClassName()</code></li>\n<li>선택자: CSS선택자 유사\n<ul>\n<li>#아이디명</li>\n<li>.클래스명</li>\n<li>태그명</li>\n<li>Parent > Child</li>\n<li>P C</li>\n<li>C1 ~ C2</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>조작 / 이벤트\n<ul>\n<li><code class=\"language-text\">태그 엘리먼트.addEventListener(e, 리스너함수)</code>\n<ul>\n<li>리스너함수</li>\n<li><code class=\"language-text\">const 리스너함수 = (e) ⇒ { … }</code>\n<ul>\n<li>event.target: 이벤트가 발생한 엘리먼트</li>\n<li>event.target.value: 이벤트가 발생한 엘리먼트가 가지고 있는 값\n<ul>\n<li><code class=\"language-text\">&lt;input></code>, <code class=\"language-text\">&lt;textarea></code>, <code class=\"language-text\">&lt;select></code></li>\n</ul>\n</li>\n</ul>\n</li>\n<li><code class=\"language-text\">const 리스너함수 = e ⇒ { … }</code></li>\n</ul>\n</li>\n</ul>\n</li>\n<li>반영</li>\n</ol>\n</li>\n</ul>\n<h3 id=\"window-객체\" style=\"position:relative;\"><a href=\"#window-%EA%B0%9D%EC%B2%B4\" aria-label=\"window 객체 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>window 객체</h3>\n<ul>\n<li>생략가능</li>\n<li>document 객체</li>\n<li>navigation 객체</li>\n<li>location 객체</li>\n<li>history 객체</li>\n<li>methods\n<ul>\n<li>사용자로부터 입력받기</li>\n<li>alert(’내용’)\n<ul>\n<li>확인 버튼: 반환값은 <code class=\"language-text\">undefined</code></li>\n</ul>\n</li>\n<li>prompt(’내용’)\n<ul>\n<li>확인 / 취소 버튼</li>\n<li>반환값: 사용자 입력값 또는 <code class=\"language-text\">null</code></li>\n</ul>\n</li>\n<li>confirm(’내용)\n<ul>\n<li>확인 / 취소</li>\n<li>반환값: 확인 → <code class=\"language-text\">true</code>, 취소 → <code class=\"language-text\">false</code></li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>","excerpt":"DOM 객체 프로그램 절차 작성시 원칙 프로그램의 절차의 갯수는 정해져 있어야 함 각 절차는 항상 같은 내용이어야 한다 모든 가능성을 고려해야 한다 예시는 절차를 검증하는데 사용(가능한 다양한 예시 준비) DOM (Document Object Model) html을 객체로 처리하기 위한 방법중 하나, tree형식으로 html의 계층구조를 표현 JS에서 DOM 사용 HTML DOM 객체의 선택  Element type으로 변환: 선택된 html dom 객체 하나 Element = 시작태크+내용+종료태그     선택자: CSS선택자 유사 #아이디명 .클래스명 태그명 Parent > Child P C C1 ~ C2 조작 / 이벤트  리스너함수  event.target: 이벤트가 발생한 엘리먼트 event.target.value: 이벤트가 발생한 엘리먼트가 가지고 있는 값 , ,   반영 window 객체 생략가능 document 객체 navigation 객체 location 객체 his…","frontmatter":{"date":"March 30, 2023","title":"DOM 객체","categories":"Javascript Learning","author":"Juhyeon Lee","emoji":null},"fields":{"slug":"/6f68b661-dbcc-4163-9f0e-37da2117e216/"}},"next":{"id":"04e060ec-c240-5515-91a4-282ea69bcd4b","html":"<h1 id=\"목차\" style=\"position:relative;\"><a href=\"#%EB%AA%A9%EC%B0%A8\" aria-label=\"목차 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>목차</h1>\n<h1 id=\"자바스크립트-기본문법\" style=\"position:relative;\"><a href=\"#%EC%9E%90%EB%B0%94%EC%8A%A4%ED%81%AC%EB%A6%BD%ED%8A%B8-%EA%B8%B0%EB%B3%B8%EB%AC%B8%EB%B2%95\" aria-label=\"자바스크립트 기본문법 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>자바스크립트 기본문법</h1>\n<p>이 문서는 자바스크립트의 기본문법에 대해서 설명합니다.</p>\n<p>다른 프로그래밍 언어와 문법이 다를 수 있습니다.</p>\n<h2 id=\"코드-작성-규칙\" style=\"position:relative;\"><a href=\"#%EC%BD%94%EB%93%9C-%EC%9E%91%EC%84%B1-%EA%B7%9C%EC%B9%99\" aria-label=\"코드 작성 규칙 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>코드 작성 규칙</h2>\n<h3 id=\"세미콜론\" style=\"position:relative;\"><a href=\"#%EC%84%B8%EB%AF%B8%EC%BD%9C%EB%A1%A0\" aria-label=\"세미콜론 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>세미콜론</h3>\n<p><em>semi-quote</em></p>\n<p>세미콜론은 한 문장의 끝을 나타낸다.</p>\n<ul>\n<li>붙여도 되고 안 붙여도 됨</li>\n<li>예기치 않은 결과가 발생할 수 있기 때문에, 세미콜론을 붙이는 것이 좋다.</li>\n</ul>\n<h3 id=\"주석\" style=\"position:relative;\"><a href=\"#%EC%A3%BC%EC%84%9D\" aria-label=\"주석 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>주석</h3>\n<p><em>comment</em></p>\n<p>코드에 대한 설명을 작성하거나, 코드 실행을 무효화하기 위해서 사용된다.</p>\n<p>주석을 사용하면 코드를 작성한 사람 외에도 다른 사람들이 코드를 이해하기 쉬워지며, 코드 유지보수가 용이해진다.</p>\n<ul>\n<li>한줄 주석\n<ul>\n<li><code class=\"language-text\">Ctrl</code> + <code class=\"language-text\">/</code></li>\n<li><code class=\"language-text\">//</code></li>\n</ul>\n</li>\n<li>여러줄 주석\n<ul>\n<li><code class=\"language-text\">Alt</code> + <code class=\"language-text\">Shift</code> + <code class=\"language-text\">A</code></li>\n<li><code class=\"language-text\">/*</code> ~~~ <code class=\"language-text\">*/</code></li>\n</ul>\n</li>\n</ul>\n<h3 id=\"들여쓰기\" style=\"position:relative;\"><a href=\"#%EB%93%A4%EC%97%AC%EC%93%B0%EA%B8%B0\" aria-label=\"들여쓰기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>들여쓰기</h3>\n<p><em>indent</em></p>\n<p>코드의 가독성을 높이기 위해 사용되었다.</p>\n<p>코드 블럭이나 함수, 조건문 등이 시작될 때 들여쓰기를 해주면 코드의 구조가 명확해져서 이해하기 쉬워진다.</p>\n<h2 id=\"자바스크립트-자료형\" style=\"position:relative;\"><a href=\"#%EC%9E%90%EB%B0%94%EC%8A%A4%ED%81%AC%EB%A6%BD%ED%8A%B8-%EC%9E%90%EB%A3%8C%ED%98%95\" aria-label=\"자바스크립트 자료형 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>자바스크립트 자료형</h2>\n<h3 id=\"기본-자료형\" style=\"position:relative;\"><a href=\"#%EA%B8%B0%EB%B3%B8-%EC%9E%90%EB%A3%8C%ED%98%95\" aria-label=\"기본 자료형 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>기본 자료형</h3>\n<p><strong>Primitive Types</strong></p>\n<ul>\n<li><code class=\"language-text\">undefined</code> : 값이 할당되지 않은 상태</li>\n<li><code class=\"language-text\">null</code> : 값이 없음을 나타냄</li>\n<li><code class=\"language-text\">boolean</code> : <code class=\"language-text\">true</code> 또는 <code class=\"language-text\">false</code></li>\n<li><code class=\"language-text\">number</code> : 숫자</li>\n<li><code class=\"language-text\">string</code> : 문자열</li>\n</ul>\n<h3 id=\"참조-자료형\" style=\"position:relative;\"><a href=\"#%EC%B0%B8%EC%A1%B0-%EC%9E%90%EB%A3%8C%ED%98%95\" aria-label=\"참조 자료형 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>참조 자료형</h3>\n<p><strong>Reference Types</strong> or <strong>Objects</strong></p>\n<ul>\n<li><code class=\"language-text\">object</code> : 여러 개의 값을 하나의 변수에 저장할 수 있는 참조형 자료형</li>\n</ul>\n<h3 id=\"특수-자료형\" style=\"position:relative;\"><a href=\"#%ED%8A%B9%EC%88%98-%EC%9E%90%EB%A3%8C%ED%98%95\" aria-label=\"특수 자료형 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>특수 자료형</h3>\n<p><strong>Specialized Data Types</strong></p>\n<ul>\n<li><code class=\"language-text\">symbol</code> : 인스턴스가 고유하고 수정 불가능한 데이터형</li>\n<li><code class=\"language-text\">BigInt</code> : 큰 정수 값을 표현할 수 있는 데이터형</li>\n</ul>\n<h2 id=\"문자열\" style=\"position:relative;\"><a href=\"#%EB%AC%B8%EC%9E%90%EC%97%B4\" aria-label=\"문자열 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><strong>문자열</strong></h2>\n<ul>\n<li>문자열 출력 : 문자열을 출력하려면 작은 따옴표(”) 또는 큰 따옴표(\"\")를 사용합니다.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\">console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Hello, world!'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 작은 따옴표 사용</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Hello, world!\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 큰 따옴표 사용</span></code></pre></div>\n<ul>\n<li>문자열 연산자 사용 : 문자열 연산자로 **<code class=\"language-text\">+</code>**를 사용하면 두 문자열을 이어붙일 수 있습니다.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> str1 <span class=\"token operator\">=</span> <span class=\"token string\">'Hello'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> str2 <span class=\"token operator\">=</span> <span class=\"token string\">'World'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> str3 <span class=\"token operator\">=</span> str1 <span class=\"token operator\">+</span> <span class=\"token string\">' '</span> <span class=\"token operator\">+</span> str2<span class=\"token punctuation\">;</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>str3<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 'Hello World'</span></code></pre></div>\n<ul>\n<li>문자열 값 타입 확인 : <strong><code class=\"language-text\">typeof</code></strong> 연산자로 변수에 할당된 값의 데이터 타입을 확인할 수 있습니다. 문자열의 데이터 타입은 **<code class=\"language-text\">string</code>**입니다.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> str <span class=\"token operator\">=</span> <span class=\"token string\">'Hello, world!'</span><span class=\"token punctuation\">;</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">typeof</span> str<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 'string'</span></code></pre></div>\n<ul>\n<li>문자열 안에서 따옴표 : 문자열 안에 따옴표를 포함시키려면 반대 종류의 따옴표를 사용하거나, 역슬래시()를 사용하여 따옴표를 이스케이프합니다.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> str1 <span class=\"token operator\">=</span> <span class=\"token string\">\"He said, 'I'm a programmer.'\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> str2 <span class=\"token operator\">=</span> <span class=\"token string\">'She said, \"I love JavaScript.\"'</span><span class=\"token punctuation\">;</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>str1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// \"He said, 'I'm a programmer.'\"</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>str2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 'She said, \"I love JavaScript.\"'</span></code></pre></div>\n<ul>\n<li>문자열 이스케이프 문자 : 문자열 안에서 특수한 문자를 출력하려면 이스케이프 문자를 사용합니다. 이스케이프 문자는 **<code class=\"language-text\">\\</code>**로 시작합니다.\n<ul>\n<li><strong><code class=\"language-text\">\\n</code></strong> : 줄바꿈 문자</li>\n<li><strong><code class=\"language-text\">\\'</code></strong> : 작은 따옴표</li>\n<li><strong><code class=\"language-text\">\\\"</code></strong> : 큰 따옴표</li>\n<li><strong><code class=\"language-text\">\\\\</code></strong> : 역슬래시</li>\n</ul>\n</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\">console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Hello,\\nworld!'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 줄바꿈 문자 사용</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'He said, \\'I\\'m a programmer.\\''</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 작은 따옴표 사용</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"She said, \\\"I love JavaScript.\\\"\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 큰 따옴표 사용</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'C:\\\\Users\\\\'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 역슬래시 사</span></code></pre></div>\n<ul>\n<li>템플릿 리터럴 사용 : 템플릿 리터럴은 역따옴표(“)를 사용하여 문자열 안에 변수나 표현식을 삽입할 수 있는 문자열입니다. <strong><code class=\"language-text\">${}</code></strong> 안에 변수나 표현식을 넣어 사용합니다.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> name <span class=\"token operator\">=</span> <span class=\"token string\">'John'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> age <span class=\"token operator\">=</span> <span class=\"token number\">30</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> str <span class=\"token operator\">=</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">My name is </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>name<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">. I'm </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>age<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\"> years old.</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">;</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>str<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// \"My name is John. I'm 30 years old.\"</span></code></pre></div>\n<h2 id=\"숫자\" style=\"position:relative;\"><a href=\"#%EC%88%AB%EC%9E%90\" aria-label=\"숫자 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>숫자</h2>\n<h3 id=\"정수-출력\" style=\"position:relative;\"><a href=\"#%EC%A0%95%EC%88%98-%EC%B6%9C%EB%A0%A5\" aria-label=\"정수 출력 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><strong>정수 출력</strong></h3>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">let</span> num <span class=\"token operator\">=</span> <span class=\"token number\">10</span><span class=\"token punctuation\">;</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>num<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 10</span></code></pre></div>\n<h3 id=\"실수-출력\" style=\"position:relative;\"><a href=\"#%EC%8B%A4%EC%88%98-%EC%B6%9C%EB%A0%A5\" aria-label=\"실수 출력 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><strong>실수 출력</strong></h3>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">let</span> floatNum <span class=\"token operator\">=</span> <span class=\"token number\">3.14</span><span class=\"token punctuation\">;</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>floatNum<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 3.14</span></code></pre></div>\n<h3 id=\"진법-표기-숫자-출력\" style=\"position:relative;\"><a href=\"#%EC%A7%84%EB%B2%95-%ED%91%9C%EA%B8%B0-%EC%88%AB%EC%9E%90-%EC%B6%9C%EB%A0%A5\" aria-label=\"진법 표기 숫자 출력 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><strong>진법 표기 숫자 출력</strong></h3>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">let</span> binaryNum <span class=\"token operator\">=</span> <span class=\"token number\">0b1001</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 2진수 9</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>binaryNum<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 9</span>\n\n<span class=\"token keyword\">let</span> octalNum <span class=\"token operator\">=</span> <span class=\"token number\">0o15</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 8진수 13</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>octalNum<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 13</span>\n\n<span class=\"token keyword\">let</span> hexNum <span class=\"token operator\">=</span> <span class=\"token number\">0xA</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 16진수 10</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>hexNum<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 10</span></code></pre></div>\n<h3 id=\"문자열--숫자-변경\" style=\"position:relative;\"><a href=\"#%EB%AC%B8%EC%9E%90%EC%97%B4--%EC%88%AB%EC%9E%90-%EB%B3%80%EA%B2%BD\" aria-label=\"문자열  숫자 변경 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><strong>문자열 → 숫자 변경</strong></h3>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">let</span> str <span class=\"token operator\">=</span> <span class=\"token string\">\"123\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">let</span> num <span class=\"token operator\">=</span> <span class=\"token function\">parseInt</span><span class=\"token punctuation\">(</span>str<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>num<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 123</span>\n\n<span class=\"token keyword\">let</span> floatStr <span class=\"token operator\">=</span> <span class=\"token string\">\"3.14\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">let</span> floatNum <span class=\"token operator\">=</span> <span class=\"token function\">parseFloat</span><span class=\"token punctuation\">(</span>floatStr<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>floatNum<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 3.14</span></code></pre></div>\n<h3 id=\"nan\" style=\"position:relative;\"><a href=\"#nan\" aria-label=\"nan permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><strong>NaN</strong></h3>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">let</span> notANumber <span class=\"token operator\">=</span> <span class=\"token function\">parseInt</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"hello\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>notANumber<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// NaN</span>\n\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">typeof</span> notANumber<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// \"number\"</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>Number<span class=\"token punctuation\">.</span><span class=\"token function\">isNaN</span><span class=\"token punctuation\">(</span>notANumber<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// true</span></code></pre></div>\n<h3 id=\"산술-연산자\" style=\"position:relative;\"><a href=\"#%EC%82%B0%EC%88%A0-%EC%97%B0%EC%82%B0%EC%9E%90\" aria-label=\"산술 연산자 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><strong>산술 연산자</strong></h3>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">let</span> num1 <span class=\"token operator\">=</span> <span class=\"token number\">10</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">let</span> num2 <span class=\"token operator\">=</span> <span class=\"token number\">5</span><span class=\"token punctuation\">;</span>\n\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>num1 <span class=\"token operator\">+</span> num2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 15</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>num1 <span class=\"token operator\">-</span> num2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 5</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>num1 <span class=\"token operator\">*</span> num2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 50</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>num1 <span class=\"token operator\">/</span> num2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 2</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>num1 <span class=\"token operator\">%</span> num2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 0</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>num1 <span class=\"token operator\">**</span> num2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 100000</span></code></pre></div>\n<h3 id=\"infinity\" style=\"position:relative;\"><a href=\"#infinity\" aria-label=\"infinity permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><strong>Infinity</strong></h3>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\">console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span> <span class=\"token operator\">/</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// Infinity</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token operator\">-</span><span class=\"token number\">1</span> <span class=\"token operator\">/</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// -Infinity</span></code></pre></div>\n<h3 id=\"오해하기-쉬운-연산자\" style=\"position:relative;\"><a href=\"#%EC%98%A4%ED%95%B4%ED%95%98%EA%B8%B0-%EC%89%AC%EC%9A%B4-%EC%97%B0%EC%82%B0%EC%9E%90\" aria-label=\"오해하기 쉬운 연산자 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>오해하기 쉬운 연산자</h3>\n<ul>\n<li>\n<ul>\n<li>\n<ul>\n<li>산술 더하기: 피연사자 숫자인 경우</li>\n<li>문자열 연결하기: 피연산자가 하나라도 문자열이면 문자열로 변경처리</li>\n<li>부호: 단항(피연산자가 하나) 연산 +1, +200</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<ul>\n<li>\n<ul>\n<li>산술 빼기\n<ul>\n<li>문자열 - 숫자, 숫자 - 숫자,</li>\n<li>부호: 단항</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>*, /</li>\n</ul>\n<h3 id=\"연산자-우선순위-operator-priority\" style=\"position:relative;\"><a href=\"#%EC%97%B0%EC%82%B0%EC%9E%90-%EC%9A%B0%EC%84%A0%EC%88%9C%EC%9C%84-operator-priority\" aria-label=\"연산자 우선순위 operator priority permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>연산자 우선순위 (Operator Priority)</h3>\n<ul>\n<li>(): 괄호 안에 있는 내용이 가장 먼저 실행된다.</li>\n<li>, /: 곱하기와 나누기는 더하기와 빼기보다 높은 우선순위를 가진다.</li>\n<li>+, -: 더하기와 빼기는 같은 우선순위를 가지며, 왼쪽에서 오른쪽으로 계산된다.</li>\n<li>대입 연산자(=): 오른쪽에 있는 연산자를 계산한 결과를 왼쪽의 변수에 할당한다.</li>\n</ul>\n<h3 id=\"불값-boolean\" style=\"position:relative;\"><a href=\"#%EB%B6%88%EA%B0%92-boolean\" aria-label=\"불값 boolean permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>불값 (Boolean)</h3>\n<ul>\n<li>true / false: 불 값은 기본적으로 true 또는 false 둘 중 하나의 값을 가진다.</li>\n<li>숫자로 취급하면: 불 값은 true면 1, false면 0으로 취급된다.</li>\n<li>비교 연산의 결과/논리 연산의 결과: 비교 연산(>, >=, &#x3C;, &#x3C;=, ===, !== 등)이나 논리 연산(&#x26;&#x26;, ||, ! 등)의 결과는 불 값(true 또는 false)이다.</li>\n<li>false로 처리되는 경우\n<ul>\n<li>0: 숫자 0은 불 값으로 false로 처리된다.</li>\n<li>undefined: 변수에 값을 할당하지 않은 경우 undefined가 반환되며, 이는 불 값으로 false로 처리된다.</li>\n<li>null: 값이 없음을 나타내는 null은 불 값으로 false로 처리된다.</li>\n<li>NaN: 숫자가 아님을 나타내는 NaN(Not-a-Number)은 불 값으로 false로 처리된다.</li>\n<li>‘’: 빈 문자열(”)은 불 값으로 false로 처리된다.</li>\n</ul>\n</li>\n<li>true로 처리되는 경우\n<ul>\n<li>상기 false의 경우 제외한 경우: false로 처리되는 경우를 제외하면, 모든 값은 불 값으로 true로 처리된다.</li>\n</ul>\n</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">var</span> a <span class=\"token operator\">=</span> <span class=\"token number\">10</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">var</span> b <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">var</span> c <span class=\"token operator\">=</span> <span class=\"token string\">''</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">var</span> d <span class=\"token operator\">=</span> <span class=\"token string\">'hello'</span><span class=\"token punctuation\">;</span>\n\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token function\">Boolean</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// true</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token function\">Boolean</span><span class=\"token punctuation\">(</span>b<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// false</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token function\">Boolean</span><span class=\"token punctuation\">(</span>c<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// false</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token function\">Boolean</span><span class=\"token punctuation\">(</span>d<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// true</span></code></pre></div>\n<h3 id=\"타입-비교\" style=\"position:relative;\"><a href=\"#%ED%83%80%EC%9E%85-%EB%B9%84%EA%B5%90\" aria-label=\"타입 비교 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>타입 비교</h3>\n<ul>\n<li>NaN과 NaN: 이것만 false</li>\n<li>null 과 null: true</li>\n<li>undefined 과 undefined: true</li>\n<li>문자열의 비교\n<ul>\n<li>문자에 대한 값: ASCII값(unicode)</li>\n<li><code class=\"language-text\">‘a’.charCodeAt()</code></li>\n</ul>\n</li>\n<li>==, ===\n<ul>\n<li>동일한 점\n<ul>\n<li>값을 비교</li>\n</ul>\n</li>\n<li>다른점\n<ul>\n<li>===은 데이터 타입도 비교</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>≠, ≠=</li>\n</ul>\n<h3 id=\"비교-연산자\" style=\"position:relative;\"><a href=\"#%EB%B9%84%EA%B5%90-%EC%97%B0%EC%82%B0%EC%9E%90\" aria-label=\"비교 연산자 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>비교 연산자</h3>\n<ul>\n<li>\n<blockquote>\n<p>, &#x3C;, ≥, ≤, ==, ===, ≠, ≠=</p>\n</blockquote>\n</li>\n</ul>\n<h3 id=\"논리-연산자\" style=\"position:relative;\"><a href=\"#%EB%85%BC%EB%A6%AC-%EC%97%B0%EC%82%B0%EC%9E%90\" aria-label=\"논리 연산자 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>논리 연산자</h3>\n<ul>\n<li>&#x26;&#x26;: AND\n<ul>\n<li>~하고</li>\n<li>a &#x26;&#x26; b\n<ul>\n<li>a의 값과 b의 값이 true인 경우만 true 결과</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>||: OR\n<ul>\n<li>~이거나</li>\n<li>a || b\n<ul>\n<li>a의 값과 b의 값중 어느하나라도 true인 경우 true 결과</li>\n<li>두 변수의 값이 모두 false인 경우 false 결과</li>\n<li></li>\n</ul>\n</li>\n</ul>\n</li>\n<li>!: NOT\n<ul>\n<li>~이지 않다.</li>\n<li>변수의 불값 반전</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"단항-연산자는-오른쪽에서-왼쪽으로-실행\" style=\"position:relative;\"><a href=\"#%EB%8B%A8%ED%95%AD-%EC%97%B0%EC%82%B0%EC%9E%90%EB%8A%94-%EC%98%A4%EB%A5%B8%EC%AA%BD%EC%97%90%EC%84%9C-%EC%99%BC%EC%AA%BD%EC%9C%BC%EB%A1%9C-%EC%8B%A4%ED%96%89\" aria-label=\"단항 연산자는 오른쪽에서 왼쪽으로 실행 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>단항 연산자는 오른쪽에서 왼쪽으로 실행,</h2>\n<h3 id=\"빈값-사용하기\" style=\"position:relative;\"><a href=\"#%EB%B9%88%EA%B0%92-%EC%82%AC%EC%9A%A9%ED%95%98%EA%B8%B0\" aria-label=\"빈값 사용하기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>빈값 사용하기</h3>\n<ul>\n<li>null</li>\n<li>undefined</li>\n</ul>\n<p><strong>공통점</strong></p>\n<ul>\n<li>falsy value 취급</li>\n<li>undefined == false</li>\n<li>null == false</li>\n</ul>\n<p><strong>차이점</strong></p>\n<ul>\n<li>타입\n<ul>\n<li>null: object</li>\n<li>undefined: undefined</li>\n</ul>\n</li>\n<li>JS: undefined를 기본값으로 취급, 빈값표현은 undefined권장</li>\n</ul>\n<h2 id=\"변수\" style=\"position:relative;\"><a href=\"#%EB%B3%80%EC%88%98\" aria-label=\"변수 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>변수</h2>\n<ul>\n<li>변하는 수, 프로그램 실행시 임시로 저장하는 데이터 장소</li>\n<li>관례: 변수는 선언 및 초기화 후 사용하는 것 권장</li>\n<li>선언만 했다면, 변수의 값은 undefined이다.</li>\n</ul>\n<h3 id=\"선언\" style=\"position:relative;\"><a href=\"#%EC%84%A0%EC%96%B8\" aria-label=\"선언 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>선언</h3>\n<ul>\n<li>const\n<ul>\n<li>변하지 않는 수</li>\n<li>const로 선언문을 사용할 경우 초기화 하지 않으면 에러</li>\n<li>const로 선언한 상수에 값 쓰기 금지</li>\n</ul>\n</li>\n<li>let\n<ul>\n<li>변할 수 있는 수</li>\n<li>선언문</li>\n</ul>\n</li>\n<li>var</li>\n</ul>\n<h3 id=\"변수명--상수명\" style=\"position:relative;\"><a href=\"#%EB%B3%80%EC%88%98%EB%AA%85--%EC%83%81%EC%88%98%EB%AA%85\" aria-label=\"변수명  상수명 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>변수명 / 상수명</h3>\n<ul>\n<li>$, _, 문자(유니코드, 이모지, 등등)</li>\n<li>숫자로는 시작할 수 없다.</li>\n</ul>\n<h3 id=\"중첩-if문\" style=\"position:relative;\"><a href=\"#%EC%A4%91%EC%B2%A9-if%EB%AC%B8\" aria-label=\"중첩 if문 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>중첩 if문</h3>\n<ul>\n<li>내포된 if문</li>\n<li>if문내에 if문을 작성하는 경우 바람직하지 않다.\n<ul>\n<li>왜? <code class=\"language-text\">가독성</code> 들여쓰기도 깊어지고 무엇을 뜻하는 구문인지 이해하기 어렵기 때문</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"switch\" style=\"position:relative;\"><a href=\"#switch\" aria-label=\"switch permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>switch</h3>\n<ul>\n<li>\n<p>예시</p>\n<hr>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">switch</span><span class=\"token punctuation\">(</span>수식 or 변수<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">case</span> 값<span class=\"token number\">1</span><span class=\"token operator\">:</span>   <span class=\"token comment\">// 수식의 결과값 == 값1 인 경우</span>\n\t<span class=\"token keyword\">case</span> 값<span class=\"token number\">2</span><span class=\"token operator\">:</span>\n\t\t<span class=\"token operator\">...</span>문장\n\n\t<span class=\"token keyword\">case</span> 값<span class=\"token number\">3</span><span class=\"token operator\">:</span>\n\t\t<span class=\"token operator\">...</span>문장\n\t<span class=\"token keyword\">default</span><span class=\"token operator\">:</span>\n\t\t<span class=\"token operator\">...</span>문장\n<span class=\"token punctuation\">}</span></code></pre></div>\n</li>\n</ul>\n<h3 id=\"break\" style=\"position:relative;\"><a href=\"#break\" aria-label=\"break permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>break</h3>\n<ul>\n<li>반복문에서도 사용\n<ul>\n<li>block: <code class=\"language-text\">{ … }</code> 형태의 코드</li>\n</ul>\n</li>\n<li>실행 block 중단하는 문장</li>\n<li>실행의 범위\n<ul>\n<li>break문이 속해 있는 block 하나만 중단</li>\n<li><code class=\"language-text\">for() { for() { break} }</code></li>\n</ul>\n</li>\n</ul>\n<h3 id=\"continue\" style=\"position:relative;\"><a href=\"#continue\" aria-label=\"continue permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>continue</h3>\n<ul>\n<li>중단</li>\n<li><code class=\"language-text\">continue</code>문이 실행되면 조건문 검사를 실행함</li>\n</ul>\n<h2 id=\"반복문\" style=\"position:relative;\"><a href=\"#%EB%B0%98%EB%B3%B5%EB%AC%B8\" aria-label=\"반복문 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>반복문</h2>\n<ul>\n<li>\n<p><code class=\"language-text\">while</code></p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">while</span><span class=\"token punctuation\">(</span> condition <span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token operator\">...</span>executable syntaxs\n<span class=\"token punctuation\">}</span></code></pre></div>\n</li>\n<li>\n<p><code class=\"language-text\">do while</code></p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">do</span> <span class=\"token punctuation\">{</span>\n\n<span class=\"token punctuation\">}</span> <span class=\"token keyword\">while</span><span class=\"token punctuation\">(</span> condition <span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\n<span class=\"token punctuation\">}</span></code></pre></div>\n</li>\n<li>\n<p><code class=\"language-text\">for</code></p>\n<ul>\n<li><code class=\"language-text\">for in</code></li>\n<li><code class=\"language-text\">for of</code></li>\n</ul>\n</li>\n</ul>\n<h2 id=\"객체\" style=\"position:relative;\"><a href=\"#%EA%B0%9D%EC%B2%B4\" aria-label=\"객체 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>객체</h2>\n<ul>\n<li>JS 데이터타입의 일종</li>\n<li>배열, 함수, 그외 정의해나가는 자료(객체)</li>\n</ul>\n<h3 id=\"배열\" style=\"position:relative;\"><a href=\"#%EB%B0%B0%EC%97%B4\" aria-label=\"배열 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>배열</h3>\n<ul>\n<li>나열할 수 있는 데이터를 집합적을 관리할 수 있는 데이터 타입\n<ul>\n<li>배열</li>\n<li>객체</li>\n<li>기본형</li>\n<li>null</li>\n<li>undefined</li>\n<li>Infinity</li>\n<li>NaN</li>\n</ul>\n</li>\n<li>요소: element, 배열에 저장되는 하나의 데이터</li>\n<li>인덱스(index): 특정한 요소의 저장위치</li>\n</ul>\n<ol>\n<li><strong>선언 / 정의</strong>\n<ul>\n<li>대괄호 사용 <code class=\"language-text\">[ item1, item2, item3, … ]</code></li>\n<li>Array() 사용: Array객체의 생성자\n<ul>\n<li><code class=\"language-text\">new Array({number})</code> : 빈 배열에 요소를 number만큼의 길이로 만듬</li>\n<li><code class=\"language-text\">new Array( item1, item2, item3, …)</code> : 요소를 지정하여 배열을 만듬</li>\n</ul>\n</li>\n<li>배열 내에 배열요소가 저장되도록 한 것: 다중배열, 이중배열..\n<ul>\n<li><code class=\"language-text\">[ [1, 2, 3], [4, 5, 6] ]</code></li>\n</ul>\n</li>\n</ul>\n</li>\n<li>사용\n<ul>\n<li>배열의 길이: <code class=\"language-text\">arrayName.length</code>\n<ul>\n<li>맨 마지막 요소의 인덱스: <code class=\"language-text\">arrayName.length - 1</code></li>\n</ul>\n</li>\n<li>읽기\n<ul>\n<li><code class=\"language-text\">arrayName[idx]</code></li>\n</ul>\n</li>\n<li>쓰기\n<ul>\n<li><code class=\"language-text\">arrayName[idx] = someValue</code></li>\n</ul>\n</li>\n<li>수정\n<ul>\n<li><code class=\"language-text\">arrayName[idx] = someValue</code></li>\n</ul>\n</li>\n<li>삭제\n<ul>\n<li><code class=\"language-text\">delete arrayName[idx]</code></li>\n</ul>\n</li>\n<li>추가\n<ul>\n<li><code class=\"language-text\">arrayName[arrayName.length] = newValue</code></li>\n<li><code class=\"language-text\">arrayName.push(newValue)</code></li>\n</ul>\n</li>\n<li>맨 앞에 추가\n<ul>\n<li><code class=\"language-text\">arrayName.unshift(newValue)</code></li>\n</ul>\n</li>\n<li>삽입과 삭제\n<ul>\n<li><code class=\"language-text\">arrayName.splice(startIdx, ?deleteLength, ?addItems)</code></li>\n<li><code class=\"language-text\">arrayName.splice(startIdx)</code>\n<ul>\n<li><code class=\"language-text\">startIdx</code> 부터 배열 끝까지 삭제</li>\n</ul>\n</li>\n<li><code class=\"language-text\">arrayName.splice(startIdx, deleteLength)</code>\n<ul>\n<li><code class=\"language-text\">startIdx</code> 부터 지정한 길이 만큼 삭제</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>검색\n<ul>\n<li><code class=\"language-text\">arrayName.includes(searchItem)</code>\n<ul>\n<li><code class=\"language-text\">return {boolean}</code></li>\n</ul>\n</li>\n<li><code class=\"language-text\">arrayName.indexOf(searchItem)</code>\n<ul>\n<li><code class=\"language-text\">return index값</code></li>\n<li>맨처음부터 검색하여 검색성공한 최초의 인덱스</li>\n</ul>\n</li>\n<li><code class=\"language-text\">arrayName.lastIndexOf(searchItem)</code>\n<ul>\n<li><code class=\"language-text\">return index값</code></li>\n<li>맨마지막부터 검색하여 검색성공한 최초의 인덱스</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n</li>\n</ol>\n<p><strong>변수의 나열과 배열을 이용한 나열</strong></p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">1. 과일을 변수로 나열하고 출력하기\n\n\t---\n\n\n\t```javascript\n\tconst apple = '사과';\n\tconst orange = '오렌지';\n\tconst pear = '배';\n\t\n\tconsole.log(apple, orange, pear);\n\t```\n\n2. 배열을 사용하여 나열하고 출력하기\n\n\t---\n\n\n\t```javascript\n\tconst fruits = ['사과', '오렌지', '배'];\n\t\n\tfruits.map((fruit) => {\n\t\tconsole.log(fruit);\n\t});\n\t```</code></pre></div>\n<h2 id=\"함수\" style=\"position:relative;\"><a href=\"#%ED%95%A8%EC%88%98\" aria-label=\"함수 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>함수</h2>\n<ol>\n<li>정의 및 선언\n<ul>\n<li><strong>선언문</strong>\n<ul>\n<li><code class=\"language-text\">function funcName() { … }</code></li>\n</ul>\n</li>\n<li><strong>함수 표현식</strong>\n<ul>\n<li>이름없는 선언문\n<ul>\n<li><code class=\"language-text\">const someVariable = function() { … }</code></li>\n</ul>\n</li>\n<li>화살표 함수\n<ul>\n<li><code class=\"language-text\">const someVariable = () ⇒ { … }</code></li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>호출\n<ul>\n<li>함수명(argument list)</li>\n<li>상수명(argument list)</li>\n<li>호출하면 반드시 결과를 반환함</li>\n</ul>\n</li>\n<li>parameter 및 argument\n<ul>\n<li>parameter\n<ul>\n<li>함수선언시 함수 시그니쳐에 나오는 인수</li>\n</ul>\n</li>\n<li>argument\n<ul>\n<li>함수 호출시 사용하는 인수</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>return\n<ul>\n<li>return 데이터(변수, 리터널)</li>\n<li>return을 명시하지 않은 경우 <code class=\"language-text\">return undefined;</code> 맨 마지막 실행\n<ul>\n<li>함수 내부에서 return문을 실행하는 경우 함수 실행 중지(탈출)</li>\n<li>함수 호출한 곳으로 실행순서</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>함수내의 사용 변수 scope\n<ul>\n<li>전역변수: 함수내외부에서 사용가능</li>\n<li>지역변수: 함수내에서만 사용가능</li>\n<li>파라미터: 지역변수 취급</li>\n</ul>\n</li>\n<li>순수 함수\n<ul>\n<li>파라미터와 지역변수/상수만으로 구현한 함수</li>\n</ul>\n</li>\n</ol>\n<h3 id=\"함수-선언과-화살표-함수-비교\" style=\"position:relative;\"><a href=\"#%ED%95%A8%EC%88%98-%EC%84%A0%EC%96%B8%EA%B3%BC-%ED%99%94%EC%82%B4%ED%91%9C-%ED%95%A8%EC%88%98-%EB%B9%84%EA%B5%90\" aria-label=\"함수 선언과 화살표 함수 비교 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>함수 선언과 화살표 함수 비교</h3>\n<ul>\n<li><code class=\"language-text\">function add1(x, y) { return x + y; }</code></li>\n<li><code class=\"language-text\">const add2 = function(x, y) { return x + y; }</code></li>\n<li><code class=\"language-text\">const add3 = (x, y) ⇒ { return x + y; };</code></li>\n<li><code class=\"language-text\">const add4 = (x, y) ⇒ x + y;</code>\n<ul>\n<li>함수 실행문이 return만 존재하는 경우 중괄호와 return 을 생략가능하다.</li>\n</ul>\n</li>\n<li><code class=\"language-text\">const add4 = (x, y) ⇒ (x + y);</code></li>\n<li><code class=\"language-text\">const not = x ⇒ !x;</code>\n<ul>\n<li>파라미터가 하나인 경우 소괄호 생략가능</li>\n</ul>\n</li>\n<li>주의사항: <code class=\"language-text\">this</code> 의 의미\n<ul>\n<li>화살표 함수내에선 arguments를 사용 못함</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"object-literal\" style=\"position:relative;\"><a href=\"#object-literal\" aria-label=\"object literal permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Object literal</h3>\n<p>원시 값을 제외한 나머지 값은 모두 객체이다.</p>\n<p>객체는 0개 이상의 프로퍼티로 구성된 집합으로 ,프로퍼티는 <code class=\"language-text\">key</code>와 <code class=\"language-text\">value</code>로 구성된다.</p>\n<blockquote>\n<p>💡 <strong>객체 지향 프로그래밍</strong> ↔ <strong>객체 기반 프로그래밍</strong></p>\n<ul>\n<li>\n<p><strong>객체 지향 프로그래밍 (OOP)</strong></p>\n</li>\n<li>\n<p><strong>JavaScript</strong></p>\n</li>\n</ul>\n<p>JavaScript는 prototype-based OOP(prototype 기반 객체지향언어)라고 부른다.</p>\n<p>※ 물론 객체기반언어는 객체지향언어와 달리 암시적 상속이 일어나지 않고, 다형성을 지원하지 않는다. 그래서 자바스크립트를 프로토타입 기반 언어 또는 객체기반 언어라고 한다.</p>\n<p><strong>[출처]</strong> <a href=\"https://blog.naver.com/newbongman/222329975426\">객체지향 vs 객체기반</a> | <strong>작성자</strong> <a href=\"https://blog.naver.com/newbongman\">NewBongMan</a></p>\n</blockquote>\n<p><img src=\"https://s3.us-west-2.amazonaws.com/secure.notion-static.com/fcd18cd9-424b-4bca-a9ac-44d3464fcf16/Untitled.png?X-Amz-Algorithm=AWS4-HMAC-SHA256&#x26;X-Amz-Content-Sha256=UNSIGNED-PAYLOAD&#x26;X-Amz-Credential=AKIAT73L2G45EIPT3X45%2F20230422%2Fus-west-2%2Fs3%2Faws4_request&#x26;X-Amz-Date=20230422T130632Z&#x26;X-Amz-Expires=3600&#x26;X-Amz-Signature=866edfc3932be8e8ebaae32a564221809330c18688b22e654e5fadaba2130dd6&#x26;X-Amz-SignedHeaders=host&#x26;x-id=GetObject\" alt=\"\"></p>\n<p>property 값이 함수일 경우에는 <code class=\"language-text\">method</code> 라고 부른다.</p>\n<ol>\n<li><strong>정의 / 선언 / 초기화</strong>\n<ul>\n<li>key: value</li>\n</ul>\n</li>\n<li><strong>사용법</strong>\n<ul>\n<li><code class=\"language-text\">.</code> 연산자 이용법\n<ul>\n<li>property에 접근하는 연산자이다.</li>\n<li>접근: <code class=\"language-text\">obj.key</code></li>\n<li>쓰기 / 수정: <code class=\"language-text\">obj.key = ~~~</code></li>\n</ul>\n</li>\n<li>연관배열이용법\n<ul>\n<li>Associated Array</li>\n<li>읽기: <code class=\"language-text\">obj['key']</code></li>\n<li>쓰기 / 수정: <code class=\"language-text\">obj['key'] = ~~~</code></li>\n</ul>\n</li>\n<li>속성 삭제\n<ul>\n<li><code class=\"language-text\">delete obj.key;</code></li>\n<li><code class=\"language-text\">delete obj[’key’];</code></li>\n</ul>\n</li>\n</ul>\n</li>\n<li>객체간 비교 / 참조 / 복사\n<ul>\n<li>비교\n<ul>\n<li>{} == {}, {} === {}</li>\n</ul>\n</li>\n<li>참조\n<ul>\n<li>객체에 대한 변수는 해당 객체의 참조값을 저장</li>\n<li>참조값: 메모리(heap 메모리)에서의 주소값</li>\n<li>primitive type의 변수: 리터럴 값 저장\n<ul>\n<li>let a = ‘jit’</li>\n<li>메모리(stack 메모리)에 값 저장시키고 변수로 별명처럼 사용</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>복사\n<ul>\n<li>단순 대입으로는 불가</li>\n<li>const a = {}; const c = a;\n<ul>\n<li>단순히 참조값을 복사하는 것이므로, 각 객체의 고유한 값을 가지고 있는 것이 아님</li>\n<li>이 개념은 deep copy, shallow copy에 있다.</li>\n<li>clone() 이용 복사해야 함</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n</li>\n</ol>","frontmatter":{"date":"March 27, 2023","title":"자바스크립트 기본문법","categories":"Javascript Learning","author":"Juhyeon Lee","emoji":null},"fields":{"slug":"/e3bd0d5c-3189-468f-9710-6e14273fe102/"}},"prev":{"id":"7bf483be-82ab-5944-b830-ea635777814e","html":"<h1 id=\"배열명pop\" style=\"position:relative;\"><a href=\"#%EB%B0%B0%EC%97%B4%EB%AA%85pop\" aria-label=\"배열명pop permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>배열명.pop()</h1>\n<ul>\n<li>\n<p>배열의 마지막 요소를 제거하고 그 값을 반환합니다. (배열에서 가장 마지막 요소를 제거할 때 사용합니다.)</p>\n</li>\n<li>\n<p>parameter: none</p>\n</li>\n<li>\n<p>return: 제거된 마지막 요소의 값</p>\n</li>\n<li>\n<p>예시</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">let</span> fruits <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'apple'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'banana'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'orange'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">let</span> lastFruit <span class=\"token operator\">=</span> fruits<span class=\"token punctuation\">.</span><span class=\"token function\">pop</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>lastFruit<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">// \"orange\"</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>fruits<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>     <span class=\"token comment\">// [\"apple\", \"banana\"]</span></code></pre></div>\n</li>\n</ul>\n<h1 id=\"배열명pushelement1--elementn\" style=\"position:relative;\"><a href=\"#%EB%B0%B0%EC%97%B4%EB%AA%85pushelement1--elementn\" aria-label=\"배열명pushelement1  elementn permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>배열명.push(element1[, …[, elementN]])</h1>\n<ul>\n<li>\n<p>배열의 끝에 하나 이상의 요소를 추가하고, 새로운 길이를 반환합니다. (배열의 끝에 새로운 요소를 추가할 때 사용합니다.)</p>\n</li>\n<li>\n<p>parameter: 추가할 하나 이상의 요소 (여러개의 요소)</p>\n</li>\n<li>\n<p>return: 새로운 길이 (배열.length)</p>\n</li>\n<li>\n<p>예시</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">let</span> numbers <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\nnumbers<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span><span class=\"token number\">4</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>numbers<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">// [1, 2, 3, 4]</span></code></pre></div>\n</li>\n</ul>\n<h1 id=\"배열명shift\" style=\"position:relative;\"><a href=\"#%EB%B0%B0%EC%97%B4%EB%AA%85shift\" aria-label=\"배열명shift permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>배열명.shift()</h1>\n<ul>\n<li>\n<p>배열의 첫 번째 요소를 제거하고, 제거된 요소를 반환합니다. (배열에서 가장 첫 번째 요소를 제거할 때 사용합니다.)</p>\n</li>\n<li>\n<p>parameter: 없음</p>\n</li>\n<li>\n<p>return: 제거된 첫 번째 요소의 값 (shift 메서드 실행 전 배열[0])</p>\n</li>\n<li>\n<p>예시</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">let</span> fruits <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'banana'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'apple'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'orange'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">let</span> firstFruit <span class=\"token operator\">=</span> fruits<span class=\"token punctuation\">.</span><span class=\"token function\">shift</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>firstFruit<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">// \"banana\"</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>fruits<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>      <span class=\"token comment\">// [\"apple\", \"orange\"]</span></code></pre></div>\n</li>\n</ul>\n<h1 id=\"배열명unshiftelementn\" style=\"position:relative;\"><a href=\"#%EB%B0%B0%EC%97%B4%EB%AA%85unshiftelementn\" aria-label=\"배열명unshiftelementn permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>배열명.unshift([…elementN])</h1>\n<ul>\n<li>\n<p>배열의 시작 부분에 하나 이상의 요소를 추가하고, 새로운 길이를 반환합니다. (배열의 시작 부분에 새로운 요소를 추가할 때 사용합니다.)</p>\n</li>\n<li>\n<p>parameter: 추가할 하나 이상의 요소</p>\n</li>\n<li>\n<p>return: 새로운 길이 (배열.length)</p>\n</li>\n<li>\n<p>예시</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">let</span> fruits <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'banana'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'apple'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'orange'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\nfruits<span class=\"token punctuation\">.</span><span class=\"token function\">unshift</span><span class=\"token punctuation\">(</span><span class=\"token string\">'grape'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>fruits<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">// [\"grape\", \"banana\", \"apple\", \"orange\"]</span></code></pre></div>\n</li>\n</ul>\n<h1 id=\"배열명splicestart-deletecount-item1-item2-\" style=\"position:relative;\"><a href=\"#%EB%B0%B0%EC%97%B4%EB%AA%85splicestart-deletecount-item1-item2-\" aria-label=\"배열명splicestart deletecount item1 item2  permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>배열명.splice(start[, deleteCount[, item1[, item2[, …]]]])</h1>\n<ul>\n<li>\n<p>배열에서 요소를 추가하거나 제거하고, 제거된 요소를 반환합니다. (배열에서 요소를 추가하거나 제거할 때 사용합니다.)</p>\n</li>\n<li>\n<p>parameters</p>\n<ul>\n<li>start: 추가 또는 제거를 시작할 인덱스 위치 (index: number)</li>\n<li>deleteCount: 제거할 요소의 수. 생략하면 start부터 끝까지 모든 요소가 제거됩니다.</li>\n<li>item1, item2, …: 추가할 요소들</li>\n</ul>\n</li>\n<li>\n<p>return 제거된 요소들의 배열</p>\n</li>\n<li>\n<p>예시</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">let</span> fruits <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'banana'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'apple'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'orange'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\nfruits<span class=\"token punctuation\">.</span><span class=\"token function\">splice</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'grape'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'pear'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>fruits<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">// [\"banana\", \"grape\", \"pear\", \"orange\"]</span>\n\nfruits<span class=\"token punctuation\">.</span><span class=\"token function\">splice</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>fruits<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">// [\"grape\", \"pear\", \"orange\"]</span>\n\nfruits<span class=\"token punctuation\">.</span><span class=\"token function\">splice</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>fruits<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">// [\"grape\"]</span></code></pre></div>\n</li>\n</ul>\n<h1 id=\"배열명slicebegin-end\" style=\"position:relative;\"><a href=\"#%EB%B0%B0%EC%97%B4%EB%AA%85slicebegin-end\" aria-label=\"배열명slicebegin end permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>배열명.slice([begin[, end]])</h1>\n<ul>\n<li>\n<p>배열의 일부분을 추출하여 새로운 배열을 반환합니다. (배열의 일부분을 추출할 때 사용합니다.)</p>\n</li>\n<li>\n<p>parameters</p>\n<ul>\n<li>begin: 추출을 시작할 인덱스 위치. 생략하면 0번 인덱스부터 추출합니다.</li>\n<li>end: 추출을 종료할 인덱스 위치. 생략하면 배열의 끝까지 추출합니다.</li>\n</ul>\n</li>\n<li>\n<p>return 추출된 일부분으로 이루어진 새로운 배열</p>\n</li>\n<li>\n<p>예시</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">let</span> fruits <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'banana'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'apple'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'orange'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'grape'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'pear'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">let</span> citrus <span class=\"token operator\">=</span> fruits<span class=\"token punctuation\">.</span><span class=\"token function\">slice</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>citrus<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">// [\"orange\", \"grape\"]</span>\n\n<span class=\"token keyword\">let</span> favorites <span class=\"token operator\">=</span> fruits<span class=\"token punctuation\">.</span><span class=\"token function\">slice</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>favorites<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">// [\"banana\", \"apple\"]</span>\n\n<span class=\"token keyword\">let</span> beginning <span class=\"token operator\">=</span> fruits<span class=\"token punctuation\">.</span><span class=\"token function\">slice</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>beginning<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">// [\"banana\", \"apple\", \"orange\"]</span>\n\n<span class=\"token keyword\">let</span> end <span class=\"token operator\">=</span> fruits<span class=\"token punctuation\">.</span><span class=\"token function\">slice</span><span class=\"token punctuation\">(</span><span class=\"token operator\">-</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>end<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">// [\"grape\", \"pear\"]</span></code></pre></div>\n</li>\n</ul>\n<h1 id=\"배열명concatvalue1-value2--valuen\" style=\"position:relative;\"><a href=\"#%EB%B0%B0%EC%97%B4%EB%AA%85concatvalue1-value2--valuen\" aria-label=\"배열명concatvalue1 value2  valuen permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>배열명.concat([value1[, value2[, …[, valueN]]]])</h1>\n<ul>\n<li>\n<p>배열에 하나 이상의 값을 추가하여 새로운 배열을 반환합니다. (여러 배열을 하나로 합칠 때 사용합니다.)</p>\n</li>\n<li>\n<p>parameter: value1, value2, …, valueN: 추가할 값들</p>\n</li>\n<li>\n<p>return 합쳐진 새로운 배열</p>\n</li>\n<li>\n<p>예시</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">let</span> fruits1 <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'apple'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'banana'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">let</span> fruits2 <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'orange'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'pear'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">let</span> allFruits <span class=\"token operator\">=</span> fruits1<span class=\"token punctuation\">.</span><span class=\"token function\">concat</span><span class=\"token punctuation\">(</span>fruits2<span class=\"token punctuation\">,</span> <span class=\"token string\">'grape'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>allFruits<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// [\"apple\", \"banana\", \"orange\", \"pear\", \"grape\"]</span></code></pre></div>\n</li>\n</ul>\n<h2 id=\"배열명everycallbackfn-thisarg\" style=\"position:relative;\"><a href=\"#%EB%B0%B0%EC%97%B4%EB%AA%85everycallbackfn-thisarg\" aria-label=\"배열명everycallbackfn thisarg permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>배열명.every(callbackFn, thisArg)</h2>\n<ul>\n<li>\n<p>배열의 모든 요소가 주어진 함수의 테스트를 통과하는지 확인합니다.</p>\n</li>\n<li>\n<p>parameters</p>\n<ul>\n<li>callbackFn: 각 요소를 검사할 함수</li>\n<li>thisArg: callbackFn 내부에서 this로 사용될 객체</li>\n</ul>\n</li>\n<li>\n<p>return 모든 요소가 함수를 통과하면 true 그렇지 않는다면 false</p>\n</li>\n<li>\n<p>예시</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> array <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">6</span><span class=\"token punctuation\">,</span> <span class=\"token number\">8</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> result <span class=\"token operator\">=</span> array<span class=\"token punctuation\">.</span><span class=\"token function\">every</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">element</span> <span class=\"token operator\">=></span> element <span class=\"token operator\">%</span> <span class=\"token number\">2</span> <span class=\"token operator\">===</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>result<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// true</span></code></pre></div>\n</li>\n</ul>\n<h2 id=\"배열명somecallbackfn-thisarg\" style=\"position:relative;\"><a href=\"#%EB%B0%B0%EC%97%B4%EB%AA%85somecallbackfn-thisarg\" aria-label=\"배열명somecallbackfn thisarg permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>배열명.some(callbackFn, thisArg)</h2>\n<ul>\n<li>\n<p>배열의 일부 요소가 주어진 함수의 테스트를 통과하는지 확인합니다.</p>\n</li>\n<li>\n<p>parameters</p>\n<ul>\n<li>callback: 각 요소를 검사할 함수</li>\n<li>thisArg: callback 내부에서 this로 사용될 객체</li>\n</ul>\n</li>\n<li>\n<p>return 1개 이상의 요소가 함수를 통과하면 true 그렇지 않는다면 false</p>\n</li>\n<li>\n<p>예시</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> array <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">6</span><span class=\"token punctuation\">,</span> <span class=\"token number\">8</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">// 3 is odd</span>\n\n<span class=\"token keyword\">const</span> result <span class=\"token operator\">=</span> array<span class=\"token punctuation\">.</span><span class=\"token function\">some</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">element</span> <span class=\"token operator\">=></span> element <span class=\"token operator\">%</span> <span class=\"token number\">2</span> <span class=\"token operator\">===</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>result<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// true</span></code></pre></div>\n</li>\n</ul>\n<h2 id=\"배열명foreachcallbackfncurrentvalue-index-array-thisarg\" style=\"position:relative;\"><a href=\"#%EB%B0%B0%EC%97%B4%EB%AA%85foreachcallbackfncurrentvalue-index-array-thisarg\" aria-label=\"배열명foreachcallbackfncurrentvalue index array thisarg permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>배열명.forEach(callbackFn(currentvalue[, index[, array]])[, thisArg)</h2>\n<ul>\n<li>\n<p>배열의 각 요소마다 주어진 함수를 실행합니다.</p>\n</li>\n<li>\n<p>parameters</p>\n<ul>\n<li>callback: 각 요소에 대해 실행할 함수\n<ul>\n<li>currentValue: 현재 처리 중인 요소의 값</li>\n<li>index: 현재 처리 중인 요소의 인덱스</li>\n<li>array: forEach()가 적용되는 배열 객체</li>\n</ul>\n</li>\n<li>thisArg: callback 내부에서 this로 사용될 객체</li>\n</ul>\n</li>\n<li>\n<p>return 없음</p>\n</li>\n<li>\n<p>예시</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> array <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'apple'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'banana'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'pear'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\narray<span class=\"token punctuation\">.</span><span class=\"token function\">forEach</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">element</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>element<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n</li>\n</ul>\n<h2 id=\"배열명mapcallbackfncurrentvalue-index-array-thisarg\" style=\"position:relative;\"><a href=\"#%EB%B0%B0%EC%97%B4%EB%AA%85mapcallbackfncurrentvalue-index-array-thisarg\" aria-label=\"배열명mapcallbackfncurrentvalue index array thisarg permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>배열명.map(callbackFn(currentValue[, index[, array]])[, thisArg])</h2>\n<ul>\n<li>배열의 모든 요소에 대해 주어진 함수를 호출한 결과를 모아 새로운 배열을 반환합니다.</li>\n</ul>\n<p>forEach와 비슷하지만 <strong>새로운 배열을 반환한다</strong>는 것에 다르다.</p>\n<ul>\n<li>\n<p>parameters</p>\n<ul>\n<li>callback: 각 요소에 대해 실행할 함수\n<ul>\n<li>currentValue: 현재 처리 중인 요소의 값</li>\n<li>index: 현재 처리 중인 요소의 인덱스</li>\n<li>array: map()이 적용되는 배열 객체</li>\n</ul>\n</li>\n<li>thisArg: callback 내부에서 this로 사용될 객체</li>\n</ul>\n</li>\n<li>\n<p>return 함수의 호출한 결과를 모은 새로운 배열</p>\n</li>\n<li>\n<p>예시</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> array <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> newArray <span class=\"token operator\">=</span> array<span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">element</span> <span class=\"token operator\">=></span> element <span class=\"token operator\">*</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>newArray<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// [2, 4, 6]</span></code></pre></div>\n</li>\n</ul>\n<h2 id=\"배열명filtercallbackfncurrentvalue-index-array-thisarg\" style=\"position:relative;\"><a href=\"#%EB%B0%B0%EC%97%B4%EB%AA%85filtercallbackfncurrentvalue-index-array-thisarg\" aria-label=\"배열명filtercallbackfncurrentvalue index array thisarg permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>배열명.filter(callbackFn(currentValue[, index[, array]])[, thisArg])</h2>\n<ul>\n<li>주어진 함수의 테스트를 통과하는 요소로 이루어진 새로운 배열을 반환합니다.</li>\n</ul>\n<p>map과 비슷하지만 <strong>주어진 condition에 따라 필터된 요소</strong>의 배열을 반환한다는 것에 다르다.</p>\n<ul>\n<li>\n<p>parameters</p>\n<ul>\n<li>callback: 각 요소에 대해 실행할 함수\n<ul>\n<li>element: 현재 처리 중인 요소의 값</li>\n<li>index: 현재 처리 중인 요소의 인덱스</li>\n<li>array: filter()가 적용되는 배열 객체</li>\n</ul>\n</li>\n<li>thisArg: callback 내부에서 this로 사용될 객체</li>\n</ul>\n</li>\n<li>\n<p>return 필터링된 요소의 배열</p>\n</li>\n<li>\n<p>예시</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> array <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> newArray <span class=\"token operator\">=</span> array<span class=\"token punctuation\">.</span><span class=\"token function\">filter</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">element</span> <span class=\"token operator\">=></span> element <span class=\"token operator\">></span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>newArray<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// [3, 4, 5]</span></code></pre></div>\n</li>\n</ul>\n<h2 id=\"배열명fillvalue-start-end\" style=\"position:relative;\"><a href=\"#%EB%B0%B0%EC%97%B4%EB%AA%85fillvalue-start-end\" aria-label=\"배열명fillvalue start end permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>배열명.fill(value, start, end)</h2>\n<ul>\n<li>\n<p>배열의 시작 인덱스부터 끝 인덱스까지 정적인 값으로 채웁니다.</p>\n</li>\n<li>\n<p>parameters</p>\n<ul>\n<li>value: 배열을 채울 값</li>\n<li>start: 시작 인덱스</li>\n<li>end: 끝 인덱스</li>\n</ul>\n</li>\n<li>\n<p>return 없음</p>\n</li>\n<li>\n<p>예시</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> array <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> newArray <span class=\"token operator\">=</span> array<span class=\"token punctuation\">.</span><span class=\"token function\">fill</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>newArray<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// [0, 0, 0]</span></code></pre></div>\n</li>\n</ul>\n<h2 id=\"배열명includesvaluetofind-fromindex\" style=\"position:relative;\"><a href=\"#%EB%B0%B0%EC%97%B4%EB%AA%85includesvaluetofind-fromindex\" aria-label=\"배열명includesvaluetofind fromindex permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>배열명.includes(valueToFind, fromIndex)</h2>\n<ul>\n<li>\n<p>배열이 특정 요소를 포함하고 있는지 확인합니다.</p>\n</li>\n<li>\n<p>parameters</p>\n<ul>\n<li>valueToFind: 찾을 요소의 값</li>\n<li>fromIndex: 검색을 시작할 인덱스 위치</li>\n</ul>\n</li>\n<li>\n<p>return 포함하고 있으면 true 아니면 false</p>\n</li>\n<li>\n<p>예시</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> array <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> hasTwo <span class=\"token operator\">=</span> array<span class=\"token punctuation\">.</span><span class=\"token function\">includes</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>hasTwo<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// true</span></code></pre></div>\n</li>\n</ul>\n<h2 id=\"배열명reducecallback-initialvalue\" style=\"position:relative;\"><a href=\"#%EB%B0%B0%EC%97%B4%EB%AA%85reducecallback-initialvalue\" aria-label=\"배열명reducecallback initialvalue permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>배열명**.reduce(callback, initialValue)**</h2>\n<ul>\n<li>\n<p>배열의 각 요소에 대해 주어진 리듀서 함수를 실행하고, 하나의 결과값을 반환합니다.</p>\n</li>\n<li>\n<p>parameters</p>\n<ul>\n<li>callback: 배열의 각 요소에 대해 실행할 함수\n<ul>\n<li>accumulator: 콜백의 반환값을 누적하는 데 사용할 변수</li>\n<li>currentValue: 현재 처리 중인 요소의 값</li>\n<li>currentIndex: 현재 처리 중인 요소의 인덱스</li>\n<li>array: reduce()가 적용되는 배열 객체</li>\n</ul>\n</li>\n<li>initialValue: 누적값의 초기값</li>\n</ul>\n</li>\n<li>\n<p>return 없음</p>\n</li>\n<li>\n<p>예시</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> numbers <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> sum <span class=\"token operator\">=</span> numbers<span class=\"token punctuation\">.</span><span class=\"token function\">reduce</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">accumulator<span class=\"token punctuation\">,</span> currentValue</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> accumulator <span class=\"token operator\">+</span> currentValue<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>sum<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 15</span></code></pre></div>\n</li>\n</ul>\n<h2 id=\"배열명reverse\" style=\"position:relative;\"><a href=\"#%EB%B0%B0%EC%97%B4%EB%AA%85reverse\" aria-label=\"배열명reverse permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>배열명**.reverse()**</h2>\n<ul>\n<li>\n<p>배열의 요소 순서를 반대로 변경합니다.</p>\n</li>\n<li>\n<p>return 순서가 변경된 해당 배열을 반환</p>\n</li>\n<li>\n<p>예시</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">let</span> arr <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\narr<span class=\"token punctuation\">.</span><span class=\"token function\">reverse</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// [5, 4, 3, 2, 1]</span>\n\n<span class=\"token keyword\">let</span> names <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"Mary\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"John\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Jane\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Mark\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\nnames<span class=\"token punctuation\">.</span><span class=\"token function\">reverse</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// [\"Mark\", \"Jane\", \"John\", \"Mary\"]</span></code></pre></div>\n</li>\n</ul>\n<h2 id=\"배열명sortcomparefunction\" style=\"position:relative;\"><a href=\"#%EB%B0%B0%EC%97%B4%EB%AA%85sortcomparefunction\" aria-label=\"배열명sortcomparefunction permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>배열명**.sort(compareFunction)**</h2>\n<ul>\n<li>배열의 요소를 정렬합니다.</li>\n<li>compareFunction: 정렬 순서를 정의하는 함수 (선택적)</li>\n</ul>\n<p>기본적으로 문자열처럼 문자를 기준으로 sort해주고 (ASCII 문자 순서로 정렬),\ncompareFunction을 정의하여 사용할 때 숫자의 오름차순 내림차순 처럼 할 수도 있다</p>\n<ul>\n<li>\n<p>return 정렬된 배열 반환</p>\n</li>\n<li>\n<p>예시</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">let</span> arr <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">9</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">6</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// 숫자의 오름차순 정렬</span>\narr<span class=\"token punctuation\">.</span><span class=\"token function\">sort</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">a<span class=\"token punctuation\">,</span> b</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> a <span class=\"token operator\">-</span> b<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// [1, 1, 2, 3, 4, 5, 6, 9]</span>\n\n<span class=\"token comment\">// 숫자의 내림차순 정렬</span>\narr<span class=\"token punctuation\">.</span><span class=\"token function\">sort</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">a<span class=\"token punctuation\">,</span> b</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> b <span class=\"token operator\">-</span> a<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// [9, 6, 5, 4, 3, 2, 1, 1]</span></code></pre></div>\n</li>\n</ul>\n<h2 id=\"배열명tostring\" style=\"position:relative;\"><a href=\"#%EB%B0%B0%EC%97%B4%EB%AA%85tostring\" aria-label=\"배열명tostring permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>배열명**.toString()**</h2>\n<ul>\n<li>\n<p>배열의 모든 요소를 문자열로 변환합니다. 각 요소는 쉼표로 구분됩니다.</p>\n</li>\n<li>\n<p>return: 배열을 표현하는 문자열을 반환</p>\n</li>\n<li>\n<p>예시</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">let</span> arr <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Array contents: \"</span> <span class=\"token operator\">+</span> arr<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// \"Array contents: 1,2,3\"</span></code></pre></div>\n</li>\n</ul>\n<h2 id=\"배열명tolocalestringlocales-options\" style=\"position:relative;\"><a href=\"#%EB%B0%B0%EC%97%B4%EB%AA%85tolocalestringlocales-options\" aria-label=\"배열명tolocalestringlocales options permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>배열명**.toLocaleString([locales[, options]]);**</h2>\n<ul>\n<li>\n<p>배열의 모든 요소를 지정된 로케일에 맞추어 문자열로 변환합니다.</p>\n</li>\n<li>\n<p>return: 서식에 맞춘 문자열을 반환</p>\n</li>\n<li>\n<p>예시</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> myArray <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">1234.56</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">789.1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> formattedArray <span class=\"token operator\">=</span> myArray<span class=\"token punctuation\">.</span><span class=\"token function\">toLocaleString</span><span class=\"token punctuation\">(</span><span class=\"token string\">'en-US'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">style</span><span class=\"token operator\">:</span> <span class=\"token string\">'currency'</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">currency</span><span class=\"token operator\">:</span> <span class=\"token string\">'USD'</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>formattedArray<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// \"$1,234.56, -$789.10, $0.00\"</span></code></pre></div>\n</li>\n</ul>\n<h2 id=\"배열명joinseparator\" style=\"position:relative;\"><a href=\"#%EB%B0%B0%EC%97%B4%EB%AA%85joinseparator\" aria-label=\"배열명joinseparator permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>배열명**.join(separator)**</h2>\n<ul>\n<li>\n<p>배열의 모든 요소를 하나의 문자열로 결합합니다.</p>\n</li>\n<li>\n<p>separator: 각 요소 사이에 삽입할 구분 기호 (선택적)</p>\n</li>\n<li>\n<p>return: “요소1<separator>요소2<separator>요소3<separator>요소4….”</p>\n</li>\n<li>\n<p>예시</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> myArray <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'apple'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'banana'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'orange'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> result <span class=\"token operator\">=</span> myArray<span class=\"token punctuation\">.</span><span class=\"token function\">join</span><span class=\"token punctuation\">(</span><span class=\"token string\">', '</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>result<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// \"apple, banana, orange\"</span></code></pre></div>\n</li>\n</ul>","frontmatter":{"date":"April 03, 2023","title":"배열 메소드","categories":"Javascript Learning","author":"Juhyeon Lee","emoji":null},"fields":{"slug":"/f2a7c567-4f56-4a33-83fe-187e84190484/"}},"site":{"siteMetadata":{"siteUrl":"https://d556f8.netlify.io","comments":{"utterances":{"repo":"d556f8/d556f8-devlog"}}}}},"pageContext":{"slug":"/6f68b661-dbcc-4163-9f0e-37da2117e216/","nextSlug":"/e3bd0d5c-3189-468f-9710-6e14273fe102/","prevSlug":"/f2a7c567-4f56-4a33-83fe-187e84190484/"}},"staticQueryHashes":["1073350324","1956554647","2938748437"],"slicesMap":{}}
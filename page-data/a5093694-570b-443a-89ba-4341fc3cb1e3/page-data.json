{"componentChunkName":"component---src-templates-blog-template-js","path":"/a5093694-570b-443a-89ba-4341fc3cb1e3/","result":{"data":{"cur":{"id":"481f9897-dedc-53f6-a56f-19734bae8924","html":"<h1 id=\"상속inheritance\" style=\"position:relative;\"><a href=\"#%EC%83%81%EC%86%8Dinheritance\" aria-label=\"상속inheritance permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>상속(Inheritance)</h1>\n<p>상속은 기존에 정의된 클래스의 _속성(properties)_과 _기능(methods)_을 새로운 클래스에 <u>재사용</u>하는 것.</p>\n<p>상속을 통해 코드의 <strong>재사용성</strong>을 높이고, <strong>유지보수</strong>를 용이하게 하도록 함.</p>\n<p><code class=\"language-text\">extends</code>라는 키워드를 사용하여 상속을 구현한다.</p>\n<p><strong>WHAT</strong></p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">- 상속은 기존에 정의된 클래스의 속성(properties)과 기능(methods)을 새로운 클래스에 재사용하는 것.</code></pre></div>\n<p><strong>WHY</strong></p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">- 상속을 통해 코드의 **재사용성**을 높이고, **유지보수**를 용이하게 하도록 함.\n- 기존에 정의된 클래스 기반으로 새로운 클래스를 만들어 코드를 재사용함으로 개발시간을 줄인다.</code></pre></div>\n<p><strong>FEATURE</strong></p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">- ‘is-a’ 관계이다. &lt;u>예시) 거미는 동물이다. 리트리버는 개과이다. 등…&lt;/u>\n- 하나의 클래스만 상속받을 수 있다.\n\t- 인터페이스를 사용하면 다중 상속을 구현할 수 있다. (단순히 말하면)</code></pre></div>\n<h2 id=\"자바프로그래밍에서의-상속\" style=\"position:relative;\"><a href=\"#%EC%9E%90%EB%B0%94%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%B0%8D%EC%97%90%EC%84%9C%EC%9D%98-%EC%83%81%EC%86%8D\" aria-label=\"자바프로그래밍에서의 상속 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>자바프로그래밍에서의 상속</h2>\n<ol>\n<li>\n<p><strong>코드 1</strong></p>\n<hr>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">A</span> <span class=\"token punctuation\">{</span>\n\tint a_x <span class=\"token operator\">=</span> <span class=\"token number\">10</span><span class=\"token punctuation\">;</span>\n\t\n\tint <span class=\"token function\">getAx</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">return</span> a_x<span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">B</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">A</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token operator\">...</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">C1</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">B</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token operator\">...</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">C2</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">B</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token operator\">...</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Main</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">String arg<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\t<span class=\"token constant\">B</span> b1 <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">B</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\tSystem<span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>b1<span class=\"token punctuation\">.</span><span class=\"token function\">getAx</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<ul>\n<li>B는 A를 상속하는 클래스이다.</li>\n<li>C1, C2는 B를 상속하는 클래스이다.</li>\n</ul>\n<p><strong>메인메소드</strong></p>\n<hr>\n<ol>\n<li><code class=\"language-text\">B</code>의 인스턴스를 만들고 <code class=\"language-text\">b1</code> (참조변수)에 할당했다.</li>\n<li><code class=\"language-text\">b1</code>의 멤버메소드인 <code class=\"language-text\">getAx()</code> 호출했다.\n<ol>\n<li><code class=\"language-text\">B</code> 클래스는 <code class=\"language-text\">A</code>를 상속하므로 <code class=\"language-text\">A</code>의 _멤버 변수_와 _멤버 메소드_를 호출할 수 있다.</li>\n</ol>\n</li>\n</ol>\n</li>\n<li>\n<p><strong>코드 2</strong></p>\n<hr>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">Player</span> <span class=\"token punctuation\">{</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">Center</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">Player</span> <span class=\"token punctuation\">{</span>\n<span class=\"token punctuation\">}</span>\n\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">Forward</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">Player</span> <span class=\"token punctuation\">{</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">SF</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">Forward</span> <span class=\"token punctuation\">{</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">PF</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">Forward</span> <span class=\"token punctuation\">{</span>\n<span class=\"token punctuation\">}</span>\n\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">Guard</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">Player</span> <span class=\"token punctuation\">{</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">PG</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">Guard</span> <span class=\"token punctuation\">{</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">SG</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">Guard</span> <span class=\"token punctuation\">{</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<ul>\n<li>모든 포지션은 Player이다.</li>\n<li>SF, PF는 Forward이다.</li>\n<li>PG, SG는 Guard이다.</li>\n</ul>\n</li>\n<li>\n<p><strong>코드 3</strong></p>\n<hr>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Inheritance</span> <span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> args<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t      <span class=\"token class-name\">Player</span> p1 <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">SG</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">Player</span> p2 <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">PF</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t\tp1<span class=\"token punctuation\">.</span><span class=\"token function\">shoot</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t\tp2<span class=\"token punctuation\">.</span><span class=\"token function\">shoot</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">Player</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token class-name\">String</span> name<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">int</span> num<span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">void</span> <span class=\"token function\">shoot</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Player 슛\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">SG</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">Player</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">SG</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> argName<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> argNum<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        name <span class=\"token operator\">=</span> argName<span class=\"token punctuation\">;</span>\n        num <span class=\"token operator\">=</span> argNum<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">void</span> <span class=\"token function\">shoot</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"SG슛\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">PF</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">Player</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">PF</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> argName<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> argNum<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        name <span class=\"token operator\">=</span> argName<span class=\"token punctuation\">;</span>\n        num <span class=\"token operator\">=</span> argNum<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<ul>\n<li>SG, PF는 Player이다.</li>\n</ul>\n<p><strong>메인메소드</strong></p>\n<hr>\n<ol>\n<li><code class=\"language-text\">SG</code>의 새로운 인스턴스가 <code class=\"language-text\">p1</code>에 참조되었다.</li>\n<li><code class=\"language-text\">PF</code>의 새로운 인스턴스가 <code class=\"language-text\">p2</code>에 참조되었다.</li>\n<li><code class=\"language-text\">p1.shoot()</code> 호출\n<ol>\n<li><code class=\"language-text\">SG</code>의 <code class=\"language-text\">shoot()</code> _멤버 메소드_를 호출하였다.</li>\n</ol>\n</li>\n<li><code class=\"language-text\">p2.shoot()</code> 호출\n<ol>\n<li><code class=\"language-text\">Player</code>의 <code class=\"language-text\">shoot()</code> _멤버 메소드_를 호출하였다.</li>\n</ol>\n</li>\n</ol>\n</li>\n<li>\n<p><strong>코드 주현4</strong></p>\n<hr>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">A</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">int</span> x <span class=\"token operator\">=</span> <span class=\"token number\">3</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token punctuation\">}</span>\n\t\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">B</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">A</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">void</span> <span class=\"token function\">prtK</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\t<span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">C</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">B</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">int</span> x <span class=\"token operator\">=</span> <span class=\"token number\">5</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">void</span> <span class=\"token function\">prtX</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\t<span class=\"token function\">prtK</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Main</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> arg<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\t<span class=\"token class-name\">C</span> obj <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">C</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\tobj<span class=\"token punctuation\">.</span><span class=\"token function\">prtX</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>main 메소드에서 실행되는 <code class=\"language-text\">obj.prtX()</code> 의 실행결과는</p>\n<p><code class=\"language-text\">3</code></p>\n</li>\n</ol>\n<p><a href=\"https://s3.us-west-2.amazonaws.com/secure.notion-static.com/843a3e28-0b41-4069-8179-99966a9abb82/Polymorphism.pdf?X-Amz-Algorithm=AWS4-HMAC-SHA256&#x26;X-Amz-Content-Sha256=UNSIGNED-PAYLOAD&#x26;X-Amz-Credential=AKIAT73L2G45EIPT3X45%2F20230422%2Fus-west-2%2Fs3%2Faws4_request&#x26;X-Amz-Date=20230422T130642Z&#x26;X-Amz-Expires=3600&#x26;X-Amz-Signature=b0f1c9f79b0ad2d0f9f0fa97180f2c3df7a0be413c96725f8c0db55a2a65d714&#x26;X-Amz-SignedHeaders=host&#x26;x-id=GetObject\">image</a></p>","excerpt":"상속(Inheritance) 상속은 기존에 정의된 클래스의 _속성(properties)_과 _기능(methods)_을 새로운 클래스에 재사용하는 것. 상속을 통해 코드의 재사용성을 높이고, 유지보수를 용이하게 하도록 함. 라는 키워드를 사용하여 상속을 구현한다. WHAT WHY FEATURE 자바프로그래밍에서의 상속 코드 1 B는 A를 상속하는 클래스이다. C1, C2는 B를 상속하는 클래스이다. 메인메소드 의 인스턴스를 만들고  (참조변수)에 할당했다. 의 멤버메소드인  호출했다.  클래스는 를 상속하므로 의 _멤버 변수_와 _멤버 메소드_를 호출할 수 있다. 코드 2 모든 포지션은 Player이다. SF, PF는 Forward이다. PG, SG는 Guard이다. 코드 3 SG, PF는 Player이다. 메인메소드 의 새로운 인스턴스가 에 참조되었다. 의 새로운 인스턴스가 에 참조되었다.  호출 의  _멤버 메소드_를 호출하였다.  호출 의  _멤버 메소드_를 호출하였다. 코드 …","frontmatter":{"date":"April 22, 2023","title":"Inheritance","categories":"Java Learning","author":"Juhyeon Lee","emoji":null},"fields":{"slug":"/a5093694-570b-443a-89ba-4341fc3cb1e3/"}},"next":{"id":"149ba741-7280-543b-b8dd-ea3a300e2eca","html":"<h1 id=\"다형성polymorphism\" style=\"position:relative;\"><a href=\"#%EB%8B%A4%ED%98%95%EC%84%B1polymorphism\" aria-label=\"다형성polymorphism permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>다형성(Polymorphism)</h1>\n<p>다형성은 하나의 인터페이스로부터 상속받은 여러 클래스들이 같은 메서드를 가지고 있을 때 각 클래스마다 다르게 구현된 메서드를 호출하는 기능.</p>\n<p>즉, 같은 인터페이스를 가지면서도 <strong>각 클래스마다 다른 구현을 할 수 있도록 하는 기능</strong>이다.</p>\n<p>자바에서는 _오버라이딩(overriding)_과 _오버로딩(overloading)_을 통해 다형성을 구현합니다.</p>\n<p><strong>WHAT</strong></p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">- 다형성은 하나의 타입이 여러 형태를 가질 수 있다는 것.\n- 객체가 상속받은 클래스나 인터페이스를 구현하는 경우, 객체는 해당 클래스나 인터페이스를 상속받은 객체처럼 동작할 수 있는 기능을 가짐.</code></pre></div>\n<p><strong>WHY</strong></p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">- 코드를 **재사용**할 수 있어서 코드를 작성할 때 유연하게 프로그램을 작성할 수 있다.\n- 코드의 **가독성**과 **유지보수성**을 높일 수 있다.</code></pre></div>\n<p><strong>FEATURE</strong></p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">- 같은 메서드명으로 여러 타입의 객체를 처리할 수 있다.\n- 상위 타입의 참조변수로 하위 타입의 객체를 참조할 수 있다.\n- 인터페이스를 구현하는 클래스는 인터페이스를 사용할 수 있다.</code></pre></div>\n<ol>\n<li>Visibility of a reference variable (참조변수의 가시성)</li>\n<li>Dynamic binding for an overrided method (오버라이딩된 메소드의 동적 바인딩)</li>\n</ol>\n<h2 id=\"자바프로그래밍에서의-다형성\" style=\"position:relative;\"><a href=\"#%EC%9E%90%EB%B0%94%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%B0%8D%EC%97%90%EC%84%9C%EC%9D%98-%EB%8B%A4%ED%98%95%EC%84%B1\" aria-label=\"자바프로그래밍에서의 다형성 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>자바프로그래밍에서의 다형성</h2>\n<ol>\n<li>\n<p><strong>코드 1</strong></p>\n<hr>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">A</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">int</span> x <span class=\"token operator\">=</span> <span class=\"token number\">3</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">void</span> <span class=\"token function\">prtX</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\t<span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">B</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">A</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">int</span> x <span class=\"token operator\">=</span> <span class=\"token number\">4</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">int</span> y <span class=\"token operator\">=</span> <span class=\"token number\">5</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> arg<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token class-name\">A</span> obj <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">B</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>obj<span class=\"token punctuation\">.</span>y<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// &lt;===== err, 가시성문제....</span>\n\t<span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">B</span><span class=\"token punctuation\">)</span>obj<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>y<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">// &lt;=== 참조변수의 자료형을 강제적으로 형변환</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<ul>\n<li>B는 A를 상속하는 클래스이다.</li>\n</ul>\n<p><strong>메인메소드</strong></p>\n<hr>\n<ol>\n<li><code class=\"language-text\">B</code>의 인스턴스를 만들고 <code class=\"language-text\">A</code>형의 <code class=\"language-text\">obj</code>(참조변수)에 참조되었다.</li>\n<li><code class=\"language-text\">obj</code>의 멤버 변수인 <code class=\"language-text\">y</code>를 호출하려고 하지만, <code class=\"language-text\">A</code>형에는 <code class=\"language-text\">y</code>가 없어 <u>호출 할 수 없다.</u></li>\n</ol>\n<p><strong>가시성</strong> 문제로 <code class=\"language-text\">B</code>의 인스턴스이라도 <code class=\"language-text\">A</code>형인 <code class=\"language-text\">obj</code>에서는 <code class=\"language-text\">B</code>형의 멤버변수를 볼 수 없다.\n3. <code class=\"language-text\">A</code>형인 <code class=\"language-text\">obj</code>를 <code class=\"language-text\">B</code>형으로 <strong>강제적 형변환</strong>으로 통해 <code class=\"language-text\">y</code>를 호출하였다.</p>\n<p><strong>참고자료</strong></p>\n<hr>\n<p><img src=\"https://s3.us-west-2.amazonaws.com/secure.notion-static.com/c1222769-1220-4230-a89b-b470cbaafaac/Untitled.jpeg?X-Amz-Algorithm=AWS4-HMAC-SHA256&#x26;X-Amz-Content-Sha256=UNSIGNED-PAYLOAD&#x26;X-Amz-Credential=AKIAT73L2G45EIPT3X45%2F20230422%2Fus-west-2%2Fs3%2Faws4_request&#x26;X-Amz-Date=20230422T130644Z&#x26;X-Amz-Expires=3600&#x26;X-Amz-Signature=6b8f86660d1ca91fcfb48ea428c9d5c818e5e53e04d0fe9970816c353b9b7ca2&#x26;X-Amz-SignedHeaders=host&#x26;x-id=GetObject\" alt=\"\"></p>\n</li>\n<li>\n<p><strong>코드 2</strong></p>\n<hr>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">Terran</span> <span class=\"token punctuation\">{</span> <span class=\"token keyword\">int</span> hp<span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">Scv</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">Terran</span> <span class=\"token punctuation\">{</span> <span class=\"token keyword\">int</span> mineral<span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">Tank</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">Terran</span> <span class=\"token punctuation\">{</span> <span class=\"token keyword\">boolean</span> sMode<span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">Marine</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">Terran</span> <span class=\"token punctuation\">{</span> <span class=\"token keyword\">boolean</span> sPack<span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">MyFoo</span> <span class=\"token punctuation\">{</span>\n   <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">prtStatusOfSMode</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Terran</span> argObj<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token comment\">// 각 클래스별 S mode값을 출력하라.</span>\n      <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>argObj <span class=\"token keyword\">instanceof</span> <span class=\"token class-name\">Scv</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>             <span class=\"token comment\">// argObj는 Scv의 인스턴스면</span>\n         <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Scv</span><span class=\"token punctuation\">)</span>argObj<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>mineral<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>argObj <span class=\"token keyword\">instanceof</span> <span class=\"token class-name\">Tank</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>    <span class=\"token comment\">// argObj는 Tank의 인스턴스면</span>\n         <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Tank</span><span class=\"token punctuation\">)</span>argObj<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>sMode<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>argObj <span class=\"token keyword\">instanceof</span> <span class=\"token class-name\">Marine</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>  <span class=\"token comment\">// argObj는 Marine의 인스턴스면</span>\n         <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Marine</span><span class=\"token punctuation\">)</span>argObj<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>sPack<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span>\n   <span class=\"token punctuation\">}</span>\n   <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token class-name\">Terran</span> o1 <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Scv</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token class-name\">Terran</span> o2 <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Marine</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token class-name\">Terran</span> o3 <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Tank</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n      <span class=\"token class-name\">MyFoo</span><span class=\"token punctuation\">.</span><span class=\"token function\">prtStatusOfSMode</span><span class=\"token punctuation\">(</span>o1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">// mineral 변수 호출</span>\n      <span class=\"token class-name\">MyFoo</span><span class=\"token punctuation\">.</span><span class=\"token function\">prtStatusOfSMode</span><span class=\"token punctuation\">(</span>o2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">// sPack 변수 호출</span>\n      <span class=\"token class-name\">MyFoo</span><span class=\"token punctuation\">.</span><span class=\"token function\">prtStatusOfSMode</span><span class=\"token punctuation\">(</span>o3<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">// sMode 변수 호출</span>\n   <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n<ul>\n<li>Scv, Tank, Marine은 Terran을 상속하는 클래스이다.</li>\n<li>각 클래스당 특별한 멤버 변수를 가지고 있다.</li>\n</ul>\n<p><strong>메인 메소드</strong></p>\n<hr>\n<ol>\n<li><code class=\"language-text\">Scv</code>, <code class=\"language-text\">Marine</code>, <code class=\"language-text\">Tank</code> 각각의 인스턴스를 만들고 <code class=\"language-text\">Terran</code>형의 참조변수에 참조되었다.</li>\n<li><code class=\"language-text\">prtStatusOfSMode()</code>(정적 메소드)를 통하여 각 객체는 어떤 클래스의 인스턴스인지 확인한다.\n<ol>\n<li><code class=\"language-text\">argObj</code>가 <code class=\"language-text\">Scv</code>의 인스턴스면, <code class=\"language-text\">Scv</code>형으로 강제 형변환하고 <code class=\"language-text\">mineral</code>을 호출하였다.</li>\n<li><code class=\"language-text\">argObj</code>가 <code class=\"language-text\">Tank</code>의 인스턴스면, <code class=\"language-text\">Tank</code>형으로 강제 형변환하고 <code class=\"language-text\">sMode</code>을 호출하였다.</li>\n<li><code class=\"language-text\">argObj</code>가 <code class=\"language-text\">Marine</code>의 인스턴스면, <code class=\"language-text\">Marine</code>형으로 강제 형변환하고 <code class=\"language-text\">sPack</code>을 호출하였다.</li>\n</ol>\n</li>\n</ol>\n</li>\n</ol>\n<h3 id=\"overriding\" style=\"position:relative;\"><a href=\"#overriding\" aria-label=\"overriding permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Overriding</h3>\n<p>오버라이딩 (<strong>덮어쓰다</strong>, <strong>재정의</strong>)- 상속</p>\n<p>오버라이딩은 <u>상속받은 클래스</u>에서 <u>부모의 클래스</u>의 <u>메서드를</u> <u><strong>재정의</strong></u>하는 것.</p>\n<p>오버라이딩을하면 <u>하위 클래스</u>에서 <u>부모 클래스</u>의 메서드를 그대로 사용하는 대신, <strong>재정의</strong>한 메서드를 사용하게 된다.</p>\n<p>오버라이딩을 할 때는 <em>메서드 이름</em>, <em>매개변수</em>, _리턴 타입_이 부모 클래스와 일치해야한다.</p>\n<p>접근제어자는 부모와 같거나 좁은 범위로 설정해야 한다.</p>\n<ol>\n<li>\n<p><strong>코드 1</strong></p>\n<hr>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">A</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">int</span> x <span class=\"token operator\">=</span> <span class=\"token number\">3</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">void</span> <span class=\"token function\">prtX</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\t<span class=\"token function\">sout</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"prtX of A is invoked\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">B</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">A</span> <span class=\"token punctuation\">{</span>\n\t <span class=\"token keyword\">int</span> x <span class=\"token operator\">=</span> <span class=\"token number\">5</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Main</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> args<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">new</span> <span class=\"token class-name\">B</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">prtX</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">// prtX of A is invoked</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>해당 코드 오버라이딩의 예 ⬇️</p>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">A</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">int</span> x <span class=\"token operator\">=</span> <span class=\"token number\">3</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">void</span> <span class=\"token function\">prtX</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\t<span class=\"token function\">sout</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"prtX of A is invoked\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">B</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">A</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">int</span> x <span class=\"token operator\">=</span> <span class=\"token number\">5</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">void</span> <span class=\"token function\">prtX</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\t<span class=\"token function\">sout</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"prtX of B is invoked\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Main</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> args<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">new</span> <span class=\"token class-name\">B</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">prtX</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">// prtX of B is invoked</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p><code class=\"language-text\">super</code> 키워드를 사용하여 부모를 객체를 호출</p>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">A</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">int</span> x <span class=\"token operator\">=</span> <span class=\"token number\">3</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">void</span> <span class=\"token function\">prtX</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\t<span class=\"token function\">sout</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"prtX of A is invoked\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">B</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">A</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">int</span> x <span class=\"token operator\">=</span> <span class=\"token number\">5</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">void</span> <span class=\"token function\">prtX</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">super</span><span class=\"token punctuation\">.</span><span class=\"token function\">prtX</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">// 부모의 prtX() 메소드를 호출 </span>\n\t\t<span class=\"token function\">sout</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"prtX of B is invoked\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Main</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> args<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">new</span> <span class=\"token class-name\">B</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">prtX</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">// prtX of A is invoked</span>\n\t<span class=\"token punctuation\">}</span>                  <span class=\"token comment\">// prtX of B is invoked</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n</li>\n</ol>\n<h3 id=\"동적-바인딩\" style=\"position:relative;\"><a href=\"#%EB%8F%99%EC%A0%81-%EB%B0%94%EC%9D%B8%EB%94%A9\" aria-label=\"동적 바인딩 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>동적 바인딩</h3>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">Terran</span> <span class=\"token punctuation\">{</span>\n\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">Scv</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">Terran</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">int</span> mineral<span class=\"token punctuation\">;</span>\n\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">Marine</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">Terran</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">boolean</span> sPack<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Starcraft</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token class-name\">Terran</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> unitList <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Terran</span><span class=\"token punctuation\">[</span><span class=\"token number\">200</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n\t\t\t\tunitList<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Scv</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t\tunitList<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Marine</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">//        unitList[0].mineral &lt;-- 접근 불가능!</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n</code></pre></div>\n<p>동적 바인딩(오버라이딩 된 메서드 #)</p>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">Terran</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">void</span> <span class=\"token function\">prtSMode</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span>  <span class=\"token comment\">// 동적바인딩을 하기 위해 선언해놓은 메소드</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">Scv</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">Terran</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">int</span> mineral <span class=\"token operator\">=</span> <span class=\"token number\">20</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">void</span> <span class=\"token function\">prtSMode</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>   <span class=\"token comment\">// #</span>\n        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>mineral<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span>\n\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">Marine</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">Terran</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">boolean</span> sPack <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">void</span> <span class=\"token function\">prtSMode</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>   <span class=\"token comment\">// #</span>\n        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>sPack<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Starcraft</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token class-name\">Terran</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> unitList <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Terran</span><span class=\"token punctuation\">[</span><span class=\"token number\">200</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n\t\t\t\tunitList<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Scv</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t\tunitList<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Marine</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t\t\n\t\t\t\tunitList<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">prtSMode</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  \n\t\t\t\tunitList<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">prtSMode</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n</code></pre></div>\n<p>내일은 추상화…</p>\n<p>동적바인딩 dynamic binding for an  overriding method</p>\n<p>⇒ 다형성을 위해</p>\n<p>overriding</p>\n<ul>\n<li>상속</li>\n<li>메소드</li>\n</ul>\n<p>오버라이딩된 메소드의 동적 바인딩은 다형성의 단점을 보완을 해준다.</p>","frontmatter":{"date":"April 22, 2023","title":"Polymorphism","categories":"Java Learning","author":"Juhyeon Lee","emoji":null},"fields":{"slug":"/96d8f60d-9283-4530-9057-d36e59552bb2/"}},"prev":{"id":"471b60e3-9168-5624-8038-d906c03d49d1","html":"<h1 id=\"함수\" style=\"position:relative;\"><a href=\"#%ED%95%A8%EC%88%98\" aria-label=\"함수 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>함수</h1>\n<details>\n  <summary>목차</summary>\n  </details>\n<p>DB 시스템에서 제공하는 함수는 미리 정의된 기능을 통해 데이터를 좀 더 편리하게 조작할 수 있도록 조와준다.</p>\n<ul>\n<li>데이터 값을 계산하거나 조작 (단일 행 함수)</li>\n<li>행의 그룹에 대해 계산하거나 요약 (그룹 함수)</li>\n<li>열의 데이터 타입을 변환한다. 즉, 날씨와 숫자 등 데이터 타입을 상호 변환합니다.</li>\n</ul>\n<h2 id=\"단일-행-함수\" style=\"position:relative;\"><a href=\"#%EB%8B%A8%EC%9D%BC-%ED%96%89-%ED%95%A8%EC%88%98\" aria-label=\"단일 행 함수 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>단일 행 함수</h2>\n<table>\n<thead>\n<tr>\n<th>저장 데이터</th>\n<th>데이터 타입</th>\n<th>설명</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>문자</td>\n<td>CHAR(n)</td>\n<td>n 크기 만큼 고정 길이의 문자 타입을 저장</td>\n</tr>\n<tr>\n<td>최대 2,000바이트</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>문자</td>\n<td>VARCHAR(n)</td>\n<td>n 크기 만큼 가변 길이의 문자 타입을 저장</td>\n</tr>\n<tr>\n<td>최대 4,000바이트</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>숫자</td>\n<td>NUMBER(p, s)</td>\n<td>숫자 타입을 저장한다 (p: 정수 자릿수, s: 소수 자릿수)</td>\n</tr>\n<tr>\n<td>날짜</td>\n<td>DATE</td>\n<td>날씨 타입을 저장한다.</td>\n</tr>\n</tbody>\n</table>\n<p>LOWER\nUPPER\nINITCAP\nSUBSTR\nREPLACE\nCONCAT\nLENGTH\nINSTR\nLPAD\nRPAD\nLTRIM\nRTRIM</p>\n<h3 id=\"문자-함수\" style=\"position:relative;\"><a href=\"#%EB%AC%B8%EC%9E%90-%ED%95%A8%EC%88%98\" aria-label=\"문자 함수 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>문자 함수</h3>\n<table>\n<thead>\n<tr>\n<th>함수</th>\n<th>설명</th>\n<th>예</th>\n<th>결과</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td></td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td></td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n</tbody>\n</table>\n<ol>\n<li>\n<p><strong>데이터 값을 대소문자로 변환하기</strong></p>\n<ol>\n<li>\n<p><strong>코드</strong></p>\n<hr>\n<div class=\"gatsby-highlight\" data-language=\"sql\"><pre class=\"language-sql\"><code class=\"language-sql\"><span class=\"token comment\">/* LOWER, UPPER, INITCAP */</span>\n<span class=\"token keyword\">SELECT</span> last_name<span class=\"token punctuation\">,</span>\n    LOWER<span class=\"token punctuation\">(</span>last_name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    UPPER<span class=\"token punctuation\">(</span>last_name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    email<span class=\"token punctuation\">,</span>\n    INITCAP<span class=\"token punctuation\">(</span>email<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">FROM</span> employees_b<span class=\"token punctuation\">;</span></code></pre></div>\n<p><img src=\"https://s3.us-west-2.amazonaws.com/secure.notion-static.com/0e67a210-829d-435b-b929-c5d1b7975e11/Screenshot_2023-04-05_at_3.44.25_PM.png?X-Amz-Algorithm=AWS4-HMAC-SHA256&#x26;X-Amz-Content-Sha256=UNSIGNED-PAYLOAD&#x26;X-Amz-Credential=AKIAT73L2G45EIPT3X45%2F20230422%2Fus-west-2%2Fs3%2Faws4_request&#x26;X-Amz-Date=20230422T130635Z&#x26;X-Amz-Expires=3600&#x26;X-Amz-Signature=0a3889d9a84a9465e6cfddb3cb090587c4af1312c9f32e9e3116af1b35067524&#x26;X-Amz-SignedHeaders=host&#x26;x-id=GetObject\" alt=\"\"></p>\n</li>\n</ol>\n</li>\n<li>\n<p><strong>지정한 길이만큼 문자열 추출하기</strong></p>\n<ol>\n<li>\n<p><strong>코드</strong></p>\n<hr>\n<div class=\"gatsby-highlight\" data-language=\"sql\"><pre class=\"language-sql\"><code class=\"language-sql\"><span class=\"token comment\">/* SUBSTR */</span>\n<span class=\"token keyword\">SELECT</span> job_id<span class=\"token punctuation\">,</span> SUBSTR<span class=\"token punctuation\">(</span>job_id<span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">FROM</span> employees_b<span class=\"token punctuation\">;</span></code></pre></div>\n<p><img src=\"https://s3.us-west-2.amazonaws.com/secure.notion-static.com/2d75d73d-9952-486a-97a3-c92d046e8889/Untitled.png?X-Amz-Algorithm=AWS4-HMAC-SHA256&#x26;X-Amz-Content-Sha256=UNSIGNED-PAYLOAD&#x26;X-Amz-Credential=AKIAT73L2G45EIPT3X45%2F20230422%2Fus-west-2%2Fs3%2Faws4_request&#x26;X-Amz-Date=20230422T130637Z&#x26;X-Amz-Expires=3600&#x26;X-Amz-Signature=8ba2247027a9282c66c4fece9319df4d597fc52d3e544dfa4d56180d03e74cce&#x26;X-Amz-SignedHeaders=host&#x26;x-id=GetObject\" alt=\"\"></p>\n</li>\n</ol>\n</li>\n<li>\n<p><strong>특정 문자를 찾아 바꾸기</strong></p>\n<ol>\n<li>\n<p><strong>코드</strong></p>\n<hr>\n<div class=\"gatsby-highlight\" data-language=\"sql\"><pre class=\"language-sql\"><code class=\"language-sql\"><span class=\"token comment\">/* REPLACE */</span>\n<span class=\"token keyword\">SELECT</span> job_id<span class=\"token punctuation\">,</span> <span class=\"token keyword\">REPLACE</span><span class=\"token punctuation\">(</span>job_id<span class=\"token punctuation\">,</span> <span class=\"token string\">'ACCOUNT'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'ACCNT'</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">FROM</span> employees_b<span class=\"token punctuation\">;</span></code></pre></div>\n<p><img src=\"https://s3.us-west-2.amazonaws.com/secure.notion-static.com/99bfc480-5a29-4b3f-bb63-eaa8677fa101/Screenshot_2023-04-05_at_3.59.09_PM.png?X-Amz-Algorithm=AWS4-HMAC-SHA256&#x26;X-Amz-Content-Sha256=UNSIGNED-PAYLOAD&#x26;X-Amz-Credential=AKIAT73L2G45EIPT3X45%2F20230422%2Fus-west-2%2Fs3%2Faws4_request&#x26;X-Amz-Date=20230422T130646Z&#x26;X-Amz-Expires=3600&#x26;X-Amz-Signature=d205ddd5b9fcdbc71baea44b7fcabcf7b114a0687192c5d481643ccbf8c44e37&#x26;X-Amz-SignedHeaders=host&#x26;x-id=GetObject\" alt=\"\"></p>\n</li>\n</ol>\n</li>\n<li>\n<p><strong>특정 문자로 자릿수 채우기</strong></p>\n<ol>\n<li>\n<p><strong>코드</strong></p>\n<hr>\n<div class=\"gatsby-highlight\" data-language=\"sql\"><pre class=\"language-sql\"><code class=\"language-sql\"><span class=\"token comment\">/* LPAD */</span>\n<span class=\"token keyword\">SELECT</span> first_name<span class=\"token punctuation\">,</span> LPAD<span class=\"token punctuation\">(</span>first_name<span class=\"token punctuation\">,</span> <span class=\"token number\">12</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'*'</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">FROM</span> employees_b<span class=\"token punctuation\">;</span></code></pre></div>\n<p><img src=\"https://s3.us-west-2.amazonaws.com/secure.notion-static.com/7a6ad646-09a3-4c24-b3ce-d076fde26338/Screenshot_2023-04-05_at_4.02.56_PM.png?X-Amz-Algorithm=AWS4-HMAC-SHA256&#x26;X-Amz-Content-Sha256=UNSIGNED-PAYLOAD&#x26;X-Amz-Credential=AKIAT73L2G45EIPT3X45%2F20230422%2Fus-west-2%2Fs3%2Faws4_request&#x26;X-Amz-Date=20230422T130650Z&#x26;X-Amz-Expires=3600&#x26;X-Amz-Signature=8b328af7798ca768cb6a5b06b9a0b4209883a1561f53b9b04bc94c693120fde9&#x26;X-Amz-SignedHeaders=host&#x26;x-id=GetObject\" alt=\"\"></p>\n<div class=\"gatsby-highlight\" data-language=\"sql\"><pre class=\"language-sql\"><code class=\"language-sql\"><span class=\"token comment\">/* RPAD */</span>\n<span class=\"token keyword\">SELECT</span> first_name<span class=\"token punctuation\">,</span> RPAD<span class=\"token punctuation\">(</span>first_name<span class=\"token punctuation\">,</span> <span class=\"token number\">12</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'*'</span><span class=\"token punctuation\">)</span> \n<span class=\"token keyword\">FROM</span> employees_b<span class=\"token punctuation\">;</span></code></pre></div>\n<p><img src=\"https://s3.us-west-2.amazonaws.com/secure.notion-static.com/f61be10b-0a10-488c-9463-be0f806997b1/Screenshot_2023-04-05_at_4.06.51_PM.png?X-Amz-Algorithm=AWS4-HMAC-SHA256&#x26;X-Amz-Content-Sha256=UNSIGNED-PAYLOAD&#x26;X-Amz-Credential=AKIAT73L2G45EIPT3X45%2F20230422%2Fus-west-2%2Fs3%2Faws4_request&#x26;X-Amz-Date=20230422T130650Z&#x26;X-Amz-Expires=3600&#x26;X-Amz-Signature=14cd4d68ca739b2001d790210f6a2d7f514702ea58fa9d3d98e87f1199b4359d&#x26;X-Amz-SignedHeaders=host&#x26;x-id=GetObject\" alt=\"\"></p>\n</li>\n</ol>\n</li>\n<li>\n<p><strong>데이터 값을 하나씩 계산하고 조작하기</strong></p>\n<ol>\n<li>\n<p><strong>코드</strong></p>\n<hr>\n<div class=\"gatsby-highlight\" data-language=\"sql\"><pre class=\"language-sql\"><code class=\"language-sql\"><span class=\"token comment\">/* LTRIM, RTRIM */</span>\n<span class=\"token keyword\">SELECT</span> job_id<span class=\"token punctuation\">,</span>\n    LTRIM<span class=\"token punctuation\">(</span>job_id<span class=\"token punctuation\">,</span> <span class=\"token string\">'F'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    RTRIM<span class=\"token punctuation\">(</span>job_id<span class=\"token punctuation\">,</span> <span class=\"token string\">'T'</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">FROM</span> employees_b<span class=\"token punctuation\">;</span>xxx</code></pre></div>\n<p><img src=\"https://s3.us-west-2.amazonaws.com/secure.notion-static.com/ff7e4491-e9be-49e1-b64f-46d95155446d/Screenshot_2023-04-05_at_4.08.58_PM.png?X-Amz-Algorithm=AWS4-HMAC-SHA256&#x26;X-Amz-Content-Sha256=UNSIGNED-PAYLOAD&#x26;X-Amz-Credential=AKIAT73L2G45EIPT3X45%2F20230422%2Fus-west-2%2Fs3%2Faws4_request&#x26;X-Amz-Date=20230422T130651Z&#x26;X-Amz-Expires=3600&#x26;X-Amz-Signature=456ef864265137c6dcee181f70de7853dfa9fea62fc83011df037122759269aa&#x26;X-Amz-SignedHeaders=host&#x26;x-id=GetObject\" alt=\"\"></p>\n<div class=\"gatsby-highlight\" data-language=\"sql\"><pre class=\"language-sql\"><code class=\"language-sql\"><span class=\"token comment\">/* dual */</span>\n<span class=\"token keyword\">SELECT</span> <span class=\"token string\">'start'</span> <span class=\"token operator\">||</span> TRIM<span class=\"token punctuation\">(</span><span class=\"token string\">'  - space -  '</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">||</span> <span class=\"token string\">'end'</span>\n<span class=\"token keyword\">FROM</span> dual<span class=\"token punctuation\">;</span></code></pre></div>\n</li>\n</ol>\n</li>\n</ol>\n<h3 id=\"숫자-함수\" style=\"position:relative;\"><a href=\"#%EC%88%AB%EC%9E%90-%ED%95%A8%EC%88%98\" aria-label=\"숫자 함수 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>숫자 함수</h3>\n<p>ROUND\nTRUNC\nMOD\nCEIL\nFLOOR\nSIGN\nPOWER\nSQRT</p>\n<ol>\n<li>\n<p><strong>숫자 반올림하기</strong></p>\n<ol>\n<li>\n<p><strong>코드</strong></p>\n<hr>\n<div class=\"gatsby-highlight\" data-language=\"sql\"><pre class=\"language-sql\"><code class=\"language-sql\"><span class=\"token comment\">/* ROUND */</span>\n<span class=\"token keyword\">SELECT</span> salary<span class=\"token punctuation\">,</span>\n    salary<span class=\"token operator\">/</span><span class=\"token number\">30</span> 일급<span class=\"token punctuation\">,</span>\n    <span class=\"token function\">ROUND</span><span class=\"token punctuation\">(</span>salary<span class=\"token operator\">/</span><span class=\"token number\">30</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> 적용결과<span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n    <span class=\"token function\">ROUND</span><span class=\"token punctuation\">(</span>salary<span class=\"token operator\">/</span><span class=\"token number\">30</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> 적용결과<span class=\"token number\">1</span><span class=\"token punctuation\">,</span>\n    <span class=\"token function\">ROUND</span><span class=\"token punctuation\">(</span>salary<span class=\"token operator\">/</span><span class=\"token number\">30</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span> 적용결과MINUS1\n<span class=\"token keyword\">FROM</span> employees_b<span class=\"token punctuation\">;</span></code></pre></div>\n<p><img src=\"https://s3.us-west-2.amazonaws.com/secure.notion-static.com/a66ac045-aeae-4e73-9833-51ff57b8c897/Screenshot_2023-04-05_at_4.46.00_PM.png?X-Amz-Algorithm=AWS4-HMAC-SHA256&#x26;X-Amz-Content-Sha256=UNSIGNED-PAYLOAD&#x26;X-Amz-Credential=AKIAT73L2G45EIPT3X45%2F20230422%2Fus-west-2%2Fs3%2Faws4_request&#x26;X-Amz-Date=20230422T130652Z&#x26;X-Amz-Expires=3600&#x26;X-Amz-Signature=534e5a968b2edf0d79192545ada4ec32784c1125877dfa21e932c98552495cc7&#x26;X-Amz-SignedHeaders=host&#x26;x-id=GetObject\" alt=\"\"></p>\n</li>\n</ol>\n</li>\n<li>\n<p><strong>숫자 절삭하기</strong></p>\n<ol>\n<li>\n<p><strong>코드</strong></p>\n<hr>\n<div class=\"gatsby-highlight\" data-language=\"sql\"><pre class=\"language-sql\"><code class=\"language-sql\"><span class=\"token comment\">/* TRUNC */</span>\n<span class=\"token keyword\">SELECT</span> salary<span class=\"token punctuation\">,</span>\n    salary<span class=\"token operator\">/</span><span class=\"token number\">30</span> 일급<span class=\"token punctuation\">,</span>\n    TRUNC<span class=\"token punctuation\">(</span>salary<span class=\"token operator\">/</span><span class=\"token number\">30</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> 적용결과<span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n    TRUNC<span class=\"token punctuation\">(</span>salary<span class=\"token operator\">/</span><span class=\"token number\">30</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> 적용결과<span class=\"token number\">1</span><span class=\"token punctuation\">,</span>\n    TRUNC<span class=\"token punctuation\">(</span>salary<span class=\"token operator\">/</span><span class=\"token number\">30</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span> 적용결과MINUS1\n<span class=\"token keyword\">FROM</span> employees_b<span class=\"token punctuation\">;</span></code></pre></div>\n<p><img src=\"https://s3.us-west-2.amazonaws.com/secure.notion-static.com/3d4eb502-d20f-4d00-9c98-daec8db38dcd/Screenshot_2023-04-05_at_4.49.41_PM.png?X-Amz-Algorithm=AWS4-HMAC-SHA256&#x26;X-Amz-Content-Sha256=UNSIGNED-PAYLOAD&#x26;X-Amz-Credential=AKIAT73L2G45EIPT3X45%2F20230422%2Fus-west-2%2Fs3%2Faws4_request&#x26;X-Amz-Date=20230422T130654Z&#x26;X-Amz-Expires=3600&#x26;X-Amz-Signature=ed3a6a7b62ffbb74caa86a7532cc7e0dbbdaa723c5b3d3d5ff2167dd5220eea5&#x26;X-Amz-SignedHeaders=host&#x26;x-id=GetObject\" alt=\"\"></p>\n</li>\n</ol>\n</li>\n</ol>\n<h3 id=\"날짜-함수\" style=\"position:relative;\"><a href=\"#%EB%82%A0%EC%A7%9C-%ED%95%A8%EC%88%98\" aria-label=\"날짜 함수 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>날짜 함수</h3>\n<ol>\n<li>\n<p><strong>날짜</strong> <strong>연산하기</strong></p>\n<ol>\n<li>\n<p><strong>코드</strong></p>\n<hr>\n<div class=\"gatsby-highlight\" data-language=\"sql\"><pre class=\"language-sql\"><code class=\"language-sql\"><span class=\"token keyword\">SELECT</span> TO_CHAR <span class=\"token punctuation\">(</span>SYSDATE<span class=\"token punctuation\">,</span> <span class=\"token string\">'YY/MM/DD/HH24:MI'</span><span class=\"token punctuation\">)</span> 오늘날짜<span class=\"token punctuation\">,</span>\n    SYSDATE <span class=\"token operator\">+</span> <span class=\"token number\">1</span> 더하기<span class=\"token number\">1</span><span class=\"token punctuation\">,</span>\n    SYSDATE <span class=\"token operator\">-</span> <span class=\"token number\">1</span> 빼기<span class=\"token number\">1</span><span class=\"token punctuation\">,</span>\n    TO_DATE<span class=\"token punctuation\">(</span><span class=\"token string\">'20171202'</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-</span>TO_DATE<span class=\"token punctuation\">(</span><span class=\"token string\">'20171201'</span><span class=\"token punctuation\">)</span> 날짜빼기<span class=\"token punctuation\">,</span>\n    SYSDATE <span class=\"token operator\">+</span> <span class=\"token number\">13</span><span class=\"token operator\">/</span><span class=\"token number\">24</span> 시간더하기\n<span class=\"token keyword\">FROM</span> DUAL<span class=\"token punctuation\">;</span></code></pre></div>\n<p><img src=\"https://s3.us-west-2.amazonaws.com/secure.notion-static.com/18de5f8a-3756-41b1-885d-93b8e75861e4/Screenshot_2023-04-05_at_5.00.10_PM.png?X-Amz-Algorithm=AWS4-HMAC-SHA256&#x26;X-Amz-Content-Sha256=UNSIGNED-PAYLOAD&#x26;X-Amz-Credential=AKIAT73L2G45EIPT3X45%2F20230422%2Fus-west-2%2Fs3%2Faws4_request&#x26;X-Amz-Date=20230422T130654Z&#x26;X-Amz-Expires=3600&#x26;X-Amz-Signature=83f18ab678bc4b339d6f9fc9fc29a2f63c78b2733f21284f8326c30a9fcf996d&#x26;X-Amz-SignedHeaders=host&#x26;x-id=GetObject\" alt=\"\"></p>\n</li>\n</ol>\n</li>\n<li>\n<p><strong>두 날짜 사이의 개월 수 계산하기</strong></p>\n<ol>\n<li>\n<p><strong>코드</strong></p>\n<hr>\n<div class=\"gatsby-highlight\" data-language=\"sql\"><pre class=\"language-sql\"><code class=\"language-sql\"><span class=\"token comment\">/* MONTHS_BETWEEN */</span>\n<span class=\"token keyword\">SELECT</span> SYSDATE<span class=\"token punctuation\">,</span> \n    hire_date<span class=\"token punctuation\">,</span> \n    TRUNC<span class=\"token punctuation\">(</span>MONTHS_BETWEEN<span class=\"token punctuation\">(</span>SYSDATE<span class=\"token punctuation\">,</span> hire_date<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> 개월수<span class=\"token punctuation\">,</span>\n    TRUNC<span class=\"token punctuation\">(</span>MONTHS_BETWEEN<span class=\"token punctuation\">(</span>SYSDATE<span class=\"token punctuation\">,</span> hire_date<span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> <span class=\"token number\">12</span><span class=\"token punctuation\">)</span> 연수\n<span class=\"token keyword\">FROM</span> employees_b\n<span class=\"token keyword\">WHERE</span> department_id <span class=\"token operator\">=</span> <span class=\"token number\">100</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p><img src=\"https://s3.us-west-2.amazonaws.com/secure.notion-static.com/cdbfb8ac-fb79-4f02-9e47-f3245c360caf/Untitled.png?X-Amz-Algorithm=AWS4-HMAC-SHA256&#x26;X-Amz-Content-Sha256=UNSIGNED-PAYLOAD&#x26;X-Amz-Credential=AKIAT73L2G45EIPT3X45%2F20230422%2Fus-west-2%2Fs3%2Faws4_request&#x26;X-Amz-Date=20230422T130655Z&#x26;X-Amz-Expires=3600&#x26;X-Amz-Signature=a93981d7f95ec330f78a1391eea6f0d74934bd8a3db0b03885a44f798cd2ee15&#x26;X-Amz-SignedHeaders=host&#x26;x-id=GetObject\" alt=\"\"></p>\n</li>\n</ol>\n</li>\n<li>\n<p><strong>월에 날짜 더하기</strong></p>\n<ol>\n<li>\n<p><strong>코드</strong></p>\n<hr>\n<div class=\"gatsby-highlight\" data-language=\"sql\"><pre class=\"language-sql\"><code class=\"language-sql\"><span class=\"token comment\">/* ADD_MONTHS */</span>\n<span class=\"token keyword\">SELECT</span> hire_date<span class=\"token punctuation\">,</span>\n    ADD_MONTHS<span class=\"token punctuation\">(</span>hire_date<span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span> 더하기_적용결과<span class=\"token punctuation\">,</span>\n    ADD_MONTHS<span class=\"token punctuation\">(</span>hire_date<span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span> 빼기_적용결과\n<span class=\"token keyword\">FROM</span> employees_b\n<span class=\"token keyword\">WHERE</span> employee_id <span class=\"token operator\">BETWEEN</span> <span class=\"token number\">100</span> <span class=\"token operator\">AND</span> <span class=\"token number\">106</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p><img src=\"https://s3.us-west-2.amazonaws.com/secure.notion-static.com/e65e02e6-0efa-4420-8b4a-6619c3388dbc/Screenshot_2023-04-05_at_5.14.15_PM.png?X-Amz-Algorithm=AWS4-HMAC-SHA256&#x26;X-Amz-Content-Sha256=UNSIGNED-PAYLOAD&#x26;X-Amz-Credential=AKIAT73L2G45EIPT3X45%2F20230422%2Fus-west-2%2Fs3%2Faws4_request&#x26;X-Amz-Date=20230422T130658Z&#x26;X-Amz-Expires=3600&#x26;X-Amz-Signature=d650188e4ab726818caf790268d449a8335539f71ec4e1099c85c91f6a8d01e3&#x26;X-Amz-SignedHeaders=host&#x26;x-id=GetObject\" alt=\"\"></p>\n</li>\n</ol>\n</li>\n<li>\n<p><strong>돌아오는 요일의 날짜 계산하기</strong></p>\n<ol>\n<li>\n<p><strong>코드</strong></p>\n<hr>\n<div class=\"gatsby-highlight\" data-language=\"sql\"><pre class=\"language-sql\"><code class=\"language-sql\"><span class=\"token comment\">/* NEXT_DAY */</span>\n<span class=\"token keyword\">SELECT</span> hire_date<span class=\"token punctuation\">,</span>\n    NEXT_DAY<span class=\"token punctuation\">(</span>hire_date<span class=\"token punctuation\">,</span> <span class=\"token string\">'FRIDAY'</span><span class=\"token punctuation\">)</span> 적용결과_문자지정<span class=\"token punctuation\">,</span>\n    NEXT_DAY<span class=\"token punctuation\">(</span>hire_date<span class=\"token punctuation\">,</span> <span class=\"token number\">6</span><span class=\"token punctuation\">)</span> 적용결과_숫자지정\n<span class=\"token keyword\">FROM</span> employees_b\n<span class=\"token keyword\">WHERE</span> employee_id <span class=\"token operator\">BETWEEN</span> <span class=\"token number\">100</span> <span class=\"token operator\">AND</span> <span class=\"token number\">106</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p><img src=\"https://s3.us-west-2.amazonaws.com/secure.notion-static.com/1add15d2-3705-4206-bd4c-b86efce6759e/Screenshot_2023-04-05_at_5.19.57_PM.png?X-Amz-Algorithm=AWS4-HMAC-SHA256&#x26;X-Amz-Content-Sha256=UNSIGNED-PAYLOAD&#x26;X-Amz-Credential=AKIAT73L2G45EIPT3X45%2F20230422%2Fus-west-2%2Fs3%2Faws4_request&#x26;X-Amz-Date=20230422T130659Z&#x26;X-Amz-Expires=3600&#x26;X-Amz-Signature=f69e5b7b5014a6d7417b0903509fb72318e065b8bc2d0a2cba223e7097c1b84b&#x26;X-Amz-SignedHeaders=host&#x26;x-id=GetObject\" alt=\"\"></p>\n</li>\n</ol>\n</li>\n<li>\n<p><strong>돌아오는 월의 마지막 날짜 계산하기</strong></p>\n<ol>\n<li>\n<p><strong>코드</strong></p>\n<div class=\"gatsby-highlight\" data-language=\"sql\"><pre class=\"language-sql\"><code class=\"language-sql\"><span class=\"token comment\">/* LAST_DAY */</span>\n<span class=\"token keyword\">SELECT</span> hire_date<span class=\"token punctuation\">,</span>\n    LAST_DAY<span class=\"token punctuation\">(</span>hire_date<span class=\"token punctuation\">)</span> 적용결과\n<span class=\"token keyword\">FROM</span> employees_b\n<span class=\"token keyword\">WHERE</span> employee_id <span class=\"token operator\">BETWEEN</span> <span class=\"token number\">100</span> <span class=\"token operator\">AND</span> <span class=\"token number\">106</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p><img src=\"https://s3.us-west-2.amazonaws.com/secure.notion-static.com/79da2ede-0353-4128-99f7-15657815447b/Screenshot_2023-04-05_at_5.21.39_PM.png?X-Amz-Algorithm=AWS4-HMAC-SHA256&#x26;X-Amz-Content-Sha256=UNSIGNED-PAYLOAD&#x26;X-Amz-Credential=AKIAT73L2G45EIPT3X45%2F20230422%2Fus-west-2%2Fs3%2Faws4_request&#x26;X-Amz-Date=20230422T130700Z&#x26;X-Amz-Expires=3600&#x26;X-Amz-Signature=90b62a9a8e21c6e48aa8ee0d199e02d27340f2924ba0df47fad21e1791b88d71&#x26;X-Amz-SignedHeaders=host&#x26;x-id=GetObject\" alt=\"\"></p>\n</li>\n</ol>\n</li>\n<li>\n<p>날짜를 반올림하거나 절삭하기</p>\n<ol>\n<li>\n<p>코드</p>\n<hr>\n<div class=\"gatsby-highlight\" data-language=\"sql\"><pre class=\"language-sql\"><code class=\"language-sql\"><span class=\"token comment\">/* ROUND, TRUNC */</span>\n<span class=\"token keyword\">SELECT</span> hire_date<span class=\"token punctuation\">,</span>\n    <span class=\"token function\">ROUND</span><span class=\"token punctuation\">(</span>hire_date<span class=\"token punctuation\">,</span> <span class=\"token string\">'MONTH'</span><span class=\"token punctuation\">)</span> 적용결과_ROUND_M<span class=\"token punctuation\">,</span>\n    <span class=\"token function\">ROUND</span><span class=\"token punctuation\">(</span>hire_date<span class=\"token punctuation\">,</span> <span class=\"token string\">'YEAR'</span><span class=\"token punctuation\">)</span> 적용결과_ROUND_Y<span class=\"token punctuation\">,</span>\n    TRUNC<span class=\"token punctuation\">(</span>hire_date<span class=\"token punctuation\">,</span> <span class=\"token string\">'MONTH'</span><span class=\"token punctuation\">)</span> 적용결과_TRUNC_M<span class=\"token punctuation\">,</span>\n    TRUNC<span class=\"token punctuation\">(</span>hire_date<span class=\"token punctuation\">,</span> <span class=\"token string\">'YEAR'</span><span class=\"token punctuation\">)</span> 적용결과_TRUNC_Y\n<span class=\"token keyword\">FROM</span> employees_b\n<span class=\"token keyword\">WHERE</span> employee_id <span class=\"token operator\">BETWEEN</span> <span class=\"token number\">100</span> <span class=\"token operator\">AND</span> <span class=\"token number\">106</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p><img src=\"https://s3.us-west-2.amazonaws.com/secure.notion-static.com/bad2b4cc-1c94-4bed-a7cd-a5495a4a834c/Screenshot_2023-04-12_at_2.49.18_PM.png?X-Amz-Algorithm=AWS4-HMAC-SHA256&#x26;X-Amz-Content-Sha256=UNSIGNED-PAYLOAD&#x26;X-Amz-Credential=AKIAT73L2G45EIPT3X45%2F20230422%2Fus-west-2%2Fs3%2Faws4_request&#x26;X-Amz-Date=20230422T130701Z&#x26;X-Amz-Expires=3600&#x26;X-Amz-Signature=d34f1e18f20dd7a9cc64d3d07a5151eedad91a2625c8fdfed9f4ac58a6c7c8f3&#x26;X-Amz-SignedHeaders=host&#x26;x-id=GetObject\" alt=\"\"></p>\n</li>\n</ol>\n</li>\n</ol>\n<h3 id=\"변환-함수\" style=\"position:relative;\"><a href=\"#%EB%B3%80%ED%99%98-%ED%95%A8%EC%88%98\" aria-label=\"변환 함수 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>변환 함수</h3>\n<ol>\n<li>\n<p>자동 데이터 타입 변환</p>\n<ol>\n<li>\n<p>코드</p>\n<hr>\n<div class=\"gatsby-highlight\" data-language=\"sql\"><pre class=\"language-sql\"><code class=\"language-sql\"><span class=\"token keyword\">SELECT</span> <span class=\"token number\">1</span> <span class=\"token operator\">+</span> <span class=\"token string\">'2'</span>\n<span class=\"token keyword\">FROM</span> DUAL<span class=\"token punctuation\">;</span></code></pre></div>\n<p><img src=\"https://s3.us-west-2.amazonaws.com/secure.notion-static.com/08828573-d570-4939-9e0e-318aa39ee21f/Screenshot_2023-04-12_at_3.04.50_PM.png?X-Amz-Algorithm=AWS4-HMAC-SHA256&#x26;X-Amz-Content-Sha256=UNSIGNED-PAYLOAD&#x26;X-Amz-Credential=AKIAT73L2G45EIPT3X45%2F20230422%2Fus-west-2%2Fs3%2Faws4_request&#x26;X-Amz-Date=20230422T130703Z&#x26;X-Amz-Expires=3600&#x26;X-Amz-Signature=8ab204f8ff5e569ba8fa2824ab4e9758985ec87e961ede2a36f3b0b3b2a2ed96&#x26;X-Amz-SignedHeaders=host&#x26;x-id=GetObject\" alt=\"\"></p>\n</li>\n</ol>\n</li>\n<li>\n<p>날짜 및 시간 형식 변환하기</p>\n<ol>\n<li>\n<p>코드</p>\n<hr>\n<div class=\"gatsby-highlight\" data-language=\"sql\"><pre class=\"language-sql\"><code class=\"language-sql\"><span class=\"token keyword\">SELECT</span> TO_CHAR<span class=\"token punctuation\">(</span>SYSDATE<span class=\"token punctuation\">,</span> <span class=\"token string\">'YY'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    TO_CHAR<span class=\"token punctuation\">(</span>SYSDATE<span class=\"token punctuation\">,</span> <span class=\"token string\">'YYYY'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    TO_CHAR<span class=\"token punctuation\">(</span>SYSDATE<span class=\"token punctuation\">,</span> <span class=\"token string\">'MM'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    TO_CHAR<span class=\"token punctuation\">(</span>SYSDATE<span class=\"token punctuation\">,</span> <span class=\"token string\">'MON'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    TO_CHAR<span class=\"token punctuation\">(</span>SYSDATE<span class=\"token punctuation\">,</span> <span class=\"token string\">'YYYYMMDD'</span><span class=\"token punctuation\">)</span> 응용적용<span class=\"token number\">1</span><span class=\"token punctuation\">,</span>\n    TO_CHAR<span class=\"token punctuation\">(</span>TO_DATE<span class=\"token punctuation\">(</span><span class=\"token string\">'20171008'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'YYYYMMDD'</span><span class=\"token punctuation\">)</span> 응용적용<span class=\"token number\">2</span>\n<span class=\"token keyword\">FROM</span> DUAL<span class=\"token punctuation\">;</span></code></pre></div>\n<p><img src=\"https://s3.us-west-2.amazonaws.com/secure.notion-static.com/4ae44c90-742c-46b3-b000-cb3cc5cc07ab/Screenshot_2023-04-12_at_3.08.19_PM.png?X-Amz-Algorithm=AWS4-HMAC-SHA256&#x26;X-Amz-Content-Sha256=UNSIGNED-PAYLOAD&#x26;X-Amz-Credential=AKIAT73L2G45EIPT3X45%2F20230422%2Fus-west-2%2Fs3%2Faws4_request&#x26;X-Amz-Date=20230422T130704Z&#x26;X-Amz-Expires=3600&#x26;X-Amz-Signature=b17a65f224aef38e8dafb1e1f2851d8ebb446ebe0ba3d57e5ccd5d5415daec74&#x26;X-Amz-SignedHeaders=host&#x26;x-id=GetObject\" alt=\"\"></p>\n</li>\n</ol>\n</li>\n<li>\n<p>날짜 지정 형식을 시간 지정 형식으로 지정</p>\n<ol>\n<li>\n<p>코드</p>\n<hr>\n<div class=\"gatsby-highlight\" data-language=\"sql\"><pre class=\"language-sql\"><code class=\"language-sql\"><span class=\"token keyword\">SELECT</span> TO_CHAR<span class=\"token punctuation\">(</span>SYSDATE<span class=\"token punctuation\">,</span> <span class=\"token string\">'HH:MI:SS PM'</span><span class=\"token punctuation\">)</span> 시간형식<span class=\"token punctuation\">,</span>\n    TO_CHAR<span class=\"token punctuation\">(</span>SYSDATE<span class=\"token punctuation\">,</span> <span class=\"token string\">'YYYY/MM/DD HH:MI:SS PM'</span><span class=\"token punctuation\">)</span> 날짜와시간조합\n<span class=\"token keyword\">FROM</span> DUAL<span class=\"token punctuation\">;</span></code></pre></div>\n<p><img src=\"https://s3.us-west-2.amazonaws.com/secure.notion-static.com/bee23683-2c07-4558-8563-6f21facc7e0b/Screenshot_2023-04-12_at_3.13.35_PM.png?X-Amz-Algorithm=AWS4-HMAC-SHA256&#x26;X-Amz-Content-Sha256=UNSIGNED-PAYLOAD&#x26;X-Amz-Credential=AKIAT73L2G45EIPT3X45%2F20230422%2Fus-west-2%2Fs3%2Faws4_request&#x26;X-Amz-Date=20230422T130704Z&#x26;X-Amz-Expires=3600&#x26;X-Amz-Signature=b1362b9c28b4be256bd9a103d664b7376a0136a32f36292bd47489f8d5f8bc1b&#x26;X-Amz-SignedHeaders=host&#x26;x-id=GetObject\" alt=\"\"></p>\n</li>\n</ol>\n</li>\n<li>\n<p>a</p>\n<ol>\n<li>\n<p>코드</p>\n<hr>\n<div class=\"gatsby-highlight\" data-language=\"sql\"><pre class=\"language-sql\"><code class=\"language-sql\"></code></pre></div>\n</li>\n</ol>\n</li>\n<li>\n<p>날짜를 나타내는 문자열을 명시된 날짜로 변환하는 함수</p>\n<ol>\n<li>\n<p>코드</p>\n<hr>\n<div class=\"gatsby-highlight\" data-language=\"sql\"><pre class=\"language-sql\"><code class=\"language-sql\"><span class=\"token keyword\">SELECT</span> TO_DATE<span class=\"token punctuation\">(</span><span class=\"token string\">'20171007'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'YYMMDD'</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">FROM</span> DUAL<span class=\"token punctuation\">;</span></code></pre></div>\n<p><img src=\"https://s3.us-west-2.amazonaws.com/secure.notion-static.com/87d910ff-663f-4f94-b2e2-80b125da891f/Screenshot_2023-04-12_at_3.39.27_PM.png?X-Amz-Algorithm=AWS4-HMAC-SHA256&#x26;X-Amz-Content-Sha256=UNSIGNED-PAYLOAD&#x26;X-Amz-Credential=AKIAT73L2G45EIPT3X45%2F20230422%2Fus-west-2%2Fs3%2Faws4_request&#x26;X-Amz-Date=20230422T130706Z&#x26;X-Amz-Expires=3600&#x26;X-Amz-Signature=d338a92a0518068a6ca4dc5c68f9b9cbf4d4b23ae441f75551ef90ef1b0526d1&#x26;X-Amz-SignedHeaders=host&#x26;x-id=GetObject\" alt=\"\"></p>\n</li>\n</ol>\n</li>\n</ol>\n<h3 id=\"일반-함수\" style=\"position:relative;\"><a href=\"#%EC%9D%BC%EB%B0%98-%ED%95%A8%EC%88%98\" aria-label=\"일반 함수 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>일반 함수</h3>\n<ol>\n<li>\n<p>데이터 값이 없는 null값을 가지지 않도록 지정</p>\n<ol>\n<li>\n<p>코드</p>\n<hr>\n<div class=\"gatsby-highlight\" data-language=\"sql\"><pre class=\"language-sql\"><code class=\"language-sql\"><span class=\"token keyword\">SELECT</span> <span class=\"token operator\">*</span>\n<span class=\"token keyword\">FROM</span> employees_b\n<span class=\"token keyword\">ORDER</span> <span class=\"token keyword\">BY</span> commission_pct<span class=\"token punctuation\">;</span></code></pre></div>\n<p><img src=\"https://s3.us-west-2.amazonaws.com/secure.notion-static.com/39025887-1f4e-486b-94b0-5b9ee113304f/Screenshot_2023-04-12_at_3.43.58_PM.png?X-Amz-Algorithm=AWS4-HMAC-SHA256&#x26;X-Amz-Content-Sha256=UNSIGNED-PAYLOAD&#x26;X-Amz-Credential=AKIAT73L2G45EIPT3X45%2F20230422%2Fus-west-2%2Fs3%2Faws4_request&#x26;X-Amz-Date=20230422T130706Z&#x26;X-Amz-Expires=3600&#x26;X-Amz-Signature=8f46c4f247cb6a18e58bae18966b239aaeaaaec522940b38d5f715d67cd7e584&#x26;X-Amz-SignedHeaders=host&#x26;x-id=GetObject\" alt=\"\"></p>\n<div class=\"gatsby-highlight\" data-language=\"sql\"><pre class=\"language-sql\"><code class=\"language-sql\"><span class=\"token comment\">/* NVL */</span>\n<span class=\"token keyword\">SELECT</span> first_name<span class=\"token punctuation\">,</span> NVL<span class=\"token punctuation\">(</span>commission_pct<span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">FROM</span> employees_b\n<span class=\"token keyword\">ORDER</span> <span class=\"token keyword\">BY</span> commission_pct<span class=\"token punctuation\">;</span></code></pre></div>\n<p><img src=\"https://s3.us-west-2.amazonaws.com/secure.notion-static.com/213fc708-2a66-4b1f-87a5-703b08f9ef75/Screenshot_2023-04-12_at_3.48.52_PM.png?X-Amz-Algorithm=AWS4-HMAC-SHA256&#x26;X-Amz-Content-Sha256=UNSIGNED-PAYLOAD&#x26;X-Amz-Credential=AKIAT73L2G45EIPT3X45%2F20230422%2Fus-west-2%2Fs3%2Faws4_request&#x26;X-Amz-Date=20230422T130706Z&#x26;X-Amz-Expires=3600&#x26;X-Amz-Signature=d619288275c5d7509da3ed12fbdbb7c4f6feba4e89e247f33f2b94471e95b3f4&#x26;X-Amz-SignedHeaders=host&#x26;x-id=GetObject\" alt=\"\"></p>\n</li>\n</ol>\n</li>\n<li>\n<p>조건 논리 처리하기</p>\n<ol>\n<li>\n<p>코드</p>\n<hr>\n<div class=\"gatsby-highlight\" data-language=\"sql\"><pre class=\"language-sql\"><code class=\"language-sql\"><span class=\"token comment\">/* DECODE */</span>\n<span class=\"token keyword\">SELECT</span> first_name<span class=\"token punctuation\">,</span>\n    last_name<span class=\"token punctuation\">,</span>\n    department_id<span class=\"token punctuation\">,</span>\n    salary 원래급여<span class=\"token punctuation\">,</span>\n    DECODE<span class=\"token punctuation\">(</span>department_id<span class=\"token punctuation\">,</span> <span class=\"token number\">60</span><span class=\"token punctuation\">,</span> salary<span class=\"token operator\">*</span><span class=\"token number\">1.1</span><span class=\"token punctuation\">,</span> salary<span class=\"token punctuation\">)</span> 조정된_급여<span class=\"token punctuation\">,</span>\n    DECODE<span class=\"token punctuation\">(</span>department_id<span class=\"token punctuation\">,</span> <span class=\"token number\">60</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'10% 인상'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'미인상'</span><span class=\"token punctuation\">)</span> 인상여부\n<span class=\"token keyword\">FROM</span> employees_b<span class=\"token punctuation\">;</span></code></pre></div>\n<p><img src=\"https://s3.us-west-2.amazonaws.com/secure.notion-static.com/20f5e7cd-0f7e-43bd-80fa-1417d6f901bf/Screenshot_2023-04-12_at_3.54.59_PM.png?X-Amz-Algorithm=AWS4-HMAC-SHA256&#x26;X-Amz-Content-Sha256=UNSIGNED-PAYLOAD&#x26;X-Amz-Credential=AKIAT73L2G45EIPT3X45%2F20230422%2Fus-west-2%2Fs3%2Faws4_request&#x26;X-Amz-Date=20230422T130708Z&#x26;X-Amz-Expires=3600&#x26;X-Amz-Signature=f702a36040b6e0e4575f7104fa44c1d07605ed1984e66235d9b2e3a5729faad5&#x26;X-Amz-SignedHeaders=host&#x26;x-id=GetObject\" alt=\"\"></p>\n</li>\n</ol>\n</li>\n<li>\n<p>복잡한 조건 논리 처리하기</p>\n<ol>\n<li>\n<p>코드</p>\n<hr>\n<div class=\"gatsby-highlight\" data-language=\"sql\"><pre class=\"language-sql\"><code class=\"language-sql\"><span class=\"token comment\">/* CASE */</span>\n<span class=\"token keyword\">SELECT</span> employee_id<span class=\"token punctuation\">,</span> first_name<span class=\"token punctuation\">,</span> last_name<span class=\"token punctuation\">,</span> salary<span class=\"token punctuation\">,</span>\n    <span class=\"token keyword\">CASE</span>\n        <span class=\"token keyword\">WHEN</span> salary <span class=\"token operator\">>=</span> <span class=\"token number\">9000</span> \n            <span class=\"token keyword\">THEN</span> <span class=\"token string\">'상위 급여'</span>\n        <span class=\"token keyword\">WHEN</span> salary <span class=\"token operator\">BETWEEN</span> <span class=\"token number\">6000</span> <span class=\"token operator\">AND</span> <span class=\"token number\">8999</span> \n            <span class=\"token keyword\">THEN</span> <span class=\"token string\">'중위 급여'</span>\n        <span class=\"token keyword\">ELSE</span> <span class=\"token string\">'하위 급여'</span>\n    <span class=\"token keyword\">END</span> <span class=\"token keyword\">AS</span> 급여등급\n<span class=\"token keyword\">FROM</span> employees_b\n<span class=\"token keyword\">WHERE</span> job_id <span class=\"token operator\">=</span> <span class=\"token string\">'IT_PROG'</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p><img src=\"https://s3.us-west-2.amazonaws.com/secure.notion-static.com/066d70c0-cc9f-4d0f-8114-11b12ce0848d/Screenshot_2023-04-12_at_4.11.01_PM.png?X-Amz-Algorithm=AWS4-HMAC-SHA256&#x26;X-Amz-Content-Sha256=UNSIGNED-PAYLOAD&#x26;X-Amz-Credential=AKIAT73L2G45EIPT3X45%2F20230422%2Fus-west-2%2Fs3%2Faws4_request&#x26;X-Amz-Date=20230422T130709Z&#x26;X-Amz-Expires=3600&#x26;X-Amz-Signature=543d1aee836053fde4ae6dcf98cf3de2dd340aad6b28d0464faf021b00423e1e&#x26;X-Amz-SignedHeaders=host&#x26;x-id=GetObject\" alt=\"\"></p>\n</li>\n</ol>\n</li>\n<li>\n<p>데이터 값에 순위 매기기</p>\n<ol>\n<li>\n<p>코드</p>\n<hr>\n<div class=\"gatsby-highlight\" data-language=\"sql\"><pre class=\"language-sql\"><code class=\"language-sql\"><span class=\"token comment\">/* RANK, DENSE_RANK, ROW_NUMBER */</span>\n<span class=\"token keyword\">SELECT</span> employee_id<span class=\"token punctuation\">,</span>\n    salary<span class=\"token punctuation\">,</span>\n    RANK<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">OVER</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">ORDER</span> <span class=\"token keyword\">BY</span> salary <span class=\"token keyword\">DESC</span><span class=\"token punctuation\">)</span> RANK_급여<span class=\"token punctuation\">,</span>\n    DENSE_RANK<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">OVER</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">ORDER</span> <span class=\"token keyword\">BY</span> salary <span class=\"token keyword\">DESC</span><span class=\"token punctuation\">)</span> DENSE_RANK_급여<span class=\"token punctuation\">,</span>\n    ROW_NUMBER<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">OVER</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">ORDER</span> <span class=\"token keyword\">BY</span> salary <span class=\"token keyword\">DESC</span><span class=\"token punctuation\">)</span> ROW_NUMBER_급여\n<span class=\"token keyword\">FROM</span> employees_b<span class=\"token punctuation\">;</span></code></pre></div>\n<p><img src=\"https://s3.us-west-2.amazonaws.com/secure.notion-static.com/ffb5d6fa-7999-4b6c-a783-d54e85193c27/Screenshot_2023-04-12_at_4.17.15_PM.png?X-Amz-Algorithm=AWS4-HMAC-SHA256&#x26;X-Amz-Content-Sha256=UNSIGNED-PAYLOAD&#x26;X-Amz-Credential=AKIAT73L2G45EIPT3X45%2F20230422%2Fus-west-2%2Fs3%2Faws4_request&#x26;X-Amz-Date=20230422T130709Z&#x26;X-Amz-Expires=3600&#x26;X-Amz-Signature=3fef8607463c605e3ba6fa073d4a9227bea4ddf433647e8ed27610a5d8af1fd8&#x26;X-Amz-SignedHeaders=host&#x26;x-id=GetObject\" alt=\"\"></p>\n</li>\n</ol>\n</li>\n</ol>\n<h3 id=\"그룹-함수\" style=\"position:relative;\"><a href=\"#%EA%B7%B8%EB%A3%B9-%ED%95%A8%EC%88%98\" aria-label=\"그룹 함수 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>그룹 함수</h3>\n<ol>\n<li>\n<p>그룹으로 요약하기</p>\n<ol>\n<li>\n<p>코드</p>\n<hr>\n<div class=\"gatsby-highlight\" data-language=\"sql\"><pre class=\"language-sql\"><code class=\"language-sql\"><span class=\"token keyword\">SELECT</span> 그룹함수<span class=\"token punctuation\">(</span>열 이름<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">FROM</span> 테이블 이름\n<span class=\"token punctuation\">[</span><span class=\"token keyword\">WHERE</span> 조건식<span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">[</span><span class=\"token keyword\">ORDER</span> <span class=\"token keyword\">BY</span> 열 이름<span class=\"token punctuation\">]</span></code></pre></div>\n</li>\n</ol>\n</li>\n<li>\n<p>열의 행을 세는 함수</p>\n<ol>\n<li>\n<p>코드</p>\n<hr>\n<div class=\"gatsby-highlight\" data-language=\"sql\"><pre class=\"language-sql\"><code class=\"language-sql\"><span class=\"token keyword\">SELECT</span> <span class=\"token function\">COUNT</span><span class=\"token punctuation\">(</span>salary<span class=\"token punctuation\">)</span> salary_행수\n<span class=\"token keyword\">FROM</span> employees_b<span class=\"token punctuation\">;</span></code></pre></div>\n<p><img src=\"https://s3.us-west-2.amazonaws.com/secure.notion-static.com/2da86aaf-bff1-4b9f-b7a9-52a68a982738/Screenshot_2023-04-12_at_4.47.48_PM.png?X-Amz-Algorithm=AWS4-HMAC-SHA256&#x26;X-Amz-Content-Sha256=UNSIGNED-PAYLOAD&#x26;X-Amz-Credential=AKIAT73L2G45EIPT3X45%2F20230422%2Fus-west-2%2Fs3%2Faws4_request&#x26;X-Amz-Date=20230422T130714Z&#x26;X-Amz-Expires=3600&#x26;X-Amz-Signature=db997c956a3926e6f29fe6b3fbc2ebad30d806cbe2c7784eef40647e811b119c&#x26;X-Amz-SignedHeaders=host&#x26;x-id=GetObject\" alt=\"\"></p>\n</li>\n</ol>\n</li>\n<li>\n<p>열의 합계를 구하는 함수와 열의 평균을 구하는 함수</p>\n<ol>\n<li>\n<p>코드</p>\n<hr>\n<div class=\"gatsby-highlight\" data-language=\"sql\"><pre class=\"language-sql\"><code class=\"language-sql\"><span class=\"token comment\">/* SUM, AVG */</span>\n<span class=\"token keyword\">SELECT</span> <span class=\"token function\">SUM</span><span class=\"token punctuation\">(</span>salary<span class=\"token punctuation\">)</span> 합계<span class=\"token punctuation\">,</span>\n    <span class=\"token function\">AVG</span><span class=\"token punctuation\">(</span>salary<span class=\"token punctuation\">)</span> 평균<span class=\"token punctuation\">,</span>\n    <span class=\"token function\">SUM</span><span class=\"token punctuation\">(</span>salary<span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> <span class=\"token function\">COUNT</span><span class=\"token punctuation\">(</span>salary<span class=\"token punctuation\">)</span> 계산한_평균\n<span class=\"token keyword\">FROM</span> employees_b<span class=\"token punctuation\">;</span></code></pre></div>\n<p><img src=\"https://s3.us-west-2.amazonaws.com/secure.notion-static.com/86625fde-da2d-4808-8211-eeee497426ed/Screenshot_2023-04-12_at_4.55.20_PM.png?X-Amz-Algorithm=AWS4-HMAC-SHA256&#x26;X-Amz-Content-Sha256=UNSIGNED-PAYLOAD&#x26;X-Amz-Credential=AKIAT73L2G45EIPT3X45%2F20230422%2Fus-west-2%2Fs3%2Faws4_request&#x26;X-Amz-Date=20230422T130716Z&#x26;X-Amz-Expires=3600&#x26;X-Amz-Signature=96e868b9a73dca56b29947583cbb0f835871d197a66ed98bf29e9c30bd095904&#x26;X-Amz-SignedHeaders=host&#x26;x-id=GetObject\" alt=\"\"></p>\n</li>\n</ol>\n</li>\n<li>\n<p>열의 최댓값과 열의 최솟값을 구하는 함수</p>\n<ol>\n<li>\n<p>코드</p>\n<hr>\n<div class=\"gatsby-highlight\" data-language=\"sql\"><pre class=\"language-sql\"><code class=\"language-sql\"><span class=\"token comment\">/* MAX, MIN */</span>\n<span class=\"token comment\">/* 정수값, 문자열 */</span>\n<span class=\"token keyword\">SELECT</span> <span class=\"token function\">MAX</span><span class=\"token punctuation\">(</span>salary<span class=\"token punctuation\">)</span> 최댓값<span class=\"token punctuation\">,</span>\n    <span class=\"token function\">MIN</span><span class=\"token punctuation\">(</span>salary<span class=\"token punctuation\">)</span> 최솟값<span class=\"token punctuation\">,</span>\n    <span class=\"token function\">MAX</span><span class=\"token punctuation\">(</span>first_name<span class=\"token punctuation\">)</span> 최대문자값<span class=\"token punctuation\">,</span>\n    <span class=\"token function\">MIN</span><span class=\"token punctuation\">(</span>first_name<span class=\"token punctuation\">)</span> 최소문자값\n<span class=\"token keyword\">FROM</span> employees_b<span class=\"token punctuation\">;</span></code></pre></div>\n<p><img src=\"https://s3.us-west-2.amazonaws.com/secure.notion-static.com/333bb403-90e8-4598-bbbc-49a10ab5b226/Screenshot_2023-04-12_at_4.49.48_PM.png?X-Amz-Algorithm=AWS4-HMAC-SHA256&#x26;X-Amz-Content-Sha256=UNSIGNED-PAYLOAD&#x26;X-Amz-Credential=AKIAT73L2G45EIPT3X45%2F20230422%2Fus-west-2%2Fs3%2Faws4_request&#x26;X-Amz-Date=20230422T130718Z&#x26;X-Amz-Expires=3600&#x26;X-Amz-Signature=a9ed0ed67c7616fe2b3e6f0d4e431b05e3742aac85f189b5d5294491b0f00607&#x26;X-Amz-SignedHeaders=host&#x26;x-id=GetObject\" alt=\"\"></p>\n</li>\n</ol>\n</li>\n<li>\n<p>그룹으로 묶는 키워드</p>\n<ol>\n<li>\n<p>코드</p>\n<hr>\n<div class=\"gatsby-highlight\" data-language=\"sql\"><pre class=\"language-sql\"><code class=\"language-sql\"><span class=\"token comment\">/* GROUP BY */</span>\n<span class=\"token keyword\">SELECT</span> job_id 직무<span class=\"token punctuation\">,</span>\n    <span class=\"token function\">SUM</span><span class=\"token punctuation\">(</span>salary<span class=\"token punctuation\">)</span> 직무별_총급여<span class=\"token punctuation\">,</span>\n    <span class=\"token function\">AVG</span><span class=\"token punctuation\">(</span>salary<span class=\"token punctuation\">)</span> 직무별_평균급여\n<span class=\"token keyword\">FROM</span> employees_b\n<span class=\"token keyword\">WHERE</span> employee_id <span class=\"token operator\">>=</span> <span class=\"token number\">10</span>\n<span class=\"token keyword\">GROUP</span> <span class=\"token keyword\">BY</span> job_id\n<span class=\"token keyword\">ORDER</span> <span class=\"token keyword\">BY</span> 직무별_총급여 <span class=\"token keyword\">DESC</span><span class=\"token punctuation\">,</span> 직무별_평균급여<span class=\"token punctuation\">;</span></code></pre></div>\n<p><img src=\"https://s3.us-west-2.amazonaws.com/secure.notion-static.com/21076334-8b29-40f3-b54d-b8419679d647/Screenshot_2023-04-12_at_5.05.51_PM.png?X-Amz-Algorithm=AWS4-HMAC-SHA256&#x26;X-Amz-Content-Sha256=UNSIGNED-PAYLOAD&#x26;X-Amz-Credential=AKIAT73L2G45EIPT3X45%2F20230422%2Fus-west-2%2Fs3%2Faws4_request&#x26;X-Amz-Date=20230422T130719Z&#x26;X-Amz-Expires=3600&#x26;X-Amz-Signature=a04b311ae62de9af09233f46bbf61f309beb133fe199c919bdfe43f094b4d961&#x26;X-Amz-SignedHeaders=host&#x26;x-id=GetObject\" alt=\"\"></p>\n</li>\n</ol>\n</li>\n<li>\n<ol>\n<li>\n<p>코드</p>\n<hr>\n<div class=\"gatsby-highlight\" data-language=\"sql\"><pre class=\"language-sql\"><code class=\"language-sql\"><span class=\"token keyword\">SELECT</span> job_id job_id_대그룹<span class=\"token punctuation\">,</span>\n    manager_id manager_id_중그룹<span class=\"token punctuation\">,</span>\n    <span class=\"token function\">SUM</span><span class=\"token punctuation\">(</span>salary<span class=\"token punctuation\">)</span> 그룹핑_총급여<span class=\"token punctuation\">,</span>\n    <span class=\"token function\">AVG</span><span class=\"token punctuation\">(</span>salary<span class=\"token punctuation\">)</span> 그룹핑_평균급여\n<span class=\"token keyword\">FROM</span> employees_b\n<span class=\"token keyword\">WHERE</span> employee_id <span class=\"token operator\">>=</span> <span class=\"token number\">10</span>\n<span class=\"token keyword\">GROUP</span> <span class=\"token keyword\">BY</span> job_id<span class=\"token punctuation\">,</span> manager_id\n<span class=\"token keyword\">ORDER</span> <span class=\"token keyword\">BY</span> 그룹핑_총급여 <span class=\"token keyword\">DESC</span><span class=\"token punctuation\">,</span> 그룹핑_평균급여<span class=\"token punctuation\">;</span></code></pre></div>\n<p><img src=\"https://s3.us-west-2.amazonaws.com/secure.notion-static.com/7ef7b85b-f151-4568-bdd0-0432fa313e4f/Screenshot_2023-04-12_at_5.13.20_PM.png?X-Amz-Algorithm=AWS4-HMAC-SHA256&#x26;X-Amz-Content-Sha256=UNSIGNED-PAYLOAD&#x26;X-Amz-Credential=AKIAT73L2G45EIPT3X45%2F20230422%2Fus-west-2%2Fs3%2Faws4_request&#x26;X-Amz-Date=20230422T130720Z&#x26;X-Amz-Expires=3600&#x26;X-Amz-Signature=2b3cfd0ac005d3f8750197c3b864fa1840599b1c845803b99973238d3ee194d4&#x26;X-Amz-SignedHeaders=host&#x26;x-id=GetObject\" alt=\"\"></p>\n</li>\n</ol>\n</li>\n<li>\n<p>연산된 그룹 함수 결과에 조건 적용하기</p>\n<ol>\n<li>\n<p>코드</p>\n<hr>\n<div class=\"gatsby-highlight\" data-language=\"sql\"><pre class=\"language-sql\"><code class=\"language-sql\"><span class=\"token comment\">/* HAVING */</span>\n<span class=\"token keyword\">SELECT</span> job_id 직무<span class=\"token punctuation\">,</span>\n    <span class=\"token function\">SUM</span><span class=\"token punctuation\">(</span>salary<span class=\"token punctuation\">)</span> 직무별_총급여<span class=\"token punctuation\">,</span>\n    <span class=\"token function\">AVG</span><span class=\"token punctuation\">(</span>salary<span class=\"token punctuation\">)</span> 직무별_평균급여\n<span class=\"token keyword\">FROM</span> employees_b\n<span class=\"token keyword\">WHERE</span> employee_id <span class=\"token operator\">>=</span> <span class=\"token number\">10</span>\n<span class=\"token keyword\">GROUP</span> <span class=\"token keyword\">BY</span> job_id\n<span class=\"token keyword\">HAVING</span> <span class=\"token function\">SUM</span><span class=\"token punctuation\">(</span>salary<span class=\"token punctuation\">)</span> <span class=\"token operator\">></span> <span class=\"token number\">30000</span>\n<span class=\"token keyword\">ORDER</span> <span class=\"token keyword\">BY</span> 직무별_총급여 <span class=\"token keyword\">DESC</span><span class=\"token punctuation\">,</span> 직무별_평균급여<span class=\"token punctuation\">;</span></code></pre></div>\n<p><img src=\"https://s3.us-west-2.amazonaws.com/secure.notion-static.com/2256d934-13e2-41aa-8b1e-685932f4860d/Screenshot_2023-04-12_at_5.16.24_PM.png?X-Amz-Algorithm=AWS4-HMAC-SHA256&#x26;X-Amz-Content-Sha256=UNSIGNED-PAYLOAD&#x26;X-Amz-Credential=AKIAT73L2G45EIPT3X45%2F20230422%2Fus-west-2%2Fs3%2Faws4_request&#x26;X-Amz-Date=20230422T130720Z&#x26;X-Amz-Expires=3600&#x26;X-Amz-Signature=d9fdbec5653f3272ba4ccf5b4c2b2c340e4ea9df22365074facf4c21770afd96&#x26;X-Amz-SignedHeaders=host&#x26;x-id=GetObject\" alt=\"\"></p>\n</li>\n</ol>\n</li>\n</ol>","frontmatter":{"date":"April 22, 2023","title":"함수","categories":"SQL Learning","author":"Juhyeon Lee","emoji":null},"fields":{"slug":"/5fd92d80-4ede-42f4-a15c-6f6f6fd73b06/"}},"site":{"siteMetadata":{"siteUrl":"https://d556f8.netlify.io","comments":{"utterances":{"repo":"d556f8/d556f8-devlog"}}}}},"pageContext":{"slug":"/a5093694-570b-443a-89ba-4341fc3cb1e3/","nextSlug":"/96d8f60d-9283-4530-9057-d36e59552bb2/","prevSlug":"/5fd92d80-4ede-42f4-a15c-6f6f6fd73b06/"}},"staticQueryHashes":["1073350324","1956554647","2938748437"],"slicesMap":{}}
{"componentChunkName":"component---src-templates-blog-template-js","path":"/31b4f755-ca66-40b6-9980-2a49bb46a89a/","result":{"data":{"cur":{"id":"fc81981d-2050-5de2-835a-a7a3d415a083","html":"<h2 id=\"기본형-primitive-type\" style=\"position:relative;\"><a href=\"#%EA%B8%B0%EB%B3%B8%ED%98%95-primitive-type\" aria-label=\"기본형 primitive type permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>기본형 (Primitive Type)</h2>\n<p><code class=\"language-text\">int</code>, <code class=\"language-text\">float</code>, <code class=\"language-text\">double</code>, <code class=\"language-text\">char</code>, <code class=\"language-text\">boolean</code> 등 과 같은 것이 있다.</p>\n<ul>\n<li>8가지 기본형 타입을 미리 정의하여 제공한다.</li>\n<li>실제 값을 저장하는 공간으로 Stack 메모리에 저장</li>\n<li>기본값이 존재하기 때문에 Null이 존재하지 안흔다.</li>\n<li>기본형 타입에 Null을 넣고 싶다면 Reference 클래스를 활용한다.</li>\n<li>정의할 떄 소문자를 사용한다.</li>\n</ul>\n<h2 id=\"참조형-reference-type\" style=\"position:relative;\"><a href=\"#%EC%B0%B8%EC%A1%B0%ED%98%95-reference-type\" aria-label=\"참조형 reference type permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>참조형 (Reference Type)</h2>\n<p><code class=\"language-text\">Integer</code>, <code class=\"language-text\">Float</code>, <code class=\"language-text\">String</code>, <code class=\"language-text\">Scanner</code> 등 과 같은 것이 있다.</p>\n<ul>\n<li>기본형을 제외한 나머지 형이다.</li>\n<li>Null이 존재한다.</li>\n<li>Class는 대문자로 시작한다.</li>\n</ul>\n<h2 id=\"변수이름-지정\" style=\"position:relative;\"><a href=\"#%EB%B3%80%EC%88%98%EC%9D%B4%EB%A6%84-%EC%A7%80%EC%A0%95\" aria-label=\"변수이름 지정 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>변수이름 지정</h2>\n<ul>\n<li><code class=\"language-text\">camelType</code></li>\n<li><code class=\"language-text\">snake_type</code></li>\n</ul>\n<h2 id=\"클래스-소스파일\" style=\"position:relative;\"><a href=\"#%ED%81%B4%EB%9E%98%EC%8A%A4-%EC%86%8C%EC%8A%A4%ED%8C%8C%EC%9D%BC\" aria-label=\"클래스 소스파일 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>클래스 소스파일</h2>\n<p>일반적으로 1개의 클래스가 존재한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">- package\n\t- Student.java\n\t- Lecture.java</code></pre></div>\n<p>각각 하나의 클래스를 갖는다.</p>\n<p>물론 하나의 자바소스코드에 여러개의 클래스가 정의 될 수 있다.</p>\n<h2 id=\"컴파일\" style=\"position:relative;\"><a href=\"#%EC%BB%B4%ED%8C%8C%EC%9D%BC\" aria-label=\"컴파일 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>컴파일</h2>\n<p>소스파일을 <code class=\"language-text\">바이트 코드</code>로 변경해준다.</p>\n<p>CPU가 아닌 가상머신(JVM)에서 이해할 수 있는 코드이다.</p>\n<p>이와 다르게 <code class=\"language-text\">바이너리 코드</code>란.</p>\n<p>바이너리 파일은 <u>실행가능한</u> 코드, 컴퓨터가 인식할 수 있는 0과 1로 구성된 이진코드를 의미한다.</p>","excerpt":"기본형 (Primitive Type) , , , ,  등 과 같은 것이 있다. 8가지 기본형 타입을 미리 정의하여 제공한다. 실제 값을 저장하는 공간으로 Stack 메모리에 저장 기본값이 존재하기 때문에 Null이 존재하지 안흔다. 기본형 타입에 Null을 넣고 싶다면 Reference 클래스를 활용한다. 정의할 떄 소문자를 사용한다. 참조형 (Reference Type) , , ,  등 과 같은 것이 있다. 기본형을 제외한 나머지 형이다. Null이 존재한다. Class는 대문자로 시작한다. 변수이름 지정   클래스 소스파일 일반적으로 1개의 클래스가 존재한다. 각각 하나의 클래스를 갖는다. 물론 하나의 자바소스코드에 여러개의 클래스가 정의 될 수 있다. 컴파일 소스파일을 로 변경해준다. CPU가 아닌 가상머신(JVM)에서 이해할 수 있는 코드이다. 이와 다르게 란. 바이너리 파일은 실행가능한 코드, 컴퓨터가 인식할 수 있는 0과 1로 구성된 이진코드를 의미한다.","frontmatter":{"date":"March 06, 2023","title":"Java Basic","categories":"Java Learning","author":"Juhyeon Lee","emoji":null},"fields":{"slug":"/31b4f755-ca66-40b6-9980-2a49bb46a89a/"}},"next":{"id":"b52a8e3b-4e9e-58d1-b916-42a251b0870f","html":"<blockquote>\n<p>2/6(月) 9:01配信</p>\n</blockquote>\n<p><img src=\"https://news-pctr.c.yimg.jp/uUzvQ3lML_bkIqyakc1vFhNrRI0RUQxg5aFkrX0xDg1_T0wXrbEJjtNGtrf1o9y3JPONh7eV8QVHGGgsNL3tPsgbGZQiYf4p1OYoL7ZjWRHyiA_OccYyrrxlKS913cr33XgJEQOcyQupGNGAppOIyM_VYHI-yHU7iCKxQIKYUa6CifMJpBPhoa8o6jrMNOKy\" alt=\"\"></p>\n<h2 id=\"link\" style=\"position:relative;\"><a href=\"#link\" aria-label=\"link permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"https://news.yahoo.co.jp/articles/fe61b2965e4c4abc6a1008dc8edcb9c528e44f23\">👉LINK</a></h2>\n<h2 id=\"夕方から再び雪になる所も\" style=\"position:relative;\"><a href=\"#%E5%A4%95%E6%96%B9%E3%81%8B%E3%82%89%E5%86%8D%E3%81%B3%E9%9B%AA%E3%81%AB%E3%81%AA%E3%82%8B%E6%89%80%E3%82%82\" aria-label=\"夕方から再び雪になる所も permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>夕方から再び雪になる所も</h2>\n<p>週の始まりの今日6日(月)は東北の一部で雪が強く降っています。午前中は雪の降りやすい状況が続くとみられ、積雪の増加に注意が必要です。</p>\n<p>주의 시작인 오늘 6일(월)은 토호쿠의 일부에서 눈이 강하게 내리고 있습니다. 오전중은 눈이 내리기 쉬운 상황이 계속될 것으로 보이고, 적설(눈의 쌓임)의 증가에 주의가 필요합니다.</p>\n<p>東北は<u>シアーライン</u>（風の流れが変化する境界線）の通過に伴って雲が発達し、雪の降っている所があります。内陸部では<u>局地的</u>に雪が強まり、8時までの1時間には秋田県湯沢市で4cm、由利本荘市・矢島で3cmの降雪を観測しました。</p>\n<p>토호쿠는 <u>시어 라인</u>(바람의 흐름이 변화하는 경계선)의 통과에 따라 구름이 발달하고(생겨나고), 눈이 내리고 있는 곳이 있습니다. 내육부에서는 <u>국지적</u>으로 눈이 강해지고, 8시까지의 1시간동안 아키다현 유자와시에서 4cm, 유리혼조시・야지마에서 3cm의 강설이 관측되었습니다.</p>\n<p><u>シアーライン</u>に伴う雪雲は東に移動しながら次第に弱まる見込みです。<u>午前中いっぱい</u>は東北の内陸部で雪の降りやすい状況が続き、1時間に3～5cmの雪を降らせることがあります。積雪の増加による路面状況の悪化などに注意をしてください。</p>\n<p><u>시어 라인</u>에 따른 설운(눈 구름)은 동쪽으로 이동하면서 점점 약해질 전망입니다. <u>오전내내</u> 토호쿠의 내육부에서 눈이 내리기 쉬운 상황이 계속되고, 1시간에 3~5cm의 눈이 내릴 수도 있습니다. 적설(눈 쌓임)의 증가에 따른 노면상태(도로 상태)의 악화등에 주의해 주세요.</p>\n<p>また、夕方から夜にかけては小さな低気圧が東北北部を通過するため、一旦雪が落ち着いた後に再び降り出す可能性がありますので、油断はできません。</p>\n<p>그리고, 저녁부터 밤에 걸쳐 작은 저기압이 토호쿠북부를 통과하기 때문에, 일단 눈이 잦아든 후, 다시 눈이 내릴 수 있는 가능성이 있기 때문에 방심은 할 수 없습니다.</p>\n<table>\n<thead>\n<tr>\n<th><strong>漢字</strong></th>\n<th><strong>ヨミ</strong></th>\n<th><strong>意味</strong></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td></td>\n<td>シアーライン</td>\n<td></td>\n</tr>\n<tr>\n<td>午前中いっぱい</td>\n<td>ごぜんちゅういっぱい</td>\n<td>오전내내</td>\n</tr>\n</tbody>\n</table>","frontmatter":{"date":"February 28, 2023","title":"東北で局地的に強い雪　午前中は積雪の増加に注意","categories":"Japanese News","author":"Juhyeon Lee","emoji":null},"fields":{"slug":"/9c9a0ae8-c3ba-4334-b0b1-61b9861e9413/"}},"prev":{"id":"5128df38-d74d-5d53-b2dc-802c1449311d","html":"<h1 id=\"oop\" style=\"position:relative;\"><a href=\"#oop\" aria-label=\"oop permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>OOP</h1>\n<table>\n<thead>\n<tr>\n<th>Object Oriented Programming</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>↕️</td>\n</tr>\n<tr>\n<td>Procedural Programming</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"features\" style=\"position:relative;\"><a href=\"#features\" aria-label=\"features permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>features</h3>\n<ul>\n<li>Abstraction</li>\n<li>Encapsulation</li>\n<li>Inheritance</li>\n<li>Polymorphism</li>\n<li>Information hiding</li>\n</ul>\n<h2 id=\"메소드\" style=\"position:relative;\"><a href=\"#%EB%A9%94%EC%86%8C%EB%93%9C\" aria-label=\"메소드 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>메소드</h2>\n<p>클래스(참조형)에서 특정한 기능을 수행하는 코드이다.</p>\n<p>함수와 비슷한 역할을 하지만,\n<strong>메소드는 클래스 내의 멤버들의 값을 처리하기 위해 사용되는 함수이다.</strong></p>\n<p>따라서, 메소드는 클래스에 속한 함수라고 생각할 수 있다.</p>\n<p>함수는 독립적으로 존재할 수 있지만, 메소드는 반드시 클래스에 속해 있어야 한다.</p>\n<ol>\n<li>\n<p><strong>예시코드</strong></p>\n<hr>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">java<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Scanner</span></span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">Scratch</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token class-name\">Television</span> tv1 <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Television</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        tv1<span class=\"token punctuation\">.</span><span class=\"token function\">cli</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\naclass <span class=\"token class-name\">Television</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token class-name\">Scanner</span> sc <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Scanner</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>in<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">private</span> <span class=\"token keyword\">int</span> channel\n    <span class=\"token keyword\">private</span> <span class=\"token keyword\">boolean</span> power<span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token class-name\">Television</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">cli</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token function\">prtMenu</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token function\">selectMenu</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">prtMenu</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token class-name\">String</span> msg <span class=\"token operator\">=</span> <span class=\"token class-name\">String</span><span class=\"token punctuation\">.</span><span class=\"token function\">format</span><span class=\"token punctuation\">(</span>\n            <span class=\"token triple-quoted-string string\">\"\"\"\n            ----------------\n            Power: %b\n            Channel Num: %d\n            ----------------\n            1. toggle power\\t 2. channel up\\t 3. channel down\\t 4. set channel\n            \"\"\"</span><span class=\"token punctuation\">,</span> power<span class=\"token punctuation\">,</span> channel\n        <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>msg<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">selectMenu</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">int</span> select <span class=\"token operator\">=</span> sc<span class=\"token punctuation\">.</span><span class=\"token function\">nextInt</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">switch</span> <span class=\"token punctuation\">(</span>select<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token keyword\">case</span> <span class=\"token number\">1</span><span class=\"token operator\">:</span>\n                <span class=\"token function\">togglePower</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">case</span> <span class=\"token number\">2</span><span class=\"token operator\">:</span>\n                <span class=\"token function\">upChannel</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">case</span> <span class=\"token number\">3</span><span class=\"token operator\">:</span>\n                <span class=\"token function\">downChannel</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">case</span> <span class=\"token number\">4</span><span class=\"token operator\">:</span>\n                <span class=\"token function\">setChannel</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">default</span><span class=\"token operator\">:</span>\n                <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">togglePower</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        power <span class=\"token operator\">=</span> <span class=\"token operator\">!</span>power<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">setChannel</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> chNum<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        channel <span class=\"token operator\">=</span> chNum<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">upChannel</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        channel<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">downChannel</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        channel<span class=\"token operator\">--</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n</li>\n</ol>\n<h2 id=\"type-casting\" style=\"position:relative;\"><a href=\"#type-casting\" aria-label=\"type casting permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Type casting</h2>\n<p>타입 형 변환</p>\n<h3 id=\"widening-casting\" style=\"position:relative;\"><a href=\"#widening-casting\" aria-label=\"widening casting permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Widening Casting</h3>\n<p><strong>묵시적</strong> 형변환</p>\n<p>작은 유형을 큰 유형 크기로 변환하기</p>\n<p><code class=\"language-text\">btye</code> → <code class=\"language-text\">short</code> → <code class=\"language-text\">int</code> → <code class=\"language-text\">long</code> → <code class=\"language-text\">flaot</code> → <code class=\"language-text\">double</code></p>\n<p><code class=\"language-text\">char</code> → <code class=\"language-text\">int</code> → …</p>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token keyword\">int</span> d8 <span class=\"token operator\">=</span> <span class=\"token number\">10</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">long</span> d16 <span class=\"token operator\">=</span> d8<span class=\"token punctuation\">;</span> <span class=\"token comment\">// 묵시적 형 변환</span></code></pre></div>\n<h3 id=\"narrowing-casting\" style=\"position:relative;\"><a href=\"#narrowing-casting\" aria-label=\"narrowing casting permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Narrowing Casting</h3>\n<p><strong>명시적</strong> 형변환</p>\n<p>큰 유형을 작은 유형으로 변환하기</p>\n<p><code class=\"language-text\">double</code> → <code class=\"language-text\">float</code> → <code class=\"language-text\">long</code> → <code class=\"language-text\">int</code> → <code class=\"language-text\">char</code> → <code class=\"language-text\">short</code> → <code class=\"language-text\">byte</code></p>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token keyword\">long</span> d16 <span class=\"token operator\">=</span> <span class=\"token number\">100</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">int</span> d8 <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">)</span> d16<span class=\"token punctuation\">;</span> <span class=\"token comment\">// 명시적 형 변환</span></code></pre></div>\n<h2 id=\"메소드-오버로딩\" style=\"position:relative;\"><a href=\"#%EB%A9%94%EC%86%8C%EB%93%9C-%EC%98%A4%EB%B2%84%EB%A1%9C%EB%94%A9\" aria-label=\"메소드 오버로딩 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>메소드 오버로딩</h2>\n<p>같은 이름을 가지는 메소드를 중복하여 정의하는 것.</p>\n<p>원래는 <strong>불가능</strong>하나,\n매개변수의 개수나 타입을 다르게하면, 하나의 이름으로 메소드를 작성할 수 있다.</p>\n<p>다음과 같은 조건이 있다.</p>\n<ol>\n<li>메소드의 이름이 같아야 한다.</li>\n<li>메소드의 시그니처, 즉 매개변수의 개수 또는 타입이 달라야 한다.</li>\n</ol>\n<blockquote>\n<p>시그니처는 같은데? 반환 타입이 다른경우는 오버로딩이 성립하지 않는다.</p>\n</blockquote>\n<h2 id=\"access-modifier\" style=\"position:relative;\"><a href=\"#access-modifier\" aria-label=\"access modifier permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Access Modifier</h2>\n<ol>\n<li>\n<p><strong>예시코드</strong></p>\n<hr>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">Scatch</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token class-name\">JavaTest</span> obj1 <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">JavaTest</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token comment\">// 'name'이(가) 'JavaTest'에서 private 액세스를 가집니다</span>\n         <span class=\"token comment\">/*\n        obj1.name = \"trying to change name\";\n        System.out.println(obj1.name);\n         */</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">JavaTest</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">private</span> <span class=\"token class-name\">String</span> name<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">private</span> <span class=\"token keyword\">int</span> age<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<ul>\n<li>Scratch 클래스의 <code class=\"language-text\">main()</code> 에서 <code class=\"language-text\">private</code>인 <code class=\"language-text\">name</code> (멤버변수)을 접근하려고 하자, 컴파일러에서 문제가 발생했다.</li>\n</ul>\n<p><code class=\"language-text\">'name'이(가) 'JavaTest'에서 private 액세스를 가집니다</code></p>\n<ul>\n<li><code class=\"language-text\">private</code>의 접근 제어자는 같은 클래스내에서만 변수 또는 메소드를 접근할 수 있다.</li>\n</ul>\n</li>\n</ol>","frontmatter":{"date":"March 06, 2023","title":"Class Object","categories":"Java Learning","author":"Juhyeon Lee","emoji":null},"fields":{"slug":"/5dada8f9-42ac-4373-a599-bfa5e1d3bfe3/"}},"site":{"siteMetadata":{"siteUrl":"https://d556f8.netlify.io","comments":{"utterances":{"repo":"d556f8/d556f8-devlog"}}}}},"pageContext":{"slug":"/31b4f755-ca66-40b6-9980-2a49bb46a89a/","nextSlug":"/9c9a0ae8-c3ba-4334-b0b1-61b9861e9413/","prevSlug":"/5dada8f9-42ac-4373-a599-bfa5e1d3bfe3/"}},"staticQueryHashes":["1073350324","1956554647","2938748437"],"slicesMap":{}}
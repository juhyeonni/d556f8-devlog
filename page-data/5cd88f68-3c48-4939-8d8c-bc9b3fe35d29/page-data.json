{"componentChunkName":"component---src-templates-blog-template-js","path":"/5cd88f68-3c48-4939-8d8c-bc9b3fe35d29/","result":{"data":{"cur":{"id":"6d80e73c-f2f3-5d6b-a046-078fe760530b","html":"<p>React에서 ” props”는 ” properties”의 줄임말이다.</p>\n<p>상위 컴포넌트에서 하위 컴포넌트로 데이터를 전달하는 방식.\n하위 컴포넌트는 프로퍼티로 전달된 데이터에 접근하여 동적으로 렌더링하는 데 사용할 수 있다.</p>\n<ol>\n<li>\n<p><strong>예시</strong></p>\n<hr>\n<div class=\"gatsby-highlight\" data-language=\"typescript\"><pre class=\"language-typescript\"><code class=\"language-typescript\"><span class=\"token keyword\">import</span> React <span class=\"token keyword\">from</span> <span class=\"token string\">'react'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// Parent component</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">Welcome</span><span class=\"token punctuation\">(</span>props<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span> name<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> name <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> props<span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">return</span> <span class=\"token operator\">&lt;</span>h1<span class=\"token operator\">></span>Hello<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>name<span class=\"token punctuation\">}</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>h1<span class=\"token operator\">></span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">// Child component</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">App</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token operator\">&lt;</span>div<span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span>Welcome name<span class=\"token operator\">=</span><span class=\"token string\">\"Sara\"</span> <span class=\"token operator\">/</span><span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span>Welcome name<span class=\"token operator\">=</span><span class=\"token string\">\"Cahal\"</span> <span class=\"token operator\">/</span><span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span>Welcome name<span class=\"token operator\">=</span><span class=\"token string\">\"Edite\"</span> <span class=\"token operator\">/</span><span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> App<span class=\"token punctuation\">;</span></code></pre></div>\n<p>이 예시에서 <code class=\"language-text\">Welcome</code> 컴포넌트는 상위 컴포넌트인 <code class=\"language-text\">App</code>에서 <code class=\"language-text\">prop</code>을 받습니다.</p>\n<p>이제 <code class=\"language-text\">Welcome</code> 컴포넌트는 받은 <code class=\"language-text\">props</code>의 <code class=\"language-text\">name</code>을 사용하여 인사말을 렌더링한다.</p>\n<p><code class=\"language-text\">App</code> 컴포넌트는 각각 다른 이름 <code class=\"language-text\">prop</code> 를 사용하여 <code class=\"language-text\">Welcome</code> 컴포넌트 인스턴스를 각각 3개 렌더링한다.</p>\n</li>\n</ol>","excerpt":"React에서 ” props”는 ” properties”의 줄임말이다. 상위 컴포넌트에서 하위 컴포넌트로 데이터를 전달하는 방식.\n하위 컴포넌트는 프로퍼티로 전달된 데이터에 접근하여 동적으로 렌더링하는 데 사용할 수 있다. 예시 이 예시에서  컴포넌트는 상위 컴포넌트인 에서 을 받습니다. 이제  컴포넌트는 받은 의 을 사용하여 인사말을 렌더링한다.  컴포넌트는 각각 다른 이름  를 사용하여  컴포넌트 인스턴스를 각각 3개 렌더링한다.","frontmatter":{"date":"April 22, 2023","title":"props","categories":"React Learning","author":"Juhyeon Lee","emoji":null},"fields":{"slug":"/5cd88f68-3c48-4939-8d8c-bc9b3fe35d29/"}},"next":{"id":"d6602169-447b-509e-a494-37a7050daa58","html":"<h1 id=\"hook이란\" style=\"position:relative;\"><a href=\"#hook%EC%9D%B4%EB%9E%80\" aria-label=\"hook이란 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Hook이란</h1>\n<ul>\n<li>컴포넌트에 기능을 추가할 때 사용하는 함수</li>\n<li>useState: 상탯값 추가</li>\n<li>useEffect: 부수효과 처리\n<ul>\n<li>서버 API 호출, 이벤트 핸들러 등록 등</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"훅-사용-시-지켜야-할-규칙\" style=\"position:relative;\"><a href=\"#%ED%9B%85-%EC%82%AC%EC%9A%A9-%EC%8B%9C-%EC%A7%80%EC%BC%9C%EC%95%BC-%ED%95%A0-%EA%B7%9C%EC%B9%99\" aria-label=\"훅 사용 시 지켜야 할 규칙 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>훅 사용 시 지켜야 할 규칙</h2>\n<ol>\n<li>하나의 컴포넌트에서 훅을 호출하는 순서는 항상 같아야한다.</li>\n<li>훅은 함수형 컴포넌트 또는 커스텀 훅 안에서만 호출되어야 한다.</li>\n</ol>\n<h3 id=\"알게-된점\" style=\"position:relative;\"><a href=\"#%EC%95%8C%EA%B2%8C-%EB%90%9C%EC%A0%90\" aria-label=\"알게 된점 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>알게 된점</h3>\n<ol>\n<li>\n<p>예시코드</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> <span class=\"token function-variable function\">App</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>count<span class=\"token punctuation\">,</span> setCount<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">useState</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">function</span> <span class=\"token function\">onClick</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">setCount</span><span class=\"token punctuation\">(</span>count <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token operator\">&lt;</span>div<span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span>span<span class=\"token operator\">></span><span class=\"token punctuation\">{</span>count<span class=\"token punctuation\">}</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>span<span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span>button onClick<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>onClick<span class=\"token punctuation\">}</span><span class=\"token operator\">></span>countup<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>button<span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>이 코드를 밑의 코드 처럼 바꿀 수 있다.</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> <span class=\"token function-variable function\">App</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>count<span class=\"token punctuation\">,</span> setCount<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">useState</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">function</span> <span class=\"token function\">onClick</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">setCount</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">v</span> <span class=\"token operator\">=></span> v <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token operator\">&lt;</span>div<span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span>span<span class=\"token operator\">></span><span class=\"token punctuation\">{</span>count<span class=\"token punctuation\">}</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>span<span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span>button onClick<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>onClick<span class=\"token punctuation\">}</span><span class=\"token operator\">></span>countup<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>button<span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<ul>\n<li>처리되기 전의 변수 값을 매개변수로 받는다.</li>\n</ul>\n</li>\n</ol>","frontmatter":{"date":"April 22, 2023","title":"React Hook","categories":"React Learning","author":"Juhyeon Lee","emoji":null},"fields":{"slug":"/59bb073c-cee1-4188-becc-5c090b4e72b8/"}},"prev":{"id":"8c161d77-126b-5594-a035-ece790135ef3","html":"<h1 id=\"create-react-app이란\" style=\"position:relative;\"><a href=\"#create-react-app%EC%9D%B4%EB%9E%80\" aria-label=\"create react app이란 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>create-react-app이란</h1>\n<p>페이스북에서 지원하는 node package이고,\n리액트 개발 환경을 구축해주는 툴이다.</p>\n<h2 id=\"사용되는-이유는\" style=\"position:relative;\"><a href=\"#%EC%82%AC%EC%9A%A9%EB%90%98%EB%8A%94-%EC%9D%B4%EC%9C%A0%EB%8A%94\" aria-label=\"사용되는 이유는 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>사용되는 이유는?</h2>\n<p>직접 리액트 개발 환경을 구축하려면 많은 지식과 노력이 필요하다.</p>\n<ul>\n<li>webpack</li>\n<li>babel</li>\n<li>jest</li>\n<li>eslint</li>\n<li>polyfill</li>\n<li>HMR</li>\n<li>CSS 후처리</li>\n</ul>\n<h2 id=\"빌드를-하는-이유\" style=\"position:relative;\"><a href=\"#%EB%B9%8C%EB%93%9C%EB%A5%BC-%ED%95%98%EB%8A%94-%EC%9D%B4%EC%9C%A0\" aria-label=\"빌드를 하는 이유 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>빌드를 하는 이유</h2>\n<ul>\n<li>성능 최적화\n<ul>\n<li>빌드는 소스 코드를 번들링하고 최적화 하는 과정. 이 과정을 거치면서, 불필요한 코드를 제거하고 최종적으로 배포할 수 있는 번들 파일이 생성된다.</li>\n</ul>\n</li>\n<li>호환성\n<ul>\n<li>최신 자바스크립트 문법을 사용하더라도 구 버전의 브라우저에서 동작하도록 변환해주는 기능을 포함</li>\n</ul>\n</li>\n<li>배포 용이성\n<ul>\n<li>CDN이나 웹서버에 업로드되어 웹앱을 이용하는 사용자에게 서비스하게 된다.</li>\n</ul>\n</li>\n</ul>\n<p>serviceworker</p>\n<p>PWA 기능을 쓰기 위해서</p>","frontmatter":{"date":"April 22, 2023","title":"create-react-app","categories":"React Learning","author":"Juhyeon Lee","emoji":null},"fields":{"slug":"/5552055e-28f5-4ff8-9a4b-be98177439a1/"}},"site":{"siteMetadata":{"siteUrl":"https://d556f8.netlify.io","comments":{"utterances":{"repo":"d556f8/d556f8-devlog"}}}}},"pageContext":{"slug":"/5cd88f68-3c48-4939-8d8c-bc9b3fe35d29/","nextSlug":"/59bb073c-cee1-4188-becc-5c090b4e72b8/","prevSlug":"/5552055e-28f5-4ff8-9a4b-be98177439a1/"}},"staticQueryHashes":["1073350324","1956554647","2938748437"],"slicesMap":{}}
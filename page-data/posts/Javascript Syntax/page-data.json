{"componentChunkName":"component---src-templates-category-template-js","path":"/posts/Javascript Syntax/","result":{"pageContext":{"currentCategory":"Javascript Syntax","categories":["All","React Learning","Javascript Syntax","SQL Learning","Java Learning","Javascript Learning","Japanese News","blog"],"edges":[{"node":{"id":"2f63118b-4ddb-5b4b-9e80-d6e846339423","excerpt":"변수.padStart(채울갯수, ‘채울문자열’) 변수.padEnd(채울갯수, ‘채울문자열’)","fields":{"slug":"/fca55551-dffd-41f3-b218-246c720fba8b/"},"frontmatter":{"categories":"Javascript Syntax","title":"문자열 채우기","date":"April 22, 2023"}},"next":{"fields":{"slug":"/f822356d-1332-42ff-b90f-9ea5962f5bee/"}},"previous":{"fields":{"slug":"/1efb1c19-8f8b-45ba-8f6e-395b853788a7/"}}},{"node":{"id":"61a64521-9b0a-59d6-ab6d-7e4fb562ae18","excerpt":"우선 코드를 먼저 보고 시작합시다. 라는 코드를 보면 어떤 결과가 나올 것 같은가? 결과는  가 나왔다. 그럼 이 코드는 어떤 결과가 나올 것 같은가? 결과는 error가 발생하고,\n 라는 에러메세지를 반환했다. 왜 결과가 다른 건가? var는 hoisting이라는 것을 하는데, 변수를 먼저 프로그램이 실행되기 전에, 변수를 선언을 먼저한다. 그 다음 초기화하는 문장이 나오고 결과가 나오게 되는 것이다. 첫번째 코드 같은 경우는  이 먼저 선언이 됨. 을 함, 그러나 초기화 값은 없음. 결과는  두번째 코드의 경우 선언이 되어있는 않은 을  한 것이다.","fields":{"slug":"/f822356d-1332-42ff-b90f-9ea5962f5bee/"},"frontmatter":{"categories":"Javascript Syntax","title":"Temporal Dead Zone","date":"April 22, 2023"}},"next":{"fields":{"slug":"/e8b8799d-ee54-48ce-903b-f43dbe7683dc/"}},"previous":{"fields":{"slug":"/fca55551-dffd-41f3-b218-246c720fba8b/"}}},{"node":{"id":"7b91e546-04c8-51cb-9105-0a4a17de2a78","excerpt":"ES2020에서 추가된  (널 병합) 연산자와  (옵셔널 체이닝) 널 병합 연산자는 주로 || 연산자 대용으로 사용되며, falsy 값(, , , , , ) 중 과 만 따로 구분합니다. ,  만 따로 구분하므로, falsy중에서 의도를 가지고 있는 값을 제외하고 처리를 할 수 있다. 옵셔널 체이닝은 이나 의 속성을 조회하는 경우 에러가 발생하는 것을 막습니다.","fields":{"slug":"/e8b8799d-ee54-48ce-903b-f43dbe7683dc/"},"frontmatter":{"categories":"Javascript Syntax","title":"Nullish coalescing / Optional chaining","date":"April 22, 2023"}},"next":{"fields":{"slug":"/e4f984c7-4ed6-460c-832b-87df7487951d/"}},"previous":{"fields":{"slug":"/f822356d-1332-42ff-b90f-9ea5962f5bee/"}}},{"node":{"id":"57c0d00e-c25b-5c12-8ff7-499cf8220673","excerpt":"변환 및 구현","fields":{"slug":"/e4f984c7-4ed6-460c-832b-87df7487951d/"},"frontmatter":{"categories":"Javascript Syntax","title":"Destructing assignment","date":"April 22, 2023"}},"next":{"fields":{"slug":"/b29bf411-7a41-45bb-8fa4-4eba97ef09a4/"}},"previous":{"fields":{"slug":"/e8b8799d-ee54-48ce-903b-f43dbe7683dc/"}}},{"node":{"id":"7fe2fe62-2999-516f-b1ed-4be253d84453","excerpt":"호이스팅이란? 코드가 실행되기 전, 컴파일 단계에서 변수 및 함수 선언을 각 범위의 맨 위로 이동하는 동작을 의미한다. 이게 무슨 말이냐면,\n변수와 함수가 동일한 범위 내에 선언되어 있다면 선언되기 전에 사용할 수 있다는 것이다. 함수 선언식 1 위 코드에서는 함수가 선언되기 전, 코드가 실행되었다. 호이스팅의 발생이 이 코드가 실행가능하게 하는 것이다. 함수 표현식 1 이 경우에도 함수가 호이스팅되어 객체가 선언되기 이전에 함수를 호출할 수 있다. 함수 표현식 2 은 호이스팅되어 코드 상단으로 이동하지만 할당단 함수 는 호이스팅되지 않으므로 을 호출하면 가 출력됩니다.","fields":{"slug":"/b29bf411-7a41-45bb-8fa4-4eba97ef09a4/"},"frontmatter":{"categories":"Javascript Syntax","title":"Hoisting","date":"April 22, 2023"}},"next":{"fields":{"slug":"/6e5f80d3-058b-44cf-be81-d7b94b45e55b/"}},"previous":{"fields":{"slug":"/e4f984c7-4ed6-460c-832b-87df7487951d/"}}},{"node":{"id":"1aabb4fe-f45b-551e-a87d-a18549774d55","excerpt":"이렇게 사용할 수 있다. 예시 코드 1  연산자를 사용하면 아주 간단하게 처리가 가능하다. 예시 코드 2 movie.id is number id is string (Raw input)","fields":{"slug":"/6e5f80d3-058b-44cf-be81-d7b94b45e55b/"},"frontmatter":{"categories":"Javascript Syntax","title":"문자열을 간단하게 정수로 변환하기","date":"April 22, 2023"}},"next":{"fields":{"slug":"/3cd3102e-7494-4af2-a4d4-5a7a7acfc600/"}},"previous":{"fields":{"slug":"/b29bf411-7a41-45bb-8fa4-4eba97ef09a4/"}}},{"node":{"id":"69928e72-974b-5186-b945-504dbd956277","excerpt":"nbv","fields":{"slug":"/3cd3102e-7494-4af2-a4d4-5a7a7acfc600/"},"frontmatter":{"categories":"Javascript Syntax","title":"함수와 함수호출, 고차함수","date":"April 22, 2023"}},"next":{"fields":{"slug":"/5fd92d80-4ede-42f4-a15c-6f6f6fd73b06/"}},"previous":{"fields":{"slug":"/6e5f80d3-058b-44cf-be81-d7b94b45e55b/"}}}]}},"staticQueryHashes":["1073350324","1956554647","2938748437"],"slicesMap":{}}
{"componentChunkName":"component---src-templates-blog-template-js","path":"/7fa2310b-3196-4df0-ae85-57dd50eccf39/","result":{"data":{"cur":{"id":"e71076a7-1510-5894-a040-88d6cc4d2c58","html":"<h1 id=\"상속이란\" style=\"position:relative;\"><a href=\"#%EC%83%81%EC%86%8D%EC%9D%B4%EB%9E%80\" aria-label=\"상속이란 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>상속이란</h1>\n<p>객체 지향 프로그래밍에서,\n객체들 간의 관계를 구축하는 방법이다.</p>\n<p>기존의 클래스로부터 속성과 동작을 상속받을 수 있다.</p>\n<h2 id=\"상속의-장점\" style=\"position:relative;\"><a href=\"#%EC%83%81%EC%86%8D%EC%9D%98-%EC%9E%A5%EC%A0%90\" aria-label=\"상속의 장점 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>상속의 장점</h2>\n<ul>\n<li>코드의 재사용성을 높일 수 있다.</li>\n<li>프로그램의 구조를 더욱 직관적으로 파악할 수 있다.</li>\n<li>코드의 중복을 줄여, 유지보수가 용이해진다.</li>\n</ul>\n<h2 id=\"상속의-주의점\" style=\"position:relative;\"><a href=\"#%EC%83%81%EC%86%8D%EC%9D%98-%EC%A3%BC%EC%9D%98%EC%A0%90\" aria-label=\"상속의 주의점 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>상속의 주의점</h2>\n<ul>\n<li>상위 클래스에서 변경이 일어나면 하위 클래스에서도 동시에 변경사항이 적용된다.\n<ul>\n<li>클래스간의 의존성이 높아져서 코드의 복잡도가 높아질 수 있다.</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"상속의-예\" style=\"position:relative;\"><a href=\"#%EC%83%81%EC%86%8D%EC%9D%98-%EC%98%88\" aria-label=\"상속의 예 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>상속의 예</h2>\n<table>\n<thead>\n<tr>\n<th>부모</th>\n<th>자식</th>\n<th>자식의 자식</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>학생</td>\n<td>대학생</td>\n<td></td>\n</tr>\n<tr>\n<td>물건</td>\n<td>책</td>\n<td>전자책</td>\n</tr>\n<tr>\n<td>차량</td>\n<td>승용차</td>\n<td></td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"상속과-생성자\" style=\"position:relative;\"><a href=\"#%EC%83%81%EC%86%8D%EA%B3%BC-%EC%83%9D%EC%84%B1%EC%9E%90\" aria-label=\"상속과 생성자 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>상속과 생성자</h2>\n<p>자식클래스가 생성될 때 부모 생성자가 호출된다.</p>\n<p>이 때 지정(명시적호출)하지 않으면 default 생성자가 묵시적으로 호출된다.</p>","excerpt":"상속이란 객체 지향 프로그래밍에서,\n객체들 간의 관계를 구축하는 방법이다. 기존의 클래스로부터 속성과 동작을 상속받을 수 있다. 상속의 장점 코드의 재사용성을 높일 수 있다. 프로그램의 구조를 더욱 직관적으로 파악할 수 있다. 코드의 중복을 줄여, 유지보수가 용이해진다. 상속의 주의점 상위 클래스에서 변경이 일어나면 하위 클래스에서도 동시에 변경사항이 적용된다. 클래스간의 의존성이 높아져서 코드의 복잡도가 높아질 수 있다. 상속의 예 부모 자식 자식의 자식 학생 대학생  물건 책 전자책 차량 승용차  상속과 생성자 자식클래스가 생성될 때 부모 생성자가 호출된다. 이 때 지정(명시적호출)하지 않으면 default 생성자가 묵시적으로 호출된다.","frontmatter":{"date":"April 22, 2023","title":"Inheritance","categories":"Java Learning","author":"Juhyeon Lee","emoji":null},"fields":{"slug":"/7fa2310b-3196-4df0-ae85-57dd50eccf39/"}},"next":{"id":"4bd84cda-cb5f-567f-b454-0c4a8985bfe3","html":"<h1 id=\"생성자\" style=\"position:relative;\"><a href=\"#%EC%83%9D%EC%84%B1%EC%9E%90\" aria-label=\"생성자 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>생성자</h1>\n<p>객체를 생성할 때 호출되는 특별한 메소드이다.</p>\n<p>객체를 초기화하고 필요한 초기값을 설정하는 역할을 한다.</p>\n<h2 id=\"특징\" style=\"position:relative;\"><a href=\"#%ED%8A%B9%EC%A7%95\" aria-label=\"특징 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>특징</h2>\n<ol>\n<li>생성자는 <strong>클래스 이름과 동일</strong></li>\n<li><strong>반환 값이 없다.</strong></li>\n<li>객체가 생성될 때 <strong>자동으로 호출</strong>된다.</li>\n<li>객체를 초기화하고 필요한 <strong>초기값을 설정</strong>하는 역할을 한다.</li>\n</ol>\n<ul>\n<li>모든 클래스에 반드시 1개 이상 존재한다.\n<ul>\n<li>개발자가 구현해주지 않으면 Java가 기본으로 <strong>자동 생성</strong>해준다.</li>\n<li>매개변수가 없는 생성자는 <code class=\"language-text\">default constructor</code> 라고 부른다.</li>\n</ul>\n</li>\n<li>여러개의 경우는 <strong>오버로딩</strong>으로, 매개변수를 받아 초기화하는 방법이 달라질 수 있다.</li>\n</ul>","frontmatter":{"date":"April 22, 2023","title":"Constructor","categories":"Java Learning","author":"Juhyeon Lee","emoji":null},"fields":{"slug":"/75aa672b-6d21-49e3-9627-948548f32f89/"}},"prev":{"id":"f99edb00-7347-56e2-981f-50215140571f","html":"<h1 id=\"interface\" style=\"position:relative;\"><a href=\"#interface\" aria-label=\"interface permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Interface</h1>\n<h2 id=\"features\" style=\"position:relative;\"><a href=\"#features\" aria-label=\"features permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>features</h2>\n<ul>\n<li>추상 메서드만 가진다.</li>\n<li><code class=\"language-text\">Instance</code> 를 만들 수 없다.</li>\n<li>클래스처럼 데이터 타입으로 사용될 수 있다.</li>\n<li><code class=\"language-text\">implements</code> 키워드를 사용하여 클래스의 추상메서드를 구현시킨다.</li>\n</ul>","frontmatter":{"date":"April 22, 2023","title":"interface","categories":"Java Learning","author":"Juhyeon Lee","emoji":null},"fields":{"slug":"/9e63fbe5-d50a-4483-bcbb-670df91507a0/"}},"site":{"siteMetadata":{"siteUrl":"https://d556f8.netlify.io","comments":{"utterances":{"repo":"d556f8/d556f8-devlog"}}}}},"pageContext":{"slug":"/7fa2310b-3196-4df0-ae85-57dd50eccf39/","nextSlug":"/75aa672b-6d21-49e3-9627-948548f32f89/","prevSlug":"/9e63fbe5-d50a-4483-bcbb-670df91507a0/"}},"staticQueryHashes":["1073350324","1956554647","2938748437"],"slicesMap":{}}